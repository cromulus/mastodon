{"version":3,"sources":["webpack:///./node_modules/@material-symbols/svg-600/outlined/volume_off.svg","webpack:///./app/javascript/mastodon/features/mutes/index.jsx"],"names":["_path","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","SvgVolumeOff","_ref","title","titleId","props","xmlns","width","height","viewBox","id","d","messages","defineMessages","heading","defaultMessage","Mutes","ImmutablePureComponent","constructor","_defineProperty","_debounce","dispatch","expandMutes","leading","UNSAFE_componentWillMount","fetchMutes","render","intl","hasMore","accountIds","multiColumn","isLoading","_jsx","Column","LoadingIndicator","emptyMessage","FormattedMessage","bindToDocument","icon","iconComponent","VolumeOffIcon","formatMessage","alwaysShowBackButton","ScrollableList","scrollKey","onLoadMore","handleLoadMore","map","AccountContainer","defaultAction","Helmet","name","content","params","PropTypes","object","isRequired","func","bool","ImmutablePropTypes","list","connect","state","getIn","injectIntl"],"mappings":"wGAAIA,E,sHACJ,SAASC,IAAiS,OAApRA,EAAWC,OAAOC,OAASD,OAAOC,OAAOC,OAAS,SAAUC,GAAU,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAAE,IAAIG,EAASF,UAAUD,GAAI,IAAK,IAAII,KAAOD,EAAcP,OAAOS,UAAUC,eAAeC,KAAKJ,EAAQC,KAAQL,EAAOK,GAAOD,EAAOC,GAAU,CAAE,OAAOL,CAAQ,EAAUJ,EAASa,MAAMC,KAAMR,UAAY,CAElV,SAASS,EAAaC,GACpB,IAAI,MACFC,EAAK,QACLC,KACGC,GACDH,EACJ,OAAoB,gBAAoB,MAAOhB,EAAS,CACtDoB,MAAO,6BACPC,MAAO,GACPC,OAAQ,GACRC,QAAS,iBACT,kBAAmBL,GAClBC,GAAQF,EAAqB,gBAAoB,QAAS,CAC3DO,GAAIN,GACHD,GAAS,KAAMlB,IAAUA,EAAqB,gBAAoB,OAAQ,CAC3E0B,EAAG,oxBAEP,CACe,Q,6CCFf,MAAMC,EAAWC,YAAe,CAC9BC,QAAS,CAAEJ,GAAG,eAAiBK,eAAe,iBAShD,MAAMC,UAAcC,IAAuBC,cAAA,SAAA1B,WAAA2B,YAAA,sBAgBxBC,KAAS,KACxBpB,KAAKK,MAAMgB,SAASC,cAAc,GACjC,IAAK,CAAEC,SAAS,IAAO,CAN1BC,4BACExB,KAAKK,MAAMgB,SAASI,cACtB,CAMAC,SACE,MAAM,KAAEC,EAAI,QAAEC,EAAO,WAAEC,EAAU,YAAEC,EAAW,UAAEC,GAAc/B,KAAKK,MAEnE,IAAKwB,EACH,OACEG,YAACC,IAAM,UACLD,YAACE,IAAgB,KAKvB,MAAMC,EAAeH,YAACI,IAAgB,CAAC1B,GAAE,qBAAsBK,eAAe,qCAE9E,OACEiB,YAACC,IAAM,CAACI,gBAAiBP,EAAaQ,KAAK,aAAaC,cAAeC,EAAe1B,QAASa,EAAKc,cAAc7B,EAASE,SAAU4B,sBAAoB,UACvJV,YAACW,IAAc,CACbC,UAAU,QACVC,WAAY7C,KAAK8C,eACjBlB,QAASA,EACTG,UAAWA,EACXI,aAAcA,EACdE,gBAAiBP,QAAY,EAE5BD,EAAWkB,KAAIrC,GACdsB,YAACgB,IAAgB,CAAUtC,GAAIA,EAAIuC,cAAc,QAA1BvC,MAI3BsB,YAACkB,IAAM,UACLlB,YAAA,QAAMmB,KAAK,SAASC,QAAQ,aAIpC,EAEDjC,YAvDKH,EAAK,YAEU,CACjBqC,OAAQC,IAAUC,OAAOC,WACzBnC,SAAUiC,IAAUG,KAAKD,WACzB5B,QAAS0B,IAAUI,KACnB3B,UAAWuB,IAAUI,KACrB7B,WAAY8B,IAAmBC,KAC/BjC,KAAM2B,IAAUC,OAAOC,WACvB1B,YAAawB,IAAUI,OAgDZG,6BA/DSC,IAAK,CAC3BjC,WAAYiC,EAAMC,MAAM,CAAC,aAAc,QAAS,UAChDnC,UAAWkC,EAAMC,MAAM,CAAC,aAAc,QAAS,SAC/ChC,UAAW+B,EAAMC,MAAM,CAAC,aAAc,QAAS,cAAc,MA4DhDF,CAAyBG,YAAWhD,G","file":"js/features/mutes-5d15d9f0abc4920ab564.chunk.js","sourcesContent":["var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgVolumeOff(_ref) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 48,\n    height: 48,\n    viewBox: \"0 -960 960 960\",\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M817.522-42.434 684.391-176.13q-26.304 18.304-56.825 31.674-30.522 13.369-63.826 20.804V-193q19.043-5.87 37.717-12.956 18.673-7.087 34.847-19.392L483.74-380.043v254.523L263.956-345.869H95.477v-268.827h156.566l-217.174-220 46.957-46.957L865.044-90.956l-47.522 48.522Zm-25.26-241.044L744.74-332.13q20-33.435 29.5-71.076 9.5-37.64 9.5-77.794 0-103.322-60.566-184.379Q662.609-746.435 563.74-769v-69.348q126.261 28.565 206.522 128.326T850.523-481q0 52.696-14.848 102.826-14.848 50.131-43.413 94.696ZM658.827-418.043l-95.087-96.218v-132.826q48.695 23.13 77.739 68.261 29.044 45.13 29.044 98.826 0 16.13-3.066 31.761-3.065 15.63-8.63 30.196ZM483.74-595.391 365.043-715.784 483.74-834.48v239.089Zm-79.784 276.956v-142.087l-73.826-74.391H174.696v109.826h122.608l106.652 106.652Zm-36.913-179Z\"\n  })));\n}\nexport default __webpack_public_path__ + \"media/outlined/volume_off-1b6afd01.svg\";\nexport { SvgVolumeOff as ReactComponent };","import PropTypes from 'prop-types';\n\nimport { defineMessages, injectIntl, FormattedMessage } from 'react-intl';\n\nimport { Helmet } from 'react-helmet';\n\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport { connect } from 'react-redux';\n\nimport { ReactComponent as VolumeOffIcon } from '@material-symbols/svg-600/outlined/volume_off.svg';\nimport { debounce } from 'lodash';\n\nimport { fetchMutes, expandMutes } from '../../actions/mutes';\nimport { LoadingIndicator } from '../../components/loading_indicator';\nimport ScrollableList from '../../components/scrollable_list';\nimport AccountContainer from '../../containers/account_container';\nimport Column from '../ui/components/column';\n\nconst messages = defineMessages({\n  heading: { id: 'column.mutes', defaultMessage: 'Muted users' },\n});\n\nconst mapStateToProps = state => ({\n  accountIds: state.getIn(['user_lists', 'mutes', 'items']),\n  hasMore: !!state.getIn(['user_lists', 'mutes', 'next']),\n  isLoading: state.getIn(['user_lists', 'mutes', 'isLoading'], true),\n});\n\nclass Mutes extends ImmutablePureComponent {\n\n  static propTypes = {\n    params: PropTypes.object.isRequired,\n    dispatch: PropTypes.func.isRequired,\n    hasMore: PropTypes.bool,\n    isLoading: PropTypes.bool,\n    accountIds: ImmutablePropTypes.list,\n    intl: PropTypes.object.isRequired,\n    multiColumn: PropTypes.bool,\n  };\n\n  UNSAFE_componentWillMount () {\n    this.props.dispatch(fetchMutes());\n  }\n\n  handleLoadMore = debounce(() => {\n    this.props.dispatch(expandMutes());\n  }, 300, { leading: true });\n\n  render () {\n    const { intl, hasMore, accountIds, multiColumn, isLoading } = this.props;\n\n    if (!accountIds) {\n      return (\n        <Column>\n          <LoadingIndicator />\n        </Column>\n      );\n    }\n\n    const emptyMessage = <FormattedMessage id='empty_column.mutes' defaultMessage=\"You haven't muted any users yet.\" />;\n\n    return (\n      <Column bindToDocument={!multiColumn} icon='volume-off' iconComponent={VolumeOffIcon} heading={intl.formatMessage(messages.heading)} alwaysShowBackButton>\n        <ScrollableList\n          scrollKey='mutes'\n          onLoadMore={this.handleLoadMore}\n          hasMore={hasMore}\n          isLoading={isLoading}\n          emptyMessage={emptyMessage}\n          bindToDocument={!multiColumn}\n        >\n          {accountIds.map(id =>\n            <AccountContainer key={id} id={id} defaultAction='mute' />,\n          )}\n        </ScrollableList>\n\n        <Helmet>\n          <meta name='robots' content='noindex' />\n        </Helmet>\n      </Column>\n    );\n  }\n\n}\n\nexport default connect(mapStateToProps)(injectIntl(Mutes));\n"],"sourceRoot":""}