{"version":3,"sources":["webpack:///./app/javascript/mastodon/features/status/components/action_bar.jsx","webpack:///./node_modules/@material-symbols/svg-600/outlined/arrow_drop_down.svg","webpack:///./app/javascript/mastodon/components/edited_timestamp/containers/dropdown_menu_container.js","webpack:///./app/javascript/mastodon/components/edited_timestamp/index.jsx","webpack:///./app/javascript/mastodon/features/status/components/detailed_status.jsx","webpack:///./app/javascript/mastodon/features/status/index.jsx"],"names":["messages","defineMessages","delete","id","defaultMessage","redraft","edit","direct","mention","reply","reblog","reblog_private","cancel_reblog_private","cannot_reblog","favourite","bookmark","more","mute","muteConversation","unmuteConversation","block","report","share","pin","unpin","embed","admin_account","admin_status","admin_domain","copy","blockDomain","unblockDomain","unmute","unblock","openOriginalPage","ActionBar","PureComponent","constructor","arguments","handleReplyClick","this","props","onReply","status","handleReblogClick","e","onReblog","handleFavouriteClick","onFavourite","handleBookmarkClick","onBookmark","handleDeleteClick","onDelete","history","handleRedraftClick","handleEditClick","onEdit","handleDirectClick","onDirect","get","handleMentionClick","onMention","handleMuteClick","relationship","onMute","onUnmute","account","handleBlockClick","onBlock","onUnblock","handleBlockDomain","onBlockDomain","split","handleUnblockDomain","onUnblockDomain","handleConversationMuteClick","onMuteConversation","handleReport","onReport","handlePinClick","onPin","handleShare","navigator","url","handleEmbed","onEmbed","handleCopy","clipboard","writeText","render","intl","signedIn","permissions","context","identity","publicStatus","includes","pinnableStatus","mutingConversation","writtenByMe","getIn","me","isRemote","replyIcon","replyIconComponent","menu","push","text","formatMessage","href","action","dangerous","name","domain","PERMISSION_MANAGE_USERS","PERMISSION_MANAGE_FEDERATION","ReplyIcon","ReplyAllIcon","reblogPrivate","reblogTitle","_jsx","className","IconButton","title","icon","iconComponent","onClick","classNames","disabled","active","RepeatIcon","animate","StarIcon","StarBorderIcon","BookmarkIcon","BookmarkBorderIcon","DropdownMenuContainer","MoreHorizIcon","items","direction","contextTypes","PropTypes","object","withRouter","_path","connect","mapStateToProps","state","_ref","injectIntl","_extends","Object","assign","bind","target","i","length","source","key","prototype","hasOwnProperty","call","apply","SvgArrowDropDown","titleId","xmlns","width","height","viewBox","d","statusId","openDropdownId","dropdownMenu","openId","openedViaKeyboard","keyboard","loading","mapDispatchToProps","dispatch","_ref2","onOpen","onItemClick","fetchHistory","openDropdownMenu","onClose","closeDropdownMenu","DropdownMenu","EditedTimestamp","handleItemClick","item","renderHeader","FormattedMessage","values","count","size","renderItem","index","onKeyPress","formattedDate","RelativeTimestamp","timestamp","short","formattedName","InlineAccount","accountId","label","date","scrollable","formatDate","hour12","month","day","hour","minute","Icon","ArrowDropDownIcon","openModal","modalType","modalProps","DetailedStatus","ImmutablePureComponent","handleAccountClick","button","ctrlKey","metaKey","preventDefault","stopPropagation","handleOpenVideo","options","onOpenVideo","handleExpandedToggle","onToggleHidden","setRef","c","node","_measureHeight","handleModalLink","nodeName","parentNode","window","open","handleTranslate","onTranslate","heightJustChanged","measureHeight","scheduleIdleTask","setState","Math","ceil","scrollHeight","onHeightChange","componentDidUpdate","prevProps","prevState","_properStatus","getAttachmentAspectRatio","attachments","outerStyle","boxSizing","compact","pictureInPicture","media","applicationLink","reblogLink","reblogIcon","reblogIconComponent","favouriteLink","edited","language","PictureInPicturePlaceholder","aspectRatio","attachment","description","Audio","src","alt","lang","duration","poster","backgroundColor","foregroundColor","accentColor","sensitive","visible","showMedia","blurhash","onToggleVisibility","onToggleMediaVisibility","Video","preview","frameRate","MediaGallery","standalone","onOpenMedia","Card","card","_jsxs","_Fragment","children","rel","visibilityLink","VisibilityIcon","visibility","Link","to","AnimatedNumber","value","statusContentProps","hashtagBar","getHashtagBarForStatus","expanded","style","ref","AlternateEmailIcon","Avatar","DisplayName","localDomain","_jsx2","StatusContent","onExpandedToggle","FormattedDate","Date","year","propTypes","ImmutablePropTypes","map","func","isRequired","bool","string","contains","inUse","available","WithRouterPropTypes","deleteConfirm","deleteMessage","redraftConfirm","redraftMessage","revealAll","hideAll","statusTitleWithAttachments","detailedStatus","replyConfirm","replyMessage","blockDomainConfirm","titleFromStatus","displayName","username","user","trim","attachmentCount","truncate","str","num","arr","Array","from","slice","join","Status","_this","fullscreen","defaultMediaVisibility","loadedStatusId","undefined","handleToggleMediaVisibility","unfavourite","type","handlePin","askReplyConfirmation","message","confirm","onConfirm","replyCompose","handleModalReblog","privacy","unreblog","shiftKey","boostModal","initBoostModal","unbookmark","withRedraft","deleteModal","deleteStatus","editStatus","router","directCompose","mentionCompose","handleOpenMedia","handleHotkeyOpenMedia","startTime","initMuteModal","unmuteStatus","muteStatus","handleToggleHidden","revealStatus","hideStatus","handleToggleAll","ancestorsIds","descendantsIds","statusIds","concat","toJS","undoStatusTranslation","translateStatus","initBlockModal","initReport","handleUnmuteClick","unmuteAccount","handleUnblockClick","unblockAccount","handleBlockDomainClick","handleUnblockDomainClick","handleHotkeyMoveUp","handleMoveUp","handleHotkeyMoveDown","handleMoveDown","handleHotkeyReply","handleHotkeyFavourite","handleHotkeyBoost","handleHotkeyMention","handleHotkeyOpenProfile","handleHotkeyToggleHidden","handleHotkeyToggleSensitive","_selectChild","indexOf","onFullScreenChange","isFullscreen","shouldUpdateScroll","prevRouterProps","_ref3","_location$state","_prevRouterProps$loca","_this$node","location","mastodonModalKey","child","querySelector","offsetTop","UNSAFE_componentWillMount","fetchStatus","params","componentDidMount","attachFullscreenListener","_scrollStatusIntoView","UNSAFE_componentWillReceiveProps","nextProps","align_top","container","element","querySelectorAll","scrollTop","scrollIntoView","clientHeight","offsetHeight","focus","renderChildren","list","ancestors","StatusContainer","onMoveUp","onMoveDown","contextType","previousId","nextId","rootId","multiColumn","requestAnimationFrame","_this$node2","_document$querySelect","offset","document","getBoundingClientRect","bottom","scrollingElement","body","scrollBy","_prevProps$status","componentWillUnmount","detachFullscreenListener","descendants","isLoading","Column","LoadingIndicator","BundleColumnError","errorType","isLocal","isIndexable","handlers","moveUp","moveDown","boost","openProfile","toggleHidden","toggleSensitive","openMedia","bindToDocument","ColumnHeader","showBackButton","extraButton","VisibilityOffIcon","ScrollContainer","scrollKey","HotKeys","tabIndex","textForScreenReader","Helmet","content","makeMapStateToProps","getStatus","makeGetStatus","getPictureInPicture","makeGetPictureInPicture","getAncestorsIds","createSelector","_","inReplyTos","Immutable","List","withMutations","mutable","unshift","getDescendantsIds","contextReplies","statuses","ids","pop","replies","reverse","forEach","insertAt","findIndex","idx","splice"],"mappings":"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","file":"js/features/status-a2b85d13e22e51fd099c.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport classNames from 'classnames';\nimport { withRouter } from 'react-router-dom';\n\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport { connect } from 'react-redux';\n\nimport { ReactComponent as BookmarkIcon } from '@material-symbols/svg-600/outlined/bookmark-fill.svg';\nimport { ReactComponent as BookmarkBorderIcon } from '@material-symbols/svg-600/outlined/bookmark.svg';\nimport { ReactComponent as MoreHorizIcon } from '@material-symbols/svg-600/outlined/more_horiz.svg';\nimport { ReactComponent as RepeatIcon } from '@material-symbols/svg-600/outlined/repeat.svg';\nimport { ReactComponent as ReplyIcon } from '@material-symbols/svg-600/outlined/reply.svg';\nimport { ReactComponent as ReplyAllIcon } from '@material-symbols/svg-600/outlined/reply_all.svg';\nimport { ReactComponent as StarIcon } from '@material-symbols/svg-600/outlined/star-fill.svg';\nimport { ReactComponent as StarBorderIcon } from '@material-symbols/svg-600/outlined/star.svg';\n\nimport { PERMISSION_MANAGE_USERS, PERMISSION_MANAGE_FEDERATION } from 'mastodon/permissions';\nimport { WithRouterPropTypes } from 'mastodon/utils/react_router';\n\nimport { IconButton } from '../../../components/icon_button';\nimport DropdownMenuContainer from '../../../containers/dropdown_menu_container';\nimport { me } from '../../../initial_state';\n\nconst messages = defineMessages({\n  delete: { id: 'status.delete', defaultMessage: 'Delete' },\n  redraft: { id: 'status.redraft', defaultMessage: 'Delete & re-draft' },\n  edit: { id: 'status.edit', defaultMessage: 'Edit' },\n  direct: { id: 'status.direct', defaultMessage: 'Privately mention @{name}' },\n  mention: { id: 'status.mention', defaultMessage: 'Mention @{name}' },\n  reply: { id: 'status.reply', defaultMessage: 'Reply' },\n  reblog: { id: 'status.reblog', defaultMessage: 'Boost' },\n  reblog_private: { id: 'status.reblog_private', defaultMessage: 'Boost with original visibility' },\n  cancel_reblog_private: { id: 'status.cancel_reblog_private', defaultMessage: 'Unboost' },\n  cannot_reblog: { id: 'status.cannot_reblog', defaultMessage: 'This post cannot be boosted' },\n  favourite: { id: 'status.favourite', defaultMessage: 'Favorite' },\n  bookmark: { id: 'status.bookmark', defaultMessage: 'Bookmark' },\n  more: { id: 'status.more', defaultMessage: 'More' },\n  mute: { id: 'status.mute', defaultMessage: 'Mute @{name}' },\n  muteConversation: { id: 'status.mute_conversation', defaultMessage: 'Mute conversation' },\n  unmuteConversation: { id: 'status.unmute_conversation', defaultMessage: 'Unmute conversation' },\n  block: { id: 'status.block', defaultMessage: 'Block @{name}' },\n  report: { id: 'status.report', defaultMessage: 'Report @{name}' },\n  share: { id: 'status.share', defaultMessage: 'Share' },\n  pin: { id: 'status.pin', defaultMessage: 'Pin on profile' },\n  unpin: { id: 'status.unpin', defaultMessage: 'Unpin from profile' },\n  embed: { id: 'status.embed', defaultMessage: 'Embed' },\n  admin_account: { id: 'status.admin_account', defaultMessage: 'Open moderation interface for @{name}' },\n  admin_status: { id: 'status.admin_status', defaultMessage: 'Open this post in the moderation interface' },\n  admin_domain: { id: 'status.admin_domain', defaultMessage: 'Open moderation interface for {domain}' },\n  copy: { id: 'status.copy', defaultMessage: 'Copy link to post' },\n  blockDomain: { id: 'account.block_domain', defaultMessage: 'Block domain {domain}' },\n  unblockDomain: { id: 'account.unblock_domain', defaultMessage: 'Unblock domain {domain}' },\n  unmute: { id: 'account.unmute', defaultMessage: 'Unmute @{name}' },\n  unblock: { id: 'account.unblock', defaultMessage: 'Unblock @{name}' },\n  openOriginalPage: { id: 'account.open_original_page', defaultMessage: 'Open original page' },\n});\n\nconst mapStateToProps = (state, { status }) => ({\n  relationship: state.getIn(['relationships', status.getIn(['account', 'id'])]),\n});\n\nclass ActionBar extends PureComponent {\n\n  static contextTypes = {\n    identity: PropTypes.object,\n  };\n\n  static propTypes = {\n    status: ImmutablePropTypes.map.isRequired,\n    relationship: ImmutablePropTypes.map,\n    onReply: PropTypes.func.isRequired,\n    onReblog: PropTypes.func.isRequired,\n    onFavourite: PropTypes.func.isRequired,\n    onBookmark: PropTypes.func.isRequired,\n    onDelete: PropTypes.func.isRequired,\n    onEdit: PropTypes.func.isRequired,\n    onDirect: PropTypes.func.isRequired,\n    onMention: PropTypes.func.isRequired,\n    onMute: PropTypes.func,\n    onUnmute: PropTypes.func,\n    onBlock: PropTypes.func,\n    onUnblock: PropTypes.func,\n    onBlockDomain: PropTypes.func,\n    onUnblockDomain: PropTypes.func,\n    onMuteConversation: PropTypes.func,\n    onReport: PropTypes.func,\n    onPin: PropTypes.func,\n    onEmbed: PropTypes.func,\n    intl: PropTypes.object.isRequired,\n    ...WithRouterPropTypes,\n  };\n\n  handleReplyClick = () => {\n    this.props.onReply(this.props.status);\n  };\n\n  handleReblogClick = (e) => {\n    this.props.onReblog(this.props.status, e);\n  };\n\n  handleFavouriteClick = () => {\n    this.props.onFavourite(this.props.status);\n  };\n\n  handleBookmarkClick = (e) => {\n    this.props.onBookmark(this.props.status, e);\n  };\n\n  handleDeleteClick = () => {\n    this.props.onDelete(this.props.status, this.props.history);\n  };\n\n  handleRedraftClick = () => {\n    this.props.onDelete(this.props.status, this.props.history, true);\n  };\n\n  handleEditClick = () => {\n    this.props.onEdit(this.props.status, this.props.history);\n  };\n\n  handleDirectClick = () => {\n    this.props.onDirect(this.props.status.get('account'), this.props.history);\n  };\n\n  handleMentionClick = () => {\n    this.props.onMention(this.props.status.get('account'), this.props.history);\n  };\n\n  handleMuteClick = () => {\n    const { status, relationship, onMute, onUnmute } = this.props;\n    const account = status.get('account');\n\n    if (relationship && relationship.get('muting')) {\n      onUnmute(account);\n    } else {\n      onMute(account);\n    }\n  };\n\n  handleBlockClick = () => {\n    const { status, relationship, onBlock, onUnblock } = this.props;\n    const account = status.get('account');\n\n    if (relationship && relationship.get('blocking')) {\n      onUnblock(account);\n    } else {\n      onBlock(status);\n    }\n  };\n\n  handleBlockDomain = () => {\n    const { status, onBlockDomain } = this.props;\n    const account = status.get('account');\n\n    onBlockDomain(account.get('acct').split('@')[1]);\n  };\n\n  handleUnblockDomain = () => {\n    const { status, onUnblockDomain } = this.props;\n    const account = status.get('account');\n\n    onUnblockDomain(account.get('acct').split('@')[1]);\n  };\n\n  handleConversationMuteClick = () => {\n    this.props.onMuteConversation(this.props.status);\n  };\n\n  handleReport = () => {\n    this.props.onReport(this.props.status);\n  };\n\n  handlePinClick = () => {\n    this.props.onPin(this.props.status);\n  };\n\n  handleShare = () => {\n    navigator.share({\n      url: this.props.status.get('url'),\n    });\n  };\n\n  handleEmbed = () => {\n    this.props.onEmbed(this.props.status);\n  };\n\n  handleCopy = () => {\n    const url = this.props.status.get('url');\n    navigator.clipboard.writeText(url);\n  };\n\n  render () {\n    const { status, relationship, intl } = this.props;\n    const { signedIn, permissions } = this.context.identity;\n\n    const publicStatus       = ['public', 'unlisted'].includes(status.get('visibility'));\n    const pinnableStatus     = ['public', 'unlisted', 'private'].includes(status.get('visibility'));\n    const mutingConversation = status.get('muted');\n    const account            = status.get('account');\n    const writtenByMe        = status.getIn(['account', 'id']) === me;\n    const isRemote           = status.getIn(['account', 'username']) !== status.getIn(['account', 'acct']);\n\n    let menu = [];\n\n    if (publicStatus && isRemote) {\n      menu.push({ text: intl.formatMessage(messages.openOriginalPage), href: status.get('url') });\n    }\n\n    menu.push({ text: intl.formatMessage(messages.copy), action: this.handleCopy });\n\n    if (publicStatus && 'share' in navigator) {\n      menu.push({ text: intl.formatMessage(messages.share), action: this.handleShare });\n    }\n\n    if (publicStatus && (signedIn || !isRemote)) {\n      menu.push({ text: intl.formatMessage(messages.embed), action: this.handleEmbed });\n    }\n\n    if (signedIn) {\n      menu.push(null);\n\n      if (writtenByMe) {\n        if (pinnableStatus) {\n          menu.push({ text: intl.formatMessage(status.get('pinned') ? messages.unpin : messages.pin), action: this.handlePinClick });\n          menu.push(null);\n        }\n\n        menu.push({ text: intl.formatMessage(mutingConversation ? messages.unmuteConversation : messages.muteConversation), action: this.handleConversationMuteClick });\n        menu.push(null);\n        menu.push({ text: intl.formatMessage(messages.edit), action: this.handleEditClick });\n        menu.push({ text: intl.formatMessage(messages.delete), action: this.handleDeleteClick, dangerous: true });\n        menu.push({ text: intl.formatMessage(messages.redraft), action: this.handleRedraftClick, dangerous: true });\n      } else {\n        menu.push({ text: intl.formatMessage(messages.mention, { name: status.getIn(['account', 'username']) }), action: this.handleMentionClick });\n        menu.push(null);\n\n        if (relationship && relationship.get('muting')) {\n          menu.push({ text: intl.formatMessage(messages.unmute, { name: account.get('username') }), action: this.handleMuteClick });\n        } else {\n          menu.push({ text: intl.formatMessage(messages.mute, { name: account.get('username') }), action: this.handleMuteClick, dangerous: true });\n        }\n\n        if (relationship && relationship.get('blocking')) {\n          menu.push({ text: intl.formatMessage(messages.unblock, { name: account.get('username') }), action: this.handleBlockClick });\n        } else {\n          menu.push({ text: intl.formatMessage(messages.block, { name: account.get('username') }), action: this.handleBlockClick, dangerous: true });\n        }\n\n        menu.push({ text: intl.formatMessage(messages.report, { name: status.getIn(['account', 'username']) }), action: this.handleReport, dangerous: true });\n\n        if (account.get('acct') !== account.get('username')) {\n          const domain = account.get('acct').split('@')[1];\n\n          menu.push(null);\n\n          if (relationship && relationship.get('domain_blocking')) {\n            menu.push({ text: intl.formatMessage(messages.unblockDomain, { domain }), action: this.handleUnblockDomain });\n          } else {\n            menu.push({ text: intl.formatMessage(messages.blockDomain, { domain }), action: this.handleBlockDomain, dangerous: true });\n          }\n        }\n\n        if ((permissions & PERMISSION_MANAGE_USERS) === PERMISSION_MANAGE_USERS || (isRemote && (permissions & PERMISSION_MANAGE_FEDERATION) === PERMISSION_MANAGE_FEDERATION)) {\n          menu.push(null);\n          if ((permissions & PERMISSION_MANAGE_USERS) === PERMISSION_MANAGE_USERS) {\n            menu.push({ text: intl.formatMessage(messages.admin_account, { name: status.getIn(['account', 'username']) }), href: `/admin/accounts/${status.getIn(['account', 'id'])}` });\n            menu.push({ text: intl.formatMessage(messages.admin_status), href: `/admin/accounts/${status.getIn(['account', 'id'])}/statuses/${status.get('id')}` });\n          }\n          if (isRemote && (permissions & PERMISSION_MANAGE_FEDERATION) === PERMISSION_MANAGE_FEDERATION) {\n            const domain = account.get('acct').split('@')[1];\n            menu.push({ text: intl.formatMessage(messages.admin_domain, { domain: domain }), href: `/admin/instances/${domain}` });\n          }\n        }\n      }\n    }\n\n    let replyIcon;\n    let replyIconComponent;\n    if (status.get('in_reply_to_id', null) === null) {\n      replyIcon = 'reply';\n      replyIconComponent = ReplyIcon;\n    } else {\n      replyIcon = 'reply-all';\n      replyIconComponent = ReplyAllIcon;\n    }\n\n    const reblogPrivate = status.getIn(['account', 'id']) === me && status.get('visibility') === 'private';\n\n    let reblogTitle;\n    if (status.get('reblogged')) {\n      reblogTitle = intl.formatMessage(messages.cancel_reblog_private);\n    } else if (publicStatus) {\n      reblogTitle = intl.formatMessage(messages.reblog);\n    } else if (reblogPrivate) {\n      reblogTitle = intl.formatMessage(messages.reblog_private);\n    } else {\n      reblogTitle = intl.formatMessage(messages.cannot_reblog);\n    }\n\n    return (\n      <div className='detailed-status__action-bar'>\n        <div className='detailed-status__button'><IconButton title={intl.formatMessage(messages.reply)} icon={status.get('in_reply_to_account_id') === status.getIn(['account', 'id']) ? 'reply' : replyIcon} iconComponent={status.get('in_reply_to_account_id') === status.getIn(['account', 'id']) ? ReplyIcon : replyIconComponent}  onClick={this.handleReplyClick} /></div>\n        <div className='detailed-status__button'><IconButton className={classNames({ reblogPrivate })} disabled={!publicStatus && !reblogPrivate} active={status.get('reblogged')} title={reblogTitle} icon='retweet' iconComponent={RepeatIcon} onClick={this.handleReblogClick} /></div>\n        <div className='detailed-status__button'><IconButton className='star-icon' animate active={status.get('favourited')} title={intl.formatMessage(messages.favourite)} icon='star' iconComponent={status.get('favourited') ? StarIcon : StarBorderIcon} onClick={this.handleFavouriteClick} /></div>\n        <div className='detailed-status__button'><IconButton className='bookmark-icon' disabled={!signedIn} active={status.get('bookmarked')} title={intl.formatMessage(messages.bookmark)} icon='bookmark' iconComponent={status.get('bookmarked') ? BookmarkIcon : BookmarkBorderIcon} onClick={this.handleBookmarkClick} /></div>\n\n        <div className='detailed-status__action-bar-dropdown'>\n          <DropdownMenuContainer icon='ellipsis-h' iconComponent={MoreHorizIcon} status={status} items={menu} direction='left' title={intl.formatMessage(messages.more)} />\n        </div>\n      </div>\n    );\n  }\n\n}\n\nexport default withRouter(connect(mapStateToProps)(injectIntl(ActionBar)));\n","var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgArrowDropDown(_ref) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 48,\n    height: 48,\n    viewBox: \"0 -960 960 960\",\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M480-346.434 256.825-568.609h446.35L480-346.434Z\"\n  })));\n}\nexport default __webpack_public_path__ + \"media/outlined/arrow_drop_down-9305c16d.svg\";\nexport { SvgArrowDropDown as ReactComponent };","import { connect } from 'react-redux';\n\nimport { openDropdownMenu, closeDropdownMenu } from 'mastodon/actions/dropdown_menu';\nimport { fetchHistory } from 'mastodon/actions/history';\nimport DropdownMenu from 'mastodon/components/dropdown_menu';\n\n/**\n *\n * @param {import('mastodon/store').RootState} state\n * @param {*} props\n */\nconst mapStateToProps = (state, { statusId }) => ({\n  openDropdownId: state.dropdownMenu.openId,\n  openedViaKeyboard: state.dropdownMenu.keyboard,\n  items: state.getIn(['history', statusId, 'items']),\n  loading: state.getIn(['history', statusId, 'loading']),\n});\n\nconst mapDispatchToProps = (dispatch, { statusId }) => ({\n\n  onOpen (id, onItemClick, keyboard) {\n    dispatch(fetchHistory(statusId));\n    dispatch(openDropdownMenu({ id, keyboard }));\n  },\n\n  onClose (id) {\n    dispatch(closeDropdownMenu({ id }));\n  },\n\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DropdownMenu);\n","import PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport { FormattedMessage, injectIntl } from 'react-intl';\n\nimport { connect } from 'react-redux';\n\nimport { ReactComponent as ArrowDropDownIcon } from '@material-symbols/svg-600/outlined/arrow_drop_down.svg';\n\nimport { openModal } from 'mastodon/actions/modal';\nimport { Icon }  from 'mastodon/components/icon';\nimport InlineAccount from 'mastodon/components/inline_account';\nimport { RelativeTimestamp } from 'mastodon/components/relative_timestamp';\n\nimport DropdownMenu from './containers/dropdown_menu_container';\n\nconst mapDispatchToProps = (dispatch, { statusId }) => ({\n\n  onItemClick (index) {\n    dispatch(openModal({\n      modalType: 'COMPARE_HISTORY',\n      modalProps: { index, statusId },\n    }));\n  },\n\n});\n\nclass EditedTimestamp extends PureComponent {\n\n  static propTypes = {\n    statusId: PropTypes.string.isRequired,\n    timestamp: PropTypes.string.isRequired,\n    intl: PropTypes.object.isRequired,\n    onItemClick: PropTypes.func.isRequired,\n  };\n\n  handleItemClick = (item, i) => {\n    const { onItemClick } = this.props;\n    onItemClick(i);\n  };\n\n  renderHeader = items => {\n    return (\n      <FormattedMessage id='status.edited_x_times' defaultMessage='Edited {count, plural, one {# time} other {# times}}' values={{ count: items.size - 1 }} />\n    );\n  };\n\n  renderItem = (item, index, { onClick, onKeyPress }) => {\n    const formattedDate = <RelativeTimestamp timestamp={item.get('created_at')} short={false} />;\n    const formattedName = <InlineAccount accountId={item.get('account')} />;\n\n    const label = item.get('original') ? (\n      <FormattedMessage id='status.history.created' defaultMessage='{name} created {date}' values={{ name: formattedName, date: formattedDate }} />\n    ) : (\n      <FormattedMessage id='status.history.edited' defaultMessage='{name} edited {date}' values={{ name: formattedName, date: formattedDate }} />\n    );\n\n    return (\n      <li className='dropdown-menu__item edited-timestamp__history__item' key={item.get('created_at')}>\n        <button data-index={index} onClick={onClick} onKeyPress={onKeyPress}>{label}</button>\n      </li>\n    );\n  };\n\n  render () {\n    const { timestamp, intl, statusId } = this.props;\n\n    return (\n      <DropdownMenu statusId={statusId} renderItem={this.renderItem} scrollable renderHeader={this.renderHeader} onItemClick={this.handleItemClick}>\n        <button className='dropdown-menu__text-button'>\n          <FormattedMessage id='status.edited' defaultMessage='Edited {date}' values={{ date: intl.formatDate(timestamp, { hour12: false, month: 'short', day: '2-digit', hour: '2-digit', minute: '2-digit' }) }} /> <Icon id='caret-down' icon={ArrowDropDownIcon} />\n        </button>\n      </DropdownMenu>\n    );\n  }\n\n}\n\nexport default connect(null, mapDispatchToProps)(injectIntl(EditedTimestamp));\n","import PropTypes from 'prop-types';\n\nimport { FormattedDate, FormattedMessage } from 'react-intl';\n\nimport classNames from 'classnames';\nimport { Link, withRouter } from 'react-router-dom';\n\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\n\nimport { ReactComponent as AlternateEmailIcon } from '@material-symbols/svg-600/outlined/alternate_email.svg';\nimport { ReactComponent as RepeatIcon } from '@material-symbols/svg-600/outlined/repeat.svg';\nimport { ReactComponent as StarIcon } from '@material-symbols/svg-600/outlined/star-fill.svg';\n\nimport { AnimatedNumber } from 'mastodon/components/animated_number';\nimport EditedTimestamp from 'mastodon/components/edited_timestamp';\nimport { getHashtagBarForStatus } from 'mastodon/components/hashtag_bar';\nimport { Icon }  from 'mastodon/components/icon';\nimport PictureInPicturePlaceholder from 'mastodon/components/picture_in_picture_placeholder';\nimport { VisibilityIcon } from 'mastodon/components/visibility_icon';\nimport { WithRouterPropTypes } from 'mastodon/utils/react_router';\n\nimport { Avatar } from '../../../components/avatar';\nimport { DisplayName } from '../../../components/display_name';\nimport MediaGallery from '../../../components/media_gallery';\nimport StatusContent from '../../../components/status_content';\nimport Audio from '../../audio';\nimport scheduleIdleTask from '../../ui/util/schedule_idle_task';\nimport Video from '../../video';\n\nimport Card from './card';\n\nclass DetailedStatus extends ImmutablePureComponent {\n\n  static propTypes = {\n    status: ImmutablePropTypes.map,\n    onOpenMedia: PropTypes.func.isRequired,\n    onOpenVideo: PropTypes.func.isRequired,\n    onToggleHidden: PropTypes.func.isRequired,\n    onTranslate: PropTypes.func.isRequired,\n    measureHeight: PropTypes.bool,\n    onHeightChange: PropTypes.func,\n    domain: PropTypes.string.isRequired,\n    compact: PropTypes.bool,\n    showMedia: PropTypes.bool,\n    pictureInPicture: ImmutablePropTypes.contains({\n      inUse: PropTypes.bool,\n      available: PropTypes.bool,\n    }),\n    onToggleMediaVisibility: PropTypes.func,\n    ...WithRouterPropTypes,\n  };\n\n  state = {\n    height: null,\n  };\n\n  handleAccountClick = (e) => {\n    if (e.button === 0 && !(e.ctrlKey || e.metaKey) && this.props.history) {\n      e.preventDefault();\n      this.history.push(`/@${this.props.status.getIn(['account', 'acct'])}`);\n    }\n\n    e.stopPropagation();\n  };\n\n  handleOpenVideo = (options) => {\n    this.props.onOpenVideo(this.props.status.getIn(['media_attachments', 0]), options);\n  };\n\n  handleExpandedToggle = () => {\n    this.props.onToggleHidden(this.props.status);\n  };\n\n  _measureHeight (heightJustChanged) {\n    if (this.props.measureHeight && this.node) {\n      scheduleIdleTask(() => this.node && this.setState({ height: Math.ceil(this.node.scrollHeight) + 1 }));\n\n      if (this.props.onHeightChange && heightJustChanged) {\n        this.props.onHeightChange();\n      }\n    }\n  }\n\n  setRef = c => {\n    this.node = c;\n    this._measureHeight();\n  };\n\n  componentDidUpdate (prevProps, prevState) {\n    this._measureHeight(prevState.height !== this.state.height);\n  }\n\n  handleModalLink = e => {\n    e.preventDefault();\n\n    let href;\n\n    if (e.target.nodeName !== 'A') {\n      href = e.target.parentNode.href;\n    } else {\n      href = e.target.href;\n    }\n\n    window.open(href, 'mastodon-intent', 'width=445,height=600,resizable=no,menubar=no,status=no,scrollbars=yes');\n  };\n\n  handleTranslate = () => {\n    const { onTranslate, status } = this.props;\n    onTranslate(status);\n  };\n\n  _properStatus () {\n    const { status } = this.props;\n\n    if (status.get('reblog', null) !== null && typeof status.get('reblog') === 'object') {\n      return status.get('reblog');\n    } else {\n      return status;\n    }\n  }\n\n  getAttachmentAspectRatio () {\n    const attachments = this._properStatus().get('media_attachments');\n\n    if (attachments.getIn([0, 'type']) === 'video') {\n      return `${attachments.getIn([0, 'meta', 'original', 'width'])} / ${attachments.getIn([0, 'meta', 'original', 'height'])}`;\n    } else if (attachments.getIn([0, 'type']) === 'audio') {\n      return '16 / 9';\n    } else {\n      return (attachments.size === 1 && attachments.getIn([0, 'meta', 'small', 'aspect'])) ? attachments.getIn([0, 'meta', 'small', 'aspect']) : '3 / 2';\n    }\n  }\n\n  render () {\n    const status = this._properStatus();\n    const outerStyle = { boxSizing: 'border-box' };\n    const { compact, pictureInPicture } = this.props;\n\n    if (!status) {\n      return null;\n    }\n\n    let media           = '';\n    let applicationLink = '';\n    let reblogLink = '';\n    const reblogIcon = 'retweet';\n    const reblogIconComponent = RepeatIcon;\n    let favouriteLink = '';\n    let edited = '';\n\n    if (this.props.measureHeight) {\n      outerStyle.height = `${this.state.height}px`;\n    }\n\n    const language = status.getIn(['translation', 'language']) || status.get('language');\n\n    if (pictureInPicture.get('inUse')) {\n      media = <PictureInPicturePlaceholder aspectRatio={this.getAttachmentAspectRatio()} />;\n    } else if (status.get('media_attachments').size > 0) {\n      if (status.getIn(['media_attachments', 0, 'type']) === 'audio') {\n        const attachment = status.getIn(['media_attachments', 0]);\n        const description = attachment.getIn(['translation', 'description']) || attachment.get('description');\n\n        media = (\n          <Audio\n            src={attachment.get('url')}\n            alt={description}\n            lang={language}\n            duration={attachment.getIn(['meta', 'original', 'duration'], 0)}\n            poster={attachment.get('preview_url') || status.getIn(['account', 'avatar_static'])}\n            backgroundColor={attachment.getIn(['meta', 'colors', 'background'])}\n            foregroundColor={attachment.getIn(['meta', 'colors', 'foreground'])}\n            accentColor={attachment.getIn(['meta', 'colors', 'accent'])}\n            sensitive={status.get('sensitive')}\n            visible={this.props.showMedia}\n            blurhash={attachment.get('blurhash')}\n            height={150}\n            onToggleVisibility={this.props.onToggleMediaVisibility}\n          />\n        );\n      } else if (status.getIn(['media_attachments', 0, 'type']) === 'video') {\n        const attachment = status.getIn(['media_attachments', 0]);\n        const description = attachment.getIn(['translation', 'description']) || attachment.get('description');\n\n        media = (\n          <Video\n            preview={attachment.get('preview_url')}\n            frameRate={attachment.getIn(['meta', 'original', 'frame_rate'])}\n            aspectRatio={`${attachment.getIn(['meta', 'original', 'width'])} / ${attachment.getIn(['meta', 'original', 'height'])}`}\n            blurhash={attachment.get('blurhash')}\n            src={attachment.get('url')}\n            alt={description}\n            lang={language}\n            width={300}\n            height={150}\n            onOpenVideo={this.handleOpenVideo}\n            sensitive={status.get('sensitive')}\n            visible={this.props.showMedia}\n            onToggleVisibility={this.props.onToggleMediaVisibility}\n          />\n        );\n      } else {\n        media = (\n          <MediaGallery\n            standalone\n            sensitive={status.get('sensitive')}\n            media={status.get('media_attachments')}\n            lang={language}\n            height={300}\n            onOpenMedia={this.props.onOpenMedia}\n            visible={this.props.showMedia}\n            onToggleVisibility={this.props.onToggleMediaVisibility}\n          />\n        );\n      }\n    } else if (status.get('spoiler_text').length === 0) {\n      media = <Card sensitive={status.get('sensitive')} onOpenMedia={this.props.onOpenMedia} card={status.get('card', null)} />;\n    }\n\n    if (status.get('application')) {\n      applicationLink = <> · <a className='detailed-status__application' href={status.getIn(['application', 'website'])} target='_blank' rel='noopener noreferrer'>{status.getIn(['application', 'name'])}</a></>;\n    }\n\n    const visibilityLink = <> · <VisibilityIcon visibility={status.get('visibility')} /></>;\n\n    if (['private', 'direct'].includes(status.get('visibility'))) {\n      reblogLink = '';\n    } else if (this.props.history) {\n      reblogLink = (\n        <>\n          {' · '}\n          <Link to={`/@${status.getIn(['account', 'acct'])}/${status.get('id')}/reblogs`} className='detailed-status__link'>\n            <Icon id={reblogIcon} icon={reblogIconComponent} />\n            <span className='detailed-status__reblogs'>\n              <AnimatedNumber value={status.get('reblogs_count')} />\n            </span>\n          </Link>\n        </>\n      );\n    } else {\n      reblogLink = (\n        <>\n          {' · '}\n          <a href={`/interact/${status.get('id')}?type=reblog`} className='detailed-status__link' onClick={this.handleModalLink}>\n            <Icon id={reblogIcon} icon={reblogIconComponent} />\n            <span className='detailed-status__reblogs'>\n              <AnimatedNumber value={status.get('reblogs_count')} />\n            </span>\n          </a>\n        </>\n      );\n    }\n\n    if (this.props.history) {\n      favouriteLink = (\n        <Link to={`/@${status.getIn(['account', 'acct'])}/${status.get('id')}/favourites`} className='detailed-status__link'>\n          <Icon id='star' icon={StarIcon} />\n          <span className='detailed-status__favorites'>\n            <AnimatedNumber value={status.get('favourites_count')} />\n          </span>\n        </Link>\n      );\n    } else {\n      favouriteLink = (\n        <a href={`/interact/${status.get('id')}?type=favourite`} className='detailed-status__link' onClick={this.handleModalLink}>\n          <Icon id='star' icon={StarIcon} />\n          <span className='detailed-status__favorites'>\n            <AnimatedNumber value={status.get('favourites_count')} />\n          </span>\n        </a>\n      );\n    }\n\n    if (status.get('edited_at')) {\n      edited = (\n        <>\n          {' · '}\n          <EditedTimestamp statusId={status.get('id')} timestamp={status.get('edited_at')} />\n        </>\n      );\n    }\n\n    const {statusContentProps, hashtagBar} = getHashtagBarForStatus(status);\n    const expanded = !status.get('hidden') || status.get('spoiler_text').length === 0;\n\n    return (\n      <div style={outerStyle}>\n        <div ref={this.setRef} className={classNames('detailed-status', { compact })}>\n          {status.get('visibility') === 'direct' && (\n            <div className='status__prepend'>\n              <div className='status__prepend-icon-wrapper'><Icon id='at' icon={AlternateEmailIcon} className='status__prepend-icon' /></div>\n              <FormattedMessage id='status.direct_indicator' defaultMessage='Private mention' />\n            </div>\n          )}\n          <a href={`/@${status.getIn(['account', 'acct'])}`} onClick={this.handleAccountClick} className='detailed-status__display-name'>\n            <div className='detailed-status__display-avatar'><Avatar account={status.get('account')} size={46} /></div>\n            <DisplayName account={status.get('account')} localDomain={this.props.domain} />\n          </a>\n\n          <StatusContent\n            status={status}\n            expanded={!status.get('hidden')}\n            onExpandedToggle={this.handleExpandedToggle}\n            onTranslate={this.handleTranslate}\n            {...statusContentProps}\n          />\n\n          {media}\n\n          {expanded && hashtagBar}\n\n          <div className='detailed-status__meta'>\n            <a className='detailed-status__datetime' href={`/@${status.getIn(['account', 'acct'])}/${status.get('id')}`} target='_blank' rel='noopener noreferrer'>\n              <FormattedDate value={new Date(status.get('created_at'))} hour12={false} year='numeric' month='short' day='2-digit' hour='2-digit' minute='2-digit' />\n            </a>{edited}{visibilityLink}{applicationLink}{reblogLink} · {favouriteLink}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n}\n\nexport default withRouter(DetailedStatus);\n","import PropTypes from 'prop-types';\n\nimport { defineMessages, injectIntl, FormattedMessage } from 'react-intl';\n\nimport classNames from 'classnames';\nimport { Helmet } from 'react-helmet';\nimport { withRouter } from 'react-router-dom';\n\nimport Immutable from 'immutable';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport { connect } from 'react-redux';\nimport { createSelector } from 'reselect';\n\nimport { ReactComponent as VisibilityIcon } from '@material-symbols/svg-600/outlined/visibility.svg';\nimport { ReactComponent as VisibilityOffIcon } from '@material-symbols/svg-600/outlined/visibility_off.svg';\nimport { HotKeys } from 'react-hotkeys';\n\nimport { Icon }  from 'mastodon/components/icon';\nimport { LoadingIndicator } from 'mastodon/components/loading_indicator';\nimport ScrollContainer from 'mastodon/containers/scroll_container';\nimport BundleColumnError from 'mastodon/features/ui/components/bundle_column_error';\nimport { WithRouterPropTypes } from 'mastodon/utils/react_router';\n\nimport {\n  unblockAccount,\n  unmuteAccount,\n} from '../../actions/accounts';\nimport { initBlockModal } from '../../actions/blocks';\nimport { initBoostModal } from '../../actions/boosts';\nimport {\n  replyCompose,\n  mentionCompose,\n  directCompose,\n} from '../../actions/compose';\nimport {\n  blockDomain,\n  unblockDomain,\n} from '../../actions/domain_blocks';\nimport {\n  favourite,\n  unfavourite,\n  bookmark,\n  unbookmark,\n  reblog,\n  unreblog,\n  pin,\n  unpin,\n} from '../../actions/interactions';\nimport { openModal } from '../../actions/modal';\nimport { initMuteModal } from '../../actions/mutes';\nimport { initReport } from '../../actions/reports';\nimport {\n  fetchStatus,\n  muteStatus,\n  unmuteStatus,\n  deleteStatus,\n  editStatus,\n  hideStatus,\n  revealStatus,\n  translateStatus,\n  undoStatusTranslation,\n} from '../../actions/statuses';\nimport ColumnHeader from '../../components/column_header';\nimport { textForScreenReader, defaultMediaVisibility } from '../../components/status';\nimport StatusContainer from '../../containers/status_container';\nimport { boostModal, deleteModal } from '../../initial_state';\nimport { makeGetStatus, makeGetPictureInPicture } from '../../selectors';\nimport Column from '../ui/components/column';\nimport { attachFullscreenListener, detachFullscreenListener, isFullscreen } from '../ui/util/fullscreen';\n\nimport ActionBar from './components/action_bar';\nimport DetailedStatus from './components/detailed_status';\n\n\nconst messages = defineMessages({\n  deleteConfirm: { id: 'confirmations.delete.confirm', defaultMessage: 'Delete' },\n  deleteMessage: { id: 'confirmations.delete.message', defaultMessage: 'Are you sure you want to delete this status?' },\n  redraftConfirm: { id: 'confirmations.redraft.confirm', defaultMessage: 'Delete & redraft' },\n  redraftMessage: { id: 'confirmations.redraft.message', defaultMessage: 'Are you sure you want to delete this status and re-draft it? Favorites and boosts will be lost, and replies to the original post will be orphaned.' },\n  revealAll: { id: 'status.show_more_all', defaultMessage: 'Show more for all' },\n  hideAll: { id: 'status.show_less_all', defaultMessage: 'Show less for all' },\n  statusTitleWithAttachments: { id: 'status.title.with_attachments', defaultMessage: '{user} posted {attachmentCount, plural, one {an attachment} other {# attachments}}' },\n  detailedStatus: { id: 'status.detailed_status', defaultMessage: 'Detailed conversation view' },\n  replyConfirm: { id: 'confirmations.reply.confirm', defaultMessage: 'Reply' },\n  replyMessage: { id: 'confirmations.reply.message', defaultMessage: 'Replying now will overwrite the message you are currently composing. Are you sure you want to proceed?' },\n  blockDomainConfirm: { id: 'confirmations.domain_block.confirm', defaultMessage: 'Block entire domain' },\n});\n\nconst makeMapStateToProps = () => {\n  const getStatus = makeGetStatus();\n  const getPictureInPicture = makeGetPictureInPicture();\n\n  const getAncestorsIds = createSelector([\n    (_, { id }) => id,\n    state => state.getIn(['contexts', 'inReplyTos']),\n  ], (statusId, inReplyTos) => {\n    let ancestorsIds = Immutable.List();\n    ancestorsIds = ancestorsIds.withMutations(mutable => {\n      let id = statusId;\n\n      while (id && !mutable.includes(id)) {\n        mutable.unshift(id);\n        id = inReplyTos.get(id);\n      }\n    });\n\n    return ancestorsIds;\n  });\n\n  const getDescendantsIds = createSelector([\n    (_, { id }) => id,\n    state => state.getIn(['contexts', 'replies']),\n    state => state.get('statuses'),\n  ], (statusId, contextReplies, statuses) => {\n    let descendantsIds = [];\n    const ids = [statusId];\n\n    while (ids.length > 0) {\n      let id        = ids.pop();\n      const replies = contextReplies.get(id);\n\n      if (statusId !== id) {\n        descendantsIds.push(id);\n      }\n\n      if (replies) {\n        replies.reverse().forEach(reply => {\n          if (!ids.includes(reply) && !descendantsIds.includes(reply) && statusId !== reply) ids.push(reply);\n        });\n      }\n    }\n\n    let insertAt = descendantsIds.findIndex((id) => statuses.get(id).get('in_reply_to_account_id') !== statuses.get(id).get('account'));\n    if (insertAt !== -1) {\n      descendantsIds.forEach((id, idx) => {\n        if (idx > insertAt && statuses.get(id).get('in_reply_to_account_id') === statuses.get(id).get('account')) {\n          descendantsIds.splice(idx, 1);\n          descendantsIds.splice(insertAt, 0, id);\n          insertAt += 1;\n        }\n      });\n    }\n\n    return Immutable.List(descendantsIds);\n  });\n\n  const mapStateToProps = (state, props) => {\n    const status = getStatus(state, { id: props.params.statusId });\n\n    let ancestorsIds   = Immutable.List();\n    let descendantsIds = Immutable.List();\n\n    if (status) {\n      ancestorsIds   = getAncestorsIds(state, { id: status.get('in_reply_to_id') });\n      descendantsIds = getDescendantsIds(state, { id: status.get('id') });\n    }\n\n    return {\n      isLoading: state.getIn(['statuses', props.params.statusId, 'isLoading']),\n      status,\n      ancestorsIds,\n      descendantsIds,\n      askReplyConfirmation: state.getIn(['compose', 'text']).trim().length !== 0,\n      domain: state.getIn(['meta', 'domain']),\n      pictureInPicture: getPictureInPicture(state, { id: props.params.statusId }),\n    };\n  };\n\n  return mapStateToProps;\n};\n\nconst truncate = (str, num) => {\n  const arr = Array.from(str);\n  if (arr.length > num) {\n    return arr.slice(0, num).join('') + '…';\n  } else {\n    return str;\n  }\n};\n\nconst titleFromStatus = (intl, status) => {\n  const displayName = status.getIn(['account', 'display_name']);\n  const username = status.getIn(['account', 'username']);\n  const user = displayName.trim().length === 0 ? username : displayName;\n  const text = status.get('search_index');\n  const attachmentCount = status.get('media_attachments').size;\n\n  return text ? `${user}: \"${truncate(text, 30)}\"` : intl.formatMessage(messages.statusTitleWithAttachments, { user, attachmentCount });\n};\n\nclass Status extends ImmutablePureComponent {\n\n  static contextTypes = {\n    identity: PropTypes.object,\n  };\n\n  static propTypes = {\n    params: PropTypes.object.isRequired,\n    dispatch: PropTypes.func.isRequired,\n    status: ImmutablePropTypes.map,\n    isLoading: PropTypes.bool,\n    ancestorsIds: ImmutablePropTypes.list.isRequired,\n    descendantsIds: ImmutablePropTypes.list.isRequired,\n    intl: PropTypes.object.isRequired,\n    askReplyConfirmation: PropTypes.bool,\n    multiColumn: PropTypes.bool,\n    domain: PropTypes.string.isRequired,\n    pictureInPicture: ImmutablePropTypes.contains({\n      inUse: PropTypes.bool,\n      available: PropTypes.bool,\n    }),\n    ...WithRouterPropTypes\n  };\n\n  state = {\n    fullscreen: false,\n    showMedia: defaultMediaVisibility(this.props.status),\n    loadedStatusId: undefined,\n  };\n\n  UNSAFE_componentWillMount () {\n    this.props.dispatch(fetchStatus(this.props.params.statusId));\n  }\n\n  componentDidMount () {\n    attachFullscreenListener(this.onFullScreenChange);\n\n    this._scrollStatusIntoView();\n  }\n\n  UNSAFE_componentWillReceiveProps (nextProps) {\n    if (nextProps.params.statusId !== this.props.params.statusId && nextProps.params.statusId) {\n      this.props.dispatch(fetchStatus(nextProps.params.statusId));\n    }\n\n    if (nextProps.status && nextProps.status.get('id') !== this.state.loadedStatusId) {\n      this.setState({ showMedia: defaultMediaVisibility(nextProps.status), loadedStatusId: nextProps.status.get('id') });\n    }\n  }\n\n  handleToggleMediaVisibility = () => {\n    this.setState({ showMedia: !this.state.showMedia });\n  };\n\n  handleFavouriteClick = (status) => {\n    const { dispatch } = this.props;\n    const { signedIn } = this.context.identity;\n\n    if (signedIn) {\n      if (status.get('favourited')) {\n        dispatch(unfavourite(status));\n      } else {\n        dispatch(favourite(status));\n      }\n    } else {\n      dispatch(openModal({\n        modalType: 'INTERACTION',\n        modalProps: {\n          type: 'favourite',\n          accountId: status.getIn(['account', 'id']),\n          url: status.get('uri'),\n        },\n      }));\n    }\n  };\n\n  handlePin = (status) => {\n    if (status.get('pinned')) {\n      this.props.dispatch(unpin(status));\n    } else {\n      this.props.dispatch(pin(status));\n    }\n  };\n\n  handleReplyClick = (status) => {\n    const { askReplyConfirmation, dispatch, intl } = this.props;\n    const { signedIn } = this.context.identity;\n\n    if (signedIn) {\n      if (askReplyConfirmation) {\n        dispatch(openModal({\n          modalType: 'CONFIRM',\n          modalProps: {\n            message: intl.formatMessage(messages.replyMessage),\n            confirm: intl.formatMessage(messages.replyConfirm),\n            onConfirm: () => dispatch(replyCompose(status, this.props.history)),\n          },\n        }));\n      } else {\n        dispatch(replyCompose(status, this.props.history));\n      }\n    } else {\n      dispatch(openModal({\n        modalType: 'INTERACTION',\n        modalProps: {\n          type: 'reply',\n          accountId: status.getIn(['account', 'id']),\n          url: status.get('uri'),\n        },\n      }));\n    }\n  };\n\n  handleModalReblog = (status, privacy) => {\n    this.props.dispatch(reblog(status, privacy));\n  };\n\n  handleReblogClick = (status, e) => {\n    const { dispatch } = this.props;\n    const { signedIn } = this.context.identity;\n\n    if (signedIn) {\n      if (status.get('reblogged')) {\n        dispatch(unreblog(status));\n      } else {\n        if ((e && e.shiftKey) || !boostModal) {\n          this.handleModalReblog(status);\n        } else {\n          dispatch(initBoostModal({ status, onReblog: this.handleModalReblog }));\n        }\n      }\n    } else {\n      dispatch(openModal({\n        modalType: 'INTERACTION',\n        modalProps: {\n          type: 'reblog',\n          accountId: status.getIn(['account', 'id']),\n          url: status.get('uri'),\n        },\n      }));\n    }\n  };\n\n  handleBookmarkClick = (status) => {\n    if (status.get('bookmarked')) {\n      this.props.dispatch(unbookmark(status));\n    } else {\n      this.props.dispatch(bookmark(status));\n    }\n  };\n\n  handleDeleteClick = (status, history, withRedraft = false) => {\n    const { dispatch, intl } = this.props;\n\n    if (!deleteModal) {\n      dispatch(deleteStatus(status.get('id'), history, withRedraft));\n    } else {\n      dispatch(openModal({\n        modalType: 'CONFIRM',\n        modalProps: {\n          message: intl.formatMessage(withRedraft ? messages.redraftMessage : messages.deleteMessage),\n          confirm: intl.formatMessage(withRedraft ? messages.redraftConfirm : messages.deleteConfirm),\n          onConfirm: () => dispatch(deleteStatus(status.get('id'), history, withRedraft)),\n        },\n      }));\n    }\n  };\n\n  handleEditClick = (status, history) => {\n    this.props.dispatch(editStatus(status.get('id'), history));\n  };\n\n  handleDirectClick = (account, router) => {\n    this.props.dispatch(directCompose(account, router));\n  };\n\n  handleMentionClick = (account, router) => {\n    this.props.dispatch(mentionCompose(account, router));\n  };\n\n  handleOpenMedia = (media, index, lang) => {\n    this.props.dispatch(openModal({\n      modalType: 'MEDIA',\n      modalProps: { statusId: this.props.status.get('id'), media, index, lang },\n    }));\n  };\n\n  handleOpenVideo = (media, lang, options) => {\n    this.props.dispatch(openModal({\n      modalType: 'VIDEO',\n      modalProps: { statusId: this.props.status.get('id'), media, lang, options },\n    }));\n  };\n\n  handleHotkeyOpenMedia = e => {\n    const { status } = this.props;\n\n    e.preventDefault();\n\n    if (status.get('media_attachments').size > 0) {\n      if (status.getIn(['media_attachments', 0, 'type']) === 'video') {\n        this.handleOpenVideo(status.getIn(['media_attachments', 0]), { startTime: 0 });\n      } else {\n        this.handleOpenMedia(status.get('media_attachments'), 0);\n      }\n    }\n  };\n\n  handleMuteClick = (account) => {\n    this.props.dispatch(initMuteModal(account));\n  };\n\n  handleConversationMuteClick = (status) => {\n    if (status.get('muted')) {\n      this.props.dispatch(unmuteStatus(status.get('id')));\n    } else {\n      this.props.dispatch(muteStatus(status.get('id')));\n    }\n  };\n\n  handleToggleHidden = (status) => {\n    if (status.get('hidden')) {\n      this.props.dispatch(revealStatus(status.get('id')));\n    } else {\n      this.props.dispatch(hideStatus(status.get('id')));\n    }\n  };\n\n  handleToggleAll = () => {\n    const { status, ancestorsIds, descendantsIds } = this.props;\n    const statusIds = [status.get('id')].concat(ancestorsIds.toJS(), descendantsIds.toJS());\n\n    if (status.get('hidden')) {\n      this.props.dispatch(revealStatus(statusIds));\n    } else {\n      this.props.dispatch(hideStatus(statusIds));\n    }\n  };\n\n  handleTranslate = status => {\n    const { dispatch } = this.props;\n\n    if (status.get('translation')) {\n      dispatch(undoStatusTranslation(status.get('id'), status.get('poll')));\n    } else {\n      dispatch(translateStatus(status.get('id')));\n    }\n  };\n\n  handleBlockClick = (status) => {\n    const { dispatch } = this.props;\n    const account = status.get('account');\n    dispatch(initBlockModal(account));\n  };\n\n  handleReport = (status) => {\n    this.props.dispatch(initReport(status.get('account'), status));\n  };\n\n  handleEmbed = (status) => {\n    this.props.dispatch(openModal({\n      modalType: 'EMBED',\n      modalProps: { id: status.get('id') },\n    }));\n  };\n\n  handleUnmuteClick = account => {\n    this.props.dispatch(unmuteAccount(account.get('id')));\n  };\n\n  handleUnblockClick = account => {\n    this.props.dispatch(unblockAccount(account.get('id')));\n  };\n\n  handleBlockDomainClick = domain => {\n    this.props.dispatch(openModal({\n      modalType: 'CONFIRM',\n      modalProps: {\n        message: <FormattedMessage id='confirmations.domain_block.message' defaultMessage='Are you really, really sure you want to block the entire {domain}? In most cases a few targeted blocks or mutes are sufficient and preferable. You will not see content from that domain in any public timelines or your notifications. Your followers from that domain will be removed.' values={{ domain: <strong>{domain}</strong> }} />,\n        confirm: this.props.intl.formatMessage(messages.blockDomainConfirm),\n        onConfirm: () => this.props.dispatch(blockDomain(domain)),\n      },\n    }));\n  };\n\n  handleUnblockDomainClick = domain => {\n    this.props.dispatch(unblockDomain(domain));\n  };\n\n\n  handleHotkeyMoveUp = () => {\n    this.handleMoveUp(this.props.status.get('id'));\n  };\n\n  handleHotkeyMoveDown = () => {\n    this.handleMoveDown(this.props.status.get('id'));\n  };\n\n  handleHotkeyReply = e => {\n    e.preventDefault();\n    this.handleReplyClick(this.props.status);\n  };\n\n  handleHotkeyFavourite = () => {\n    this.handleFavouriteClick(this.props.status);\n  };\n\n  handleHotkeyBoost = () => {\n    this.handleReblogClick(this.props.status);\n  };\n\n  handleHotkeyMention = e => {\n    e.preventDefault();\n    this.handleMentionClick(this.props.status.get('account'));\n  };\n\n  handleHotkeyOpenProfile = () => {\n    this.props.history.push(`/@${this.props.status.getIn(['account', 'acct'])}`);\n  };\n\n  handleHotkeyToggleHidden = () => {\n    this.handleToggleHidden(this.props.status);\n  };\n\n  handleHotkeyToggleSensitive = () => {\n    this.handleToggleMediaVisibility();\n  };\n\n  handleMoveUp = id => {\n    const { status, ancestorsIds, descendantsIds } = this.props;\n\n    if (id === status.get('id')) {\n      this._selectChild(ancestorsIds.size - 1, true);\n    } else {\n      let index = ancestorsIds.indexOf(id);\n\n      if (index === -1) {\n        index = descendantsIds.indexOf(id);\n        this._selectChild(ancestorsIds.size + index, true);\n      } else {\n        this._selectChild(index - 1, true);\n      }\n    }\n  };\n\n  handleMoveDown = id => {\n    const { status, ancestorsIds, descendantsIds } = this.props;\n\n    if (id === status.get('id')) {\n      this._selectChild(ancestorsIds.size + 1, false);\n    } else {\n      let index = ancestorsIds.indexOf(id);\n\n      if (index === -1) {\n        index = descendantsIds.indexOf(id);\n        this._selectChild(ancestorsIds.size + index + 2, false);\n      } else {\n        this._selectChild(index + 1, false);\n      }\n    }\n  };\n\n  _selectChild (index, align_top) {\n    const container = this.node;\n    const element = container.querySelectorAll('.focusable')[index];\n\n    if (element) {\n      if (align_top && container.scrollTop > element.offsetTop) {\n        element.scrollIntoView(true);\n      } else if (!align_top && container.scrollTop + container.clientHeight < element.offsetTop + element.offsetHeight) {\n        element.scrollIntoView(false);\n      }\n      element.focus();\n    }\n  }\n\n  renderChildren (list, ancestors) {\n    const { params: { statusId } } = this.props;\n\n    return list.map((id, i) => (\n      <StatusContainer\n        key={id}\n        id={id}\n        onMoveUp={this.handleMoveUp}\n        onMoveDown={this.handleMoveDown}\n        contextType='thread'\n        previousId={i > 0 ? list.get(i - 1) : undefined}\n        nextId={list.get(i + 1) || (ancestors && statusId)}\n        rootId={statusId}\n      />\n    ));\n  }\n\n  setRef = c => {\n    this.node = c;\n  };\n\n  _scrollStatusIntoView () {\n    const { status, multiColumn } = this.props;\n\n    if (status) {\n      window.requestAnimationFrame(() => {\n        this.node?.querySelector('.detailed-status__wrapper')?.scrollIntoView(true);\n\n        // In the single-column interface, `scrollIntoView` will put the post behind the header,\n        // so compensate for that.\n        if (!multiColumn) {\n          const offset = document.querySelector('.column-header__wrapper')?.getBoundingClientRect()?.bottom;\n          if (offset) {\n            const scrollingElement = document.scrollingElement || document.body;\n            scrollingElement.scrollBy(0, -offset);\n          }\n        }\n      });\n    }\n  }\n\n  componentDidUpdate (prevProps) {\n    const { status, ancestorsIds } = this.props;\n\n    if (status && (ancestorsIds.size > prevProps.ancestorsIds.size || prevProps.status?.get('id') !== status.get('id'))) {\n      this._scrollStatusIntoView();\n    }\n  }\n\n  componentWillUnmount () {\n    detachFullscreenListener(this.onFullScreenChange);\n  }\n\n  onFullScreenChange = () => {\n    this.setState({ fullscreen: isFullscreen() });\n  };\n\n  shouldUpdateScroll = (prevRouterProps, { location }) => {\n    // Do not change scroll when opening a modal\n    if (location.state?.mastodonModalKey !== prevRouterProps?.location?.state?.mastodonModalKey) {\n      return false;\n    }\n\n    // Scroll to focused post if it is loaded\n    const child = this.node?.querySelector('.detailed-status__wrapper');\n    if (child) {\n      return [0, child.offsetTop];\n    }\n\n    // Do not scroll otherwise, `componentDidUpdate` will take care of that\n    return false;\n  };\n\n  render () {\n    let ancestors, descendants;\n    const { isLoading, status, ancestorsIds, descendantsIds, intl, domain, multiColumn, pictureInPicture } = this.props;\n    const { fullscreen } = this.state;\n\n    if (isLoading) {\n      return (\n        <Column>\n          <LoadingIndicator />\n        </Column>\n      );\n    }\n\n    if (status === null) {\n      return (\n        <BundleColumnError multiColumn={multiColumn} errorType='routing' />\n      );\n    }\n\n    if (ancestorsIds && ancestorsIds.size > 0) {\n      ancestors = <>{this.renderChildren(ancestorsIds, true)}</>;\n    }\n\n    if (descendantsIds && descendantsIds.size > 0) {\n      descendants = <>{this.renderChildren(descendantsIds)}</>;\n    }\n\n    const isLocal = status.getIn(['account', 'acct'], '').indexOf('@') === -1;\n    const isIndexable = !status.getIn(['account', 'noindex']);\n\n    const handlers = {\n      moveUp: this.handleHotkeyMoveUp,\n      moveDown: this.handleHotkeyMoveDown,\n      reply: this.handleHotkeyReply,\n      favourite: this.handleHotkeyFavourite,\n      boost: this.handleHotkeyBoost,\n      mention: this.handleHotkeyMention,\n      openProfile: this.handleHotkeyOpenProfile,\n      toggleHidden: this.handleHotkeyToggleHidden,\n      toggleSensitive: this.handleHotkeyToggleSensitive,\n      openMedia: this.handleHotkeyOpenMedia,\n    };\n\n    return (\n      <Column bindToDocument={!multiColumn} label={intl.formatMessage(messages.detailedStatus)}>\n        <ColumnHeader\n          showBackButton\n          multiColumn={multiColumn}\n          extraButton={(\n            <button type='button' className='column-header__button' title={intl.formatMessage(status.get('hidden') ? messages.revealAll : messages.hideAll)} aria-label={intl.formatMessage(status.get('hidden') ? messages.revealAll : messages.hideAll)} onClick={this.handleToggleAll}><Icon id={status.get('hidden') ? 'eye-slash' : 'eye'} icon={status.get('hidden') ? VisibilityOffIcon : VisibilityIcon} /></button>\n          )}\n        />\n\n        <ScrollContainer scrollKey='thread' shouldUpdateScroll={this.shouldUpdateScroll}>\n          <div className={classNames('scrollable', { fullscreen })} ref={this.setRef}>\n            {ancestors}\n\n            <HotKeys handlers={handlers}>\n              <div className={classNames('focusable', 'detailed-status__wrapper', `detailed-status__wrapper-${status.get('visibility')}`)} tabIndex={0} aria-label={textForScreenReader(intl, status, false)}>\n                <DetailedStatus\n                  key={`details-${status.get('id')}`}\n                  status={status}\n                  onOpenVideo={this.handleOpenVideo}\n                  onOpenMedia={this.handleOpenMedia}\n                  onToggleHidden={this.handleToggleHidden}\n                  onTranslate={this.handleTranslate}\n                  domain={domain}\n                  showMedia={this.state.showMedia}\n                  onToggleMediaVisibility={this.handleToggleMediaVisibility}\n                  pictureInPicture={pictureInPicture}\n                />\n\n                <ActionBar\n                  key={`action-bar-${status.get('id')}`}\n                  status={status}\n                  onReply={this.handleReplyClick}\n                  onFavourite={this.handleFavouriteClick}\n                  onReblog={this.handleReblogClick}\n                  onBookmark={this.handleBookmarkClick}\n                  onDelete={this.handleDeleteClick}\n                  onEdit={this.handleEditClick}\n                  onDirect={this.handleDirectClick}\n                  onMention={this.handleMentionClick}\n                  onMute={this.handleMuteClick}\n                  onUnmute={this.handleUnmuteClick}\n                  onMuteConversation={this.handleConversationMuteClick}\n                  onBlock={this.handleBlockClick}\n                  onUnblock={this.handleUnblockClick}\n                  onBlockDomain={this.handleBlockDomainClick}\n                  onUnblockDomain={this.handleUnblockDomainClick}\n                  onReport={this.handleReport}\n                  onPin={this.handlePin}\n                  onEmbed={this.handleEmbed}\n                />\n              </div>\n            </HotKeys>\n\n            {descendants}\n          </div>\n        </ScrollContainer>\n\n        <Helmet>\n          <title>{titleFromStatus(intl, status)}</title>\n          <meta name='robots' content={(isLocal && isIndexable) ? 'all' : 'noindex'} />\n          <link rel='canonical' href={status.get('url')} />\n        </Helmet>\n      </Column>\n    );\n  }\n\n}\n\nexport default withRouter(injectIntl(connect(makeMapStateToProps)(Status)));\n"],"sourceRoot":""}