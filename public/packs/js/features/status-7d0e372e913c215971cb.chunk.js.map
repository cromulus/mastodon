{"version":3,"sources":["webpack:///./app/javascript/mastodon/features/status/components/action_bar.jsx","webpack:///./node_modules/@material-symbols/svg-600/outlined/arrow_drop_down.svg","webpack:///./app/javascript/mastodon/components/edited_timestamp/containers/dropdown_menu_container.js","webpack:///./app/javascript/mastodon/components/edited_timestamp/index.jsx","webpack:///./app/javascript/mastodon/features/status/components/detailed_status.jsx","webpack:///./app/javascript/mastodon/features/status/index.jsx"],"names":["messages","defineMessages","delete","id","defaultMessage","redraft","edit","direct","mention","reply","reblog","reblog_private","cancel_reblog_private","cannot_reblog","favourite","bookmark","more","mute","muteConversation","unmuteConversation","block","report","share","pin","unpin","embed","admin_account","admin_status","admin_domain","copy","blockDomain","unblockDomain","unmute","unblock","openOriginalPage","ActionBar","PureComponent","constructor","arguments","_defineProperty","this","props","onReply","status","e","onReblog","onFavourite","onBookmark","onDelete","history","onEdit","onDirect","get","onMention","relationship","onMute","onUnmute","account","onBlock","onUnblock","onBlockDomain","split","onUnblockDomain","onMuteConversation","onReport","onPin","navigator","url","onEmbed","clipboard","writeText","render","intl","signedIn","permissions","context","identity","publicStatus","includes","pinnableStatus","mutingConversation","writtenByMe","getIn","me","isRemote","replyIcon","replyIconComponent","menu","push","text","formatMessage","href","action","handleCopy","handleShare","handleEmbed","handlePinClick","handleConversationMuteClick","handleEditClick","handleDeleteClick","dangerous","handleRedraftClick","name","handleMentionClick","handleMuteClick","handleBlockClick","handleReport","domain","handleUnblockDomain","handleBlockDomain","PERMISSION_MANAGE_USERS","PERMISSION_MANAGE_FEDERATION","ReplyIcon","ReplyAllIcon","reblogPrivate","reblogTitle","reblogIconComponent","RepeatIcon","RepeatPrivateIcon","RepeatDisabledIcon","_jsx","className","IconButton","title","icon","iconComponent","onClick","handleReplyClick","classNames","disabled","active","handleReblogClick","animate","StarIcon","StarBorderIcon","handleFavouriteClick","BookmarkIcon","BookmarkBorderIcon","handleBookmarkClick","DropdownMenuContainer","MoreHorizIcon","items","direction","PropTypes","object","withRouter","_path","connect","mapStateToProps","state","_ref","injectIntl","_extends","Object","assign","bind","target","i","length","source","key","prototype","hasOwnProperty","call","apply","SvgArrowDropDown","titleId","xmlns","width","height","viewBox","d","statusId","openDropdownId","dropdownMenu","openId","openedViaKeyboard","keyboard","loading","mapDispatchToProps","dispatch","_ref2","onOpen","onItemClick","fetchHistory","openDropdownMenu","onClose","closeDropdownMenu","DropdownMenu","EditedTimestamp","item","FormattedMessage","values","count","size","index","onKeyPress","formattedDate","RelativeTimestamp","timestamp","short","formattedName","InlineAccount","accountId","label","date","renderItem","scrollable","renderHeader","handleItemClick","formatDate","hour12","month","day","hour","minute","Icon","ArrowDropDownIcon","openModal","modalType","modalProps","DetailedStatus","ImmutablePureComponent","button","ctrlKey","metaKey","preventDefault","stopPropagation","options","onOpenVideo","onToggleHidden","c","node","_measureHeight","nodeName","parentNode","window","open","onTranslate","heightJustChanged","measureHeight","scheduleIdleTask","setState","Math","ceil","scrollHeight","onHeightChange","componentDidUpdate","prevProps","prevState","_properStatus","getAttachmentAspectRatio","attachments","outerStyle","boxSizing","compact","pictureInPicture","media","applicationLink","reblogLink","reblogIcon","favouriteLink","edited","language","PictureInPicturePlaceholder","aspectRatio","attachment","description","Audio","src","alt","lang","duration","poster","backgroundColor","foregroundColor","accentColor","sensitive","visible","showMedia","blurhash","onToggleVisibility","onToggleMediaVisibility","Video","preview","frameRate","handleOpenVideo","MediaGallery","standalone","onOpenMedia","Card","card","_jsxs","_Fragment","children","rel","visibilityLink","VisibilityIcon","visibility","Link","to","AnimatedNumber","value","handleModalLink","statusContentProps","hashtagBar","getHashtagBarForStatus","expanded","style","ref","setRef","AlternateEmailIcon","handleAccountClick","Avatar","DisplayName","localDomain","_jsx2","StatusContent","onExpandedToggle","handleExpandedToggle","handleTranslate","FormattedDate","Date","year","ImmutablePropTypes","map","func","isRequired","bool","string","contains","inUse","available","WithRouterPropTypes","deleteConfirm","deleteMessage","redraftConfirm","redraftMessage","revealAll","hideAll","statusTitleWithAttachments","detailedStatus","replyConfirm","replyMessage","blockDomainConfirm","titleFromStatus","displayName","username","user","trim","attachmentCount","truncate","str","num","arr","Array","from","slice","join","Status","_this","fullscreen","defaultMediaVisibility","loadedStatusId","undefined","unfavourite","type","askReplyConfirmation","message","confirm","onConfirm","replyCompose","privacy","unreblog","shiftKey","boostModal","handleModalReblog","initBoostModal","unbookmark","withRedraft","deleteModal","deleteStatus","editStatus","router","directCompose","mentionCompose","startTime","handleOpenMedia","initMuteModal","unmuteStatus","muteStatus","revealStatus","hideStatus","ancestorsIds","descendantsIds","statusIds","concat","toJS","undoStatusTranslation","translateStatus","initBlockModal","initReport","unmuteAccount","unblockAccount","handleMoveUp","handleMoveDown","handleToggleHidden","handleToggleMediaVisibility","_selectChild","indexOf","isFullscreen","prevRouterProps","_ref3","_location$state","_prevRouterProps$loca","_this$node","location","mastodonModalKey","child","querySelector","offsetTop","UNSAFE_componentWillMount","fetchStatus","params","componentDidMount","attachFullscreenListener","onFullScreenChange","_scrollStatusIntoView","UNSAFE_componentWillReceiveProps","nextProps","align_top","container","element","querySelectorAll","scrollTop","scrollIntoView","clientHeight","offsetHeight","focus","renderChildren","list","ancestors","StatusContainer","onMoveUp","onMoveDown","contextType","previousId","nextId","rootId","multiColumn","requestAnimationFrame","_this$node2","_document$querySelect","offset","document","getBoundingClientRect","bottom","scrollingElement","body","scrollBy","_prevProps$status","componentWillUnmount","detachFullscreenListener","descendants","isLoading","Column","LoadingIndicator","BundleColumnError","errorType","isLocal","isIndexable","handlers","moveUp","handleHotkeyMoveUp","moveDown","handleHotkeyMoveDown","handleHotkeyReply","handleHotkeyFavourite","boost","handleHotkeyBoost","handleHotkeyMention","openProfile","handleHotkeyOpenProfile","toggleHidden","handleHotkeyToggleHidden","toggleSensitive","handleHotkeyToggleSensitive","openMedia","handleHotkeyOpenMedia","bindToDocument","ColumnHeader","showBackButton","extraButton","handleToggleAll","VisibilityOffIcon","ScrollContainer","scrollKey","shouldUpdateScroll","HotKeys","tabIndex","textForScreenReader","handleDirectClick","handleUnmuteClick","handleUnblockClick","handleBlockDomainClick","handleUnblockDomainClick","handlePin","Helmet","content","makeMapStateToProps","getStatus","makeGetStatus","getPictureInPicture","makeGetPictureInPicture","getAncestorsIds","createSelector","_","inReplyTos","Immutable","List","withMutations","mutable","unshift","getDescendantsIds","contextReplies","statuses","ids","pop","replies","reverse","forEach","insertAt","findIndex","idx","splice"],"mappings":"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","file":"js/features/status-7d0e372e913c215971cb.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport classNames from 'classnames';\nimport { withRouter } from 'react-router-dom';\n\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport { connect } from 'react-redux';\n\nimport { ReactComponent as BookmarkIcon } from '@material-symbols/svg-600/outlined/bookmark-fill.svg';\nimport { ReactComponent as BookmarkBorderIcon } from '@material-symbols/svg-600/outlined/bookmark.svg';\nimport { ReactComponent as MoreHorizIcon } from '@material-symbols/svg-600/outlined/more_horiz.svg';\nimport { ReactComponent as RepeatIcon } from '@material-symbols/svg-600/outlined/repeat.svg';\nimport { ReactComponent as ReplyIcon } from '@material-symbols/svg-600/outlined/reply.svg';\nimport { ReactComponent as ReplyAllIcon } from '@material-symbols/svg-600/outlined/reply_all.svg';\nimport { ReactComponent as StarIcon } from '@material-symbols/svg-600/outlined/star-fill.svg';\nimport { ReactComponent as StarBorderIcon } from '@material-symbols/svg-600/outlined/star.svg';\n\nimport { ReactComponent as RepeatDisabledIcon } from 'mastodon/../svg-icons/repeat_disabled.svg';\nimport { ReactComponent as RepeatPrivateIcon } from 'mastodon/../svg-icons/repeat_private.svg';\nimport { PERMISSION_MANAGE_USERS, PERMISSION_MANAGE_FEDERATION } from 'mastodon/permissions';\nimport { WithRouterPropTypes } from 'mastodon/utils/react_router';\n\nimport { IconButton } from '../../../components/icon_button';\nimport DropdownMenuContainer from '../../../containers/dropdown_menu_container';\nimport { me } from '../../../initial_state';\n\nconst messages = defineMessages({\n  delete: { id: 'status.delete', defaultMessage: 'Delete' },\n  redraft: { id: 'status.redraft', defaultMessage: 'Delete & re-draft' },\n  edit: { id: 'status.edit', defaultMessage: 'Edit' },\n  direct: { id: 'status.direct', defaultMessage: 'Privately mention @{name}' },\n  mention: { id: 'status.mention', defaultMessage: 'Mention @{name}' },\n  reply: { id: 'status.reply', defaultMessage: 'Reply' },\n  reblog: { id: 'status.reblog', defaultMessage: 'Boost' },\n  reblog_private: { id: 'status.reblog_private', defaultMessage: 'Boost with original visibility' },\n  cancel_reblog_private: { id: 'status.cancel_reblog_private', defaultMessage: 'Unboost' },\n  cannot_reblog: { id: 'status.cannot_reblog', defaultMessage: 'This post cannot be boosted' },\n  favourite: { id: 'status.favourite', defaultMessage: 'Favorite' },\n  bookmark: { id: 'status.bookmark', defaultMessage: 'Bookmark' },\n  more: { id: 'status.more', defaultMessage: 'More' },\n  mute: { id: 'status.mute', defaultMessage: 'Mute @{name}' },\n  muteConversation: { id: 'status.mute_conversation', defaultMessage: 'Mute conversation' },\n  unmuteConversation: { id: 'status.unmute_conversation', defaultMessage: 'Unmute conversation' },\n  block: { id: 'status.block', defaultMessage: 'Block @{name}' },\n  report: { id: 'status.report', defaultMessage: 'Report @{name}' },\n  share: { id: 'status.share', defaultMessage: 'Share' },\n  pin: { id: 'status.pin', defaultMessage: 'Pin on profile' },\n  unpin: { id: 'status.unpin', defaultMessage: 'Unpin from profile' },\n  embed: { id: 'status.embed', defaultMessage: 'Embed' },\n  admin_account: { id: 'status.admin_account', defaultMessage: 'Open moderation interface for @{name}' },\n  admin_status: { id: 'status.admin_status', defaultMessage: 'Open this post in the moderation interface' },\n  admin_domain: { id: 'status.admin_domain', defaultMessage: 'Open moderation interface for {domain}' },\n  copy: { id: 'status.copy', defaultMessage: 'Copy link to post' },\n  blockDomain: { id: 'account.block_domain', defaultMessage: 'Block domain {domain}' },\n  unblockDomain: { id: 'account.unblock_domain', defaultMessage: 'Unblock domain {domain}' },\n  unmute: { id: 'account.unmute', defaultMessage: 'Unmute @{name}' },\n  unblock: { id: 'account.unblock', defaultMessage: 'Unblock @{name}' },\n  openOriginalPage: { id: 'account.open_original_page', defaultMessage: 'Open original page' },\n});\n\nconst mapStateToProps = (state, { status }) => ({\n  relationship: state.getIn(['relationships', status.getIn(['account', 'id'])]),\n});\n\nclass ActionBar extends PureComponent {\n\n  static contextTypes = {\n    identity: PropTypes.object,\n  };\n\n  static propTypes = {\n    status: ImmutablePropTypes.map.isRequired,\n    relationship: ImmutablePropTypes.map,\n    onReply: PropTypes.func.isRequired,\n    onReblog: PropTypes.func.isRequired,\n    onFavourite: PropTypes.func.isRequired,\n    onBookmark: PropTypes.func.isRequired,\n    onDelete: PropTypes.func.isRequired,\n    onEdit: PropTypes.func.isRequired,\n    onDirect: PropTypes.func.isRequired,\n    onMention: PropTypes.func.isRequired,\n    onMute: PropTypes.func,\n    onUnmute: PropTypes.func,\n    onBlock: PropTypes.func,\n    onUnblock: PropTypes.func,\n    onBlockDomain: PropTypes.func,\n    onUnblockDomain: PropTypes.func,\n    onMuteConversation: PropTypes.func,\n    onReport: PropTypes.func,\n    onPin: PropTypes.func,\n    onEmbed: PropTypes.func,\n    intl: PropTypes.object.isRequired,\n    ...WithRouterPropTypes,\n  };\n\n  handleReplyClick = () => {\n    this.props.onReply(this.props.status);\n  };\n\n  handleReblogClick = (e) => {\n    this.props.onReblog(this.props.status, e);\n  };\n\n  handleFavouriteClick = () => {\n    this.props.onFavourite(this.props.status);\n  };\n\n  handleBookmarkClick = (e) => {\n    this.props.onBookmark(this.props.status, e);\n  };\n\n  handleDeleteClick = () => {\n    this.props.onDelete(this.props.status, this.props.history);\n  };\n\n  handleRedraftClick = () => {\n    this.props.onDelete(this.props.status, this.props.history, true);\n  };\n\n  handleEditClick = () => {\n    this.props.onEdit(this.props.status, this.props.history);\n  };\n\n  handleDirectClick = () => {\n    this.props.onDirect(this.props.status.get('account'), this.props.history);\n  };\n\n  handleMentionClick = () => {\n    this.props.onMention(this.props.status.get('account'), this.props.history);\n  };\n\n  handleMuteClick = () => {\n    const { status, relationship, onMute, onUnmute } = this.props;\n    const account = status.get('account');\n\n    if (relationship && relationship.get('muting')) {\n      onUnmute(account);\n    } else {\n      onMute(account);\n    }\n  };\n\n  handleBlockClick = () => {\n    const { status, relationship, onBlock, onUnblock } = this.props;\n    const account = status.get('account');\n\n    if (relationship && relationship.get('blocking')) {\n      onUnblock(account);\n    } else {\n      onBlock(status);\n    }\n  };\n\n  handleBlockDomain = () => {\n    const { status, onBlockDomain } = this.props;\n    const account = status.get('account');\n\n    onBlockDomain(account.get('acct').split('@')[1]);\n  };\n\n  handleUnblockDomain = () => {\n    const { status, onUnblockDomain } = this.props;\n    const account = status.get('account');\n\n    onUnblockDomain(account.get('acct').split('@')[1]);\n  };\n\n  handleConversationMuteClick = () => {\n    this.props.onMuteConversation(this.props.status);\n  };\n\n  handleReport = () => {\n    this.props.onReport(this.props.status);\n  };\n\n  handlePinClick = () => {\n    this.props.onPin(this.props.status);\n  };\n\n  handleShare = () => {\n    navigator.share({\n      url: this.props.status.get('url'),\n    });\n  };\n\n  handleEmbed = () => {\n    this.props.onEmbed(this.props.status);\n  };\n\n  handleCopy = () => {\n    const url = this.props.status.get('url');\n    navigator.clipboard.writeText(url);\n  };\n\n  render () {\n    const { status, relationship, intl } = this.props;\n    const { signedIn, permissions } = this.context.identity;\n\n    const publicStatus       = ['public', 'unlisted'].includes(status.get('visibility'));\n    const pinnableStatus     = ['public', 'unlisted', 'private'].includes(status.get('visibility'));\n    const mutingConversation = status.get('muted');\n    const account            = status.get('account');\n    const writtenByMe        = status.getIn(['account', 'id']) === me;\n    const isRemote           = status.getIn(['account', 'username']) !== status.getIn(['account', 'acct']);\n\n    let menu = [];\n\n    if (publicStatus && isRemote) {\n      menu.push({ text: intl.formatMessage(messages.openOriginalPage), href: status.get('url') });\n    }\n\n    menu.push({ text: intl.formatMessage(messages.copy), action: this.handleCopy });\n\n    if (publicStatus && 'share' in navigator) {\n      menu.push({ text: intl.formatMessage(messages.share), action: this.handleShare });\n    }\n\n    if (publicStatus && (signedIn || !isRemote)) {\n      menu.push({ text: intl.formatMessage(messages.embed), action: this.handleEmbed });\n    }\n\n    if (signedIn) {\n      menu.push(null);\n\n      if (writtenByMe) {\n        if (pinnableStatus) {\n          menu.push({ text: intl.formatMessage(status.get('pinned') ? messages.unpin : messages.pin), action: this.handlePinClick });\n          menu.push(null);\n        }\n\n        menu.push({ text: intl.formatMessage(mutingConversation ? messages.unmuteConversation : messages.muteConversation), action: this.handleConversationMuteClick });\n        menu.push(null);\n        menu.push({ text: intl.formatMessage(messages.edit), action: this.handleEditClick });\n        menu.push({ text: intl.formatMessage(messages.delete), action: this.handleDeleteClick, dangerous: true });\n        menu.push({ text: intl.formatMessage(messages.redraft), action: this.handleRedraftClick, dangerous: true });\n      } else {\n        menu.push({ text: intl.formatMessage(messages.mention, { name: status.getIn(['account', 'username']) }), action: this.handleMentionClick });\n        menu.push(null);\n\n        if (relationship && relationship.get('muting')) {\n          menu.push({ text: intl.formatMessage(messages.unmute, { name: account.get('username') }), action: this.handleMuteClick });\n        } else {\n          menu.push({ text: intl.formatMessage(messages.mute, { name: account.get('username') }), action: this.handleMuteClick, dangerous: true });\n        }\n\n        if (relationship && relationship.get('blocking')) {\n          menu.push({ text: intl.formatMessage(messages.unblock, { name: account.get('username') }), action: this.handleBlockClick });\n        } else {\n          menu.push({ text: intl.formatMessage(messages.block, { name: account.get('username') }), action: this.handleBlockClick, dangerous: true });\n        }\n\n        menu.push({ text: intl.formatMessage(messages.report, { name: status.getIn(['account', 'username']) }), action: this.handleReport, dangerous: true });\n\n        if (account.get('acct') !== account.get('username')) {\n          const domain = account.get('acct').split('@')[1];\n\n          menu.push(null);\n\n          if (relationship && relationship.get('domain_blocking')) {\n            menu.push({ text: intl.formatMessage(messages.unblockDomain, { domain }), action: this.handleUnblockDomain });\n          } else {\n            menu.push({ text: intl.formatMessage(messages.blockDomain, { domain }), action: this.handleBlockDomain, dangerous: true });\n          }\n        }\n\n        if ((permissions & PERMISSION_MANAGE_USERS) === PERMISSION_MANAGE_USERS || (isRemote && (permissions & PERMISSION_MANAGE_FEDERATION) === PERMISSION_MANAGE_FEDERATION)) {\n          menu.push(null);\n          if ((permissions & PERMISSION_MANAGE_USERS) === PERMISSION_MANAGE_USERS) {\n            menu.push({ text: intl.formatMessage(messages.admin_account, { name: status.getIn(['account', 'username']) }), href: `/admin/accounts/${status.getIn(['account', 'id'])}` });\n            menu.push({ text: intl.formatMessage(messages.admin_status), href: `/admin/accounts/${status.getIn(['account', 'id'])}/statuses/${status.get('id')}` });\n          }\n          if (isRemote && (permissions & PERMISSION_MANAGE_FEDERATION) === PERMISSION_MANAGE_FEDERATION) {\n            const domain = account.get('acct').split('@')[1];\n            menu.push({ text: intl.formatMessage(messages.admin_domain, { domain: domain }), href: `/admin/instances/${domain}` });\n          }\n        }\n      }\n    }\n\n    let replyIcon;\n    let replyIconComponent;\n\n    if (status.get('in_reply_to_id', null) === null) {\n      replyIcon = 'reply';\n      replyIconComponent = ReplyIcon;\n    } else {\n      replyIcon = 'reply-all';\n      replyIconComponent = ReplyAllIcon;\n    }\n\n    const reblogPrivate = status.getIn(['account', 'id']) === me && status.get('visibility') === 'private';\n\n    let reblogTitle, reblogIconComponent;\n\n    if (status.get('reblogged')) {\n      reblogTitle = intl.formatMessage(messages.cancel_reblog_private);\n      reblogIconComponent = publicStatus ? RepeatIcon : RepeatPrivateIcon;\n    } else if (publicStatus) {\n      reblogTitle = intl.formatMessage(messages.reblog);\n      reblogIconComponent = RepeatIcon;\n    } else if (reblogPrivate) {\n      reblogTitle = intl.formatMessage(messages.reblog_private);\n      reblogIconComponent = RepeatPrivateIcon;\n    } else {\n      reblogTitle = intl.formatMessage(messages.cannot_reblog);\n      reblogIconComponent = RepeatDisabledIcon;\n    }\n\n    return (\n      <div className='detailed-status__action-bar'>\n        <div className='detailed-status__button'><IconButton title={intl.formatMessage(messages.reply)} icon={status.get('in_reply_to_account_id') === status.getIn(['account', 'id']) ? 'reply' : replyIcon} iconComponent={status.get('in_reply_to_account_id') === status.getIn(['account', 'id']) ? ReplyIcon : replyIconComponent}  onClick={this.handleReplyClick} /></div>\n        <div className='detailed-status__button'><IconButton className={classNames({ reblogPrivate })} disabled={!publicStatus && !reblogPrivate} active={status.get('reblogged')} title={reblogTitle} icon='retweet' iconComponent={reblogIconComponent} onClick={this.handleReblogClick} /></div>\n        <div className='detailed-status__button'><IconButton className='star-icon' animate active={status.get('favourited')} title={intl.formatMessage(messages.favourite)} icon='star' iconComponent={status.get('favourited') ? StarIcon : StarBorderIcon} onClick={this.handleFavouriteClick} /></div>\n        <div className='detailed-status__button'><IconButton className='bookmark-icon' disabled={!signedIn} active={status.get('bookmarked')} title={intl.formatMessage(messages.bookmark)} icon='bookmark' iconComponent={status.get('bookmarked') ? BookmarkIcon : BookmarkBorderIcon} onClick={this.handleBookmarkClick} /></div>\n\n        <div className='detailed-status__action-bar-dropdown'>\n          <DropdownMenuContainer icon='ellipsis-h' iconComponent={MoreHorizIcon} status={status} items={menu} direction='left' title={intl.formatMessage(messages.more)} />\n        </div>\n      </div>\n    );\n  }\n\n}\n\nexport default withRouter(connect(mapStateToProps)(injectIntl(ActionBar)));\n","var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgArrowDropDown(_ref) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 48,\n    height: 48,\n    viewBox: \"0 -960 960 960\",\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M480-346.434 256.825-568.609h446.35L480-346.434Z\"\n  })));\n}\nexport default __webpack_public_path__ + \"media/outlined/arrow_drop_down-9305c16d.svg\";\nexport { SvgArrowDropDown as ReactComponent };","import { connect } from 'react-redux';\n\nimport { openDropdownMenu, closeDropdownMenu } from 'mastodon/actions/dropdown_menu';\nimport { fetchHistory } from 'mastodon/actions/history';\nimport DropdownMenu from 'mastodon/components/dropdown_menu';\n\n/**\n *\n * @param {import('mastodon/store').RootState} state\n * @param {*} props\n */\nconst mapStateToProps = (state, { statusId }) => ({\n  openDropdownId: state.dropdownMenu.openId,\n  openedViaKeyboard: state.dropdownMenu.keyboard,\n  items: state.getIn(['history', statusId, 'items']),\n  loading: state.getIn(['history', statusId, 'loading']),\n});\n\nconst mapDispatchToProps = (dispatch, { statusId }) => ({\n\n  onOpen (id, onItemClick, keyboard) {\n    dispatch(fetchHistory(statusId));\n    dispatch(openDropdownMenu({ id, keyboard }));\n  },\n\n  onClose (id) {\n    dispatch(closeDropdownMenu({ id }));\n  },\n\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DropdownMenu);\n","import PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport { FormattedMessage, injectIntl } from 'react-intl';\n\nimport { connect } from 'react-redux';\n\nimport { ReactComponent as ArrowDropDownIcon } from '@material-symbols/svg-600/outlined/arrow_drop_down.svg';\n\nimport { openModal } from 'mastodon/actions/modal';\nimport { Icon }  from 'mastodon/components/icon';\nimport InlineAccount from 'mastodon/components/inline_account';\nimport { RelativeTimestamp } from 'mastodon/components/relative_timestamp';\n\nimport DropdownMenu from './containers/dropdown_menu_container';\n\nconst mapDispatchToProps = (dispatch, { statusId }) => ({\n\n  onItemClick (index) {\n    dispatch(openModal({\n      modalType: 'COMPARE_HISTORY',\n      modalProps: { index, statusId },\n    }));\n  },\n\n});\n\nclass EditedTimestamp extends PureComponent {\n\n  static propTypes = {\n    statusId: PropTypes.string.isRequired,\n    timestamp: PropTypes.string.isRequired,\n    intl: PropTypes.object.isRequired,\n    onItemClick: PropTypes.func.isRequired,\n  };\n\n  handleItemClick = (item, i) => {\n    const { onItemClick } = this.props;\n    onItemClick(i);\n  };\n\n  renderHeader = items => {\n    return (\n      <FormattedMessage id='status.edited_x_times' defaultMessage='Edited {count, plural, one {# time} other {# times}}' values={{ count: items.size - 1 }} />\n    );\n  };\n\n  renderItem = (item, index, { onClick, onKeyPress }) => {\n    const formattedDate = <RelativeTimestamp timestamp={item.get('created_at')} short={false} />;\n    const formattedName = <InlineAccount accountId={item.get('account')} />;\n\n    const label = item.get('original') ? (\n      <FormattedMessage id='status.history.created' defaultMessage='{name} created {date}' values={{ name: formattedName, date: formattedDate }} />\n    ) : (\n      <FormattedMessage id='status.history.edited' defaultMessage='{name} edited {date}' values={{ name: formattedName, date: formattedDate }} />\n    );\n\n    return (\n      <li className='dropdown-menu__item edited-timestamp__history__item' key={item.get('created_at')}>\n        <button data-index={index} onClick={onClick} onKeyPress={onKeyPress}>{label}</button>\n      </li>\n    );\n  };\n\n  render () {\n    const { timestamp, intl, statusId } = this.props;\n\n    return (\n      <DropdownMenu statusId={statusId} renderItem={this.renderItem} scrollable renderHeader={this.renderHeader} onItemClick={this.handleItemClick}>\n        <button className='dropdown-menu__text-button'>\n          <FormattedMessage id='status.edited' defaultMessage='Edited {date}' values={{ date: intl.formatDate(timestamp, { hour12: false, month: 'short', day: '2-digit', hour: '2-digit', minute: '2-digit' }) }} /> <Icon id='caret-down' icon={ArrowDropDownIcon} />\n        </button>\n      </DropdownMenu>\n    );\n  }\n\n}\n\nexport default connect(null, mapDispatchToProps)(injectIntl(EditedTimestamp));\n","import PropTypes from 'prop-types';\n\nimport { FormattedDate, FormattedMessage } from 'react-intl';\n\nimport classNames from 'classnames';\nimport { Link, withRouter } from 'react-router-dom';\n\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\n\nimport { ReactComponent as AlternateEmailIcon } from '@material-symbols/svg-600/outlined/alternate_email.svg';\nimport { ReactComponent as RepeatIcon } from '@material-symbols/svg-600/outlined/repeat.svg';\nimport { ReactComponent as StarIcon } from '@material-symbols/svg-600/outlined/star-fill.svg';\n\nimport { AnimatedNumber } from 'mastodon/components/animated_number';\nimport EditedTimestamp from 'mastodon/components/edited_timestamp';\nimport { getHashtagBarForStatus } from 'mastodon/components/hashtag_bar';\nimport { Icon }  from 'mastodon/components/icon';\nimport PictureInPicturePlaceholder from 'mastodon/components/picture_in_picture_placeholder';\nimport { VisibilityIcon } from 'mastodon/components/visibility_icon';\nimport { WithRouterPropTypes } from 'mastodon/utils/react_router';\n\nimport { Avatar } from '../../../components/avatar';\nimport { DisplayName } from '../../../components/display_name';\nimport MediaGallery from '../../../components/media_gallery';\nimport StatusContent from '../../../components/status_content';\nimport Audio from '../../audio';\nimport scheduleIdleTask from '../../ui/util/schedule_idle_task';\nimport Video from '../../video';\n\nimport Card from './card';\n\nclass DetailedStatus extends ImmutablePureComponent {\n\n  static propTypes = {\n    status: ImmutablePropTypes.map,\n    onOpenMedia: PropTypes.func.isRequired,\n    onOpenVideo: PropTypes.func.isRequired,\n    onToggleHidden: PropTypes.func.isRequired,\n    onTranslate: PropTypes.func.isRequired,\n    measureHeight: PropTypes.bool,\n    onHeightChange: PropTypes.func,\n    domain: PropTypes.string.isRequired,\n    compact: PropTypes.bool,\n    showMedia: PropTypes.bool,\n    pictureInPicture: ImmutablePropTypes.contains({\n      inUse: PropTypes.bool,\n      available: PropTypes.bool,\n    }),\n    onToggleMediaVisibility: PropTypes.func,\n    ...WithRouterPropTypes,\n  };\n\n  state = {\n    height: null,\n  };\n\n  handleAccountClick = (e) => {\n    if (e.button === 0 && !(e.ctrlKey || e.metaKey) && this.props.history) {\n      e.preventDefault();\n      this.props.history.push(`/@${this.props.status.getIn(['account', 'acct'])}`);\n    }\n\n    e.stopPropagation();\n  };\n\n  handleOpenVideo = (options) => {\n    this.props.onOpenVideo(this.props.status.getIn(['media_attachments', 0]), options);\n  };\n\n  handleExpandedToggle = () => {\n    this.props.onToggleHidden(this.props.status);\n  };\n\n  _measureHeight (heightJustChanged) {\n    if (this.props.measureHeight && this.node) {\n      scheduleIdleTask(() => this.node && this.setState({ height: Math.ceil(this.node.scrollHeight) + 1 }));\n\n      if (this.props.onHeightChange && heightJustChanged) {\n        this.props.onHeightChange();\n      }\n    }\n  }\n\n  setRef = c => {\n    this.node = c;\n    this._measureHeight();\n  };\n\n  componentDidUpdate (prevProps, prevState) {\n    this._measureHeight(prevState.height !== this.state.height);\n  }\n\n  handleModalLink = e => {\n    e.preventDefault();\n\n    let href;\n\n    if (e.target.nodeName !== 'A') {\n      href = e.target.parentNode.href;\n    } else {\n      href = e.target.href;\n    }\n\n    window.open(href, 'mastodon-intent', 'width=445,height=600,resizable=no,menubar=no,status=no,scrollbars=yes');\n  };\n\n  handleTranslate = () => {\n    const { onTranslate, status } = this.props;\n    onTranslate(status);\n  };\n\n  _properStatus () {\n    const { status } = this.props;\n\n    if (status.get('reblog', null) !== null && typeof status.get('reblog') === 'object') {\n      return status.get('reblog');\n    } else {\n      return status;\n    }\n  }\n\n  getAttachmentAspectRatio () {\n    const attachments = this._properStatus().get('media_attachments');\n\n    if (attachments.getIn([0, 'type']) === 'video') {\n      return `${attachments.getIn([0, 'meta', 'original', 'width'])} / ${attachments.getIn([0, 'meta', 'original', 'height'])}`;\n    } else if (attachments.getIn([0, 'type']) === 'audio') {\n      return '16 / 9';\n    } else {\n      return (attachments.size === 1 && attachments.getIn([0, 'meta', 'small', 'aspect'])) ? attachments.getIn([0, 'meta', 'small', 'aspect']) : '3 / 2';\n    }\n  }\n\n  render () {\n    const status = this._properStatus();\n    const outerStyle = { boxSizing: 'border-box' };\n    const { compact, pictureInPicture } = this.props;\n\n    if (!status) {\n      return null;\n    }\n\n    let media           = '';\n    let applicationLink = '';\n    let reblogLink = '';\n    const reblogIcon = 'retweet';\n    const reblogIconComponent = RepeatIcon;\n    let favouriteLink = '';\n    let edited = '';\n\n    if (this.props.measureHeight) {\n      outerStyle.height = `${this.state.height}px`;\n    }\n\n    const language = status.getIn(['translation', 'language']) || status.get('language');\n\n    if (pictureInPicture.get('inUse')) {\n      media = <PictureInPicturePlaceholder aspectRatio={this.getAttachmentAspectRatio()} />;\n    } else if (status.get('media_attachments').size > 0) {\n      if (status.getIn(['media_attachments', 0, 'type']) === 'audio') {\n        const attachment = status.getIn(['media_attachments', 0]);\n        const description = attachment.getIn(['translation', 'description']) || attachment.get('description');\n\n        media = (\n          <Audio\n            src={attachment.get('url')}\n            alt={description}\n            lang={language}\n            duration={attachment.getIn(['meta', 'original', 'duration'], 0)}\n            poster={attachment.get('preview_url') || status.getIn(['account', 'avatar_static'])}\n            backgroundColor={attachment.getIn(['meta', 'colors', 'background'])}\n            foregroundColor={attachment.getIn(['meta', 'colors', 'foreground'])}\n            accentColor={attachment.getIn(['meta', 'colors', 'accent'])}\n            sensitive={status.get('sensitive')}\n            visible={this.props.showMedia}\n            blurhash={attachment.get('blurhash')}\n            height={150}\n            onToggleVisibility={this.props.onToggleMediaVisibility}\n          />\n        );\n      } else if (status.getIn(['media_attachments', 0, 'type']) === 'video') {\n        const attachment = status.getIn(['media_attachments', 0]);\n        const description = attachment.getIn(['translation', 'description']) || attachment.get('description');\n\n        media = (\n          <Video\n            preview={attachment.get('preview_url')}\n            frameRate={attachment.getIn(['meta', 'original', 'frame_rate'])}\n            aspectRatio={`${attachment.getIn(['meta', 'original', 'width'])} / ${attachment.getIn(['meta', 'original', 'height'])}`}\n            blurhash={attachment.get('blurhash')}\n            src={attachment.get('url')}\n            alt={description}\n            lang={language}\n            width={300}\n            height={150}\n            onOpenVideo={this.handleOpenVideo}\n            sensitive={status.get('sensitive')}\n            visible={this.props.showMedia}\n            onToggleVisibility={this.props.onToggleMediaVisibility}\n          />\n        );\n      } else {\n        media = (\n          <MediaGallery\n            standalone\n            sensitive={status.get('sensitive')}\n            media={status.get('media_attachments')}\n            lang={language}\n            height={300}\n            onOpenMedia={this.props.onOpenMedia}\n            visible={this.props.showMedia}\n            onToggleVisibility={this.props.onToggleMediaVisibility}\n          />\n        );\n      }\n    } else if (status.get('spoiler_text').length === 0) {\n      media = <Card sensitive={status.get('sensitive')} onOpenMedia={this.props.onOpenMedia} card={status.get('card', null)} />;\n    }\n\n    if (status.get('application')) {\n      applicationLink = <> · <a className='detailed-status__application' href={status.getIn(['application', 'website'])} target='_blank' rel='noopener noreferrer'>{status.getIn(['application', 'name'])}</a></>;\n    }\n\n    const visibilityLink = <> · <VisibilityIcon visibility={status.get('visibility')} /></>;\n\n    if (['private', 'direct'].includes(status.get('visibility'))) {\n      reblogLink = '';\n    } else if (this.props.history) {\n      reblogLink = (\n        <>\n          {' · '}\n          <Link to={`/@${status.getIn(['account', 'acct'])}/${status.get('id')}/reblogs`} className='detailed-status__link'>\n            <Icon id={reblogIcon} icon={reblogIconComponent} />\n            <span className='detailed-status__reblogs'>\n              <AnimatedNumber value={status.get('reblogs_count')} />\n            </span>\n          </Link>\n        </>\n      );\n    } else {\n      reblogLink = (\n        <>\n          {' · '}\n          <a href={`/interact/${status.get('id')}?type=reblog`} className='detailed-status__link' onClick={this.handleModalLink}>\n            <Icon id={reblogIcon} icon={reblogIconComponent} />\n            <span className='detailed-status__reblogs'>\n              <AnimatedNumber value={status.get('reblogs_count')} />\n            </span>\n          </a>\n        </>\n      );\n    }\n\n    if (this.props.history) {\n      favouriteLink = (\n        <Link to={`/@${status.getIn(['account', 'acct'])}/${status.get('id')}/favourites`} className='detailed-status__link'>\n          <Icon id='star' icon={StarIcon} />\n          <span className='detailed-status__favorites'>\n            <AnimatedNumber value={status.get('favourites_count')} />\n          </span>\n        </Link>\n      );\n    } else {\n      favouriteLink = (\n        <a href={`/interact/${status.get('id')}?type=favourite`} className='detailed-status__link' onClick={this.handleModalLink}>\n          <Icon id='star' icon={StarIcon} />\n          <span className='detailed-status__favorites'>\n            <AnimatedNumber value={status.get('favourites_count')} />\n          </span>\n        </a>\n      );\n    }\n\n    if (status.get('edited_at')) {\n      edited = (\n        <>\n          {' · '}\n          <EditedTimestamp statusId={status.get('id')} timestamp={status.get('edited_at')} />\n        </>\n      );\n    }\n\n    const {statusContentProps, hashtagBar} = getHashtagBarForStatus(status);\n    const expanded = !status.get('hidden') || status.get('spoiler_text').length === 0;\n\n    return (\n      <div style={outerStyle}>\n        <div ref={this.setRef} className={classNames('detailed-status', { compact })}>\n          {status.get('visibility') === 'direct' && (\n            <div className='status__prepend'>\n              <div className='status__prepend-icon-wrapper'><Icon id='at' icon={AlternateEmailIcon} className='status__prepend-icon' /></div>\n              <FormattedMessage id='status.direct_indicator' defaultMessage='Private mention' />\n            </div>\n          )}\n          <a href={`/@${status.getIn(['account', 'acct'])}`} onClick={this.handleAccountClick} className='detailed-status__display-name'>\n            <div className='detailed-status__display-avatar'><Avatar account={status.get('account')} size={46} /></div>\n            <DisplayName account={status.get('account')} localDomain={this.props.domain} />\n          </a>\n\n          <StatusContent\n            status={status}\n            expanded={!status.get('hidden')}\n            onExpandedToggle={this.handleExpandedToggle}\n            onTranslate={this.handleTranslate}\n            {...statusContentProps}\n          />\n\n          {media}\n\n          {expanded && hashtagBar}\n\n          <div className='detailed-status__meta'>\n            <a className='detailed-status__datetime' href={`/@${status.getIn(['account', 'acct'])}/${status.get('id')}`} target='_blank' rel='noopener noreferrer'>\n              <FormattedDate value={new Date(status.get('created_at'))} hour12={false} year='numeric' month='short' day='2-digit' hour='2-digit' minute='2-digit' />\n            </a>{edited}{visibilityLink}{applicationLink}{reblogLink} · {favouriteLink}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n}\n\nexport default withRouter(DetailedStatus);\n","import PropTypes from 'prop-types';\n\nimport { defineMessages, injectIntl, FormattedMessage } from 'react-intl';\n\nimport classNames from 'classnames';\nimport { Helmet } from 'react-helmet';\nimport { withRouter } from 'react-router-dom';\n\nimport Immutable from 'immutable';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport { connect } from 'react-redux';\nimport { createSelector } from 'reselect';\n\nimport { ReactComponent as VisibilityIcon } from '@material-symbols/svg-600/outlined/visibility.svg';\nimport { ReactComponent as VisibilityOffIcon } from '@material-symbols/svg-600/outlined/visibility_off.svg';\nimport { HotKeys } from 'react-hotkeys';\n\nimport { Icon }  from 'mastodon/components/icon';\nimport { LoadingIndicator } from 'mastodon/components/loading_indicator';\nimport ScrollContainer from 'mastodon/containers/scroll_container';\nimport BundleColumnError from 'mastodon/features/ui/components/bundle_column_error';\nimport { WithRouterPropTypes } from 'mastodon/utils/react_router';\n\nimport {\n  unblockAccount,\n  unmuteAccount,\n} from '../../actions/accounts';\nimport { initBlockModal } from '../../actions/blocks';\nimport { initBoostModal } from '../../actions/boosts';\nimport {\n  replyCompose,\n  mentionCompose,\n  directCompose,\n} from '../../actions/compose';\nimport {\n  blockDomain,\n  unblockDomain,\n} from '../../actions/domain_blocks';\nimport {\n  favourite,\n  unfavourite,\n  bookmark,\n  unbookmark,\n  reblog,\n  unreblog,\n  pin,\n  unpin,\n} from '../../actions/interactions';\nimport { openModal } from '../../actions/modal';\nimport { initMuteModal } from '../../actions/mutes';\nimport { initReport } from '../../actions/reports';\nimport {\n  fetchStatus,\n  muteStatus,\n  unmuteStatus,\n  deleteStatus,\n  editStatus,\n  hideStatus,\n  revealStatus,\n  translateStatus,\n  undoStatusTranslation,\n} from '../../actions/statuses';\nimport ColumnHeader from '../../components/column_header';\nimport { textForScreenReader, defaultMediaVisibility } from '../../components/status';\nimport StatusContainer from '../../containers/status_container';\nimport { boostModal, deleteModal } from '../../initial_state';\nimport { makeGetStatus, makeGetPictureInPicture } from '../../selectors';\nimport Column from '../ui/components/column';\nimport { attachFullscreenListener, detachFullscreenListener, isFullscreen } from '../ui/util/fullscreen';\n\nimport ActionBar from './components/action_bar';\nimport DetailedStatus from './components/detailed_status';\n\n\nconst messages = defineMessages({\n  deleteConfirm: { id: 'confirmations.delete.confirm', defaultMessage: 'Delete' },\n  deleteMessage: { id: 'confirmations.delete.message', defaultMessage: 'Are you sure you want to delete this status?' },\n  redraftConfirm: { id: 'confirmations.redraft.confirm', defaultMessage: 'Delete & redraft' },\n  redraftMessage: { id: 'confirmations.redraft.message', defaultMessage: 'Are you sure you want to delete this status and re-draft it? Favorites and boosts will be lost, and replies to the original post will be orphaned.' },\n  revealAll: { id: 'status.show_more_all', defaultMessage: 'Show more for all' },\n  hideAll: { id: 'status.show_less_all', defaultMessage: 'Show less for all' },\n  statusTitleWithAttachments: { id: 'status.title.with_attachments', defaultMessage: '{user} posted {attachmentCount, plural, one {an attachment} other {# attachments}}' },\n  detailedStatus: { id: 'status.detailed_status', defaultMessage: 'Detailed conversation view' },\n  replyConfirm: { id: 'confirmations.reply.confirm', defaultMessage: 'Reply' },\n  replyMessage: { id: 'confirmations.reply.message', defaultMessage: 'Replying now will overwrite the message you are currently composing. Are you sure you want to proceed?' },\n  blockDomainConfirm: { id: 'confirmations.domain_block.confirm', defaultMessage: 'Block entire domain' },\n});\n\nconst makeMapStateToProps = () => {\n  const getStatus = makeGetStatus();\n  const getPictureInPicture = makeGetPictureInPicture();\n\n  const getAncestorsIds = createSelector([\n    (_, { id }) => id,\n    state => state.getIn(['contexts', 'inReplyTos']),\n  ], (statusId, inReplyTos) => {\n    let ancestorsIds = Immutable.List();\n    ancestorsIds = ancestorsIds.withMutations(mutable => {\n      let id = statusId;\n\n      while (id && !mutable.includes(id)) {\n        mutable.unshift(id);\n        id = inReplyTos.get(id);\n      }\n    });\n\n    return ancestorsIds;\n  });\n\n  const getDescendantsIds = createSelector([\n    (_, { id }) => id,\n    state => state.getIn(['contexts', 'replies']),\n    state => state.get('statuses'),\n  ], (statusId, contextReplies, statuses) => {\n    let descendantsIds = [];\n    const ids = [statusId];\n\n    while (ids.length > 0) {\n      let id        = ids.pop();\n      const replies = contextReplies.get(id);\n\n      if (statusId !== id) {\n        descendantsIds.push(id);\n      }\n\n      if (replies) {\n        replies.reverse().forEach(reply => {\n          if (!ids.includes(reply) && !descendantsIds.includes(reply) && statusId !== reply) ids.push(reply);\n        });\n      }\n    }\n\n    let insertAt = descendantsIds.findIndex((id) => statuses.get(id).get('in_reply_to_account_id') !== statuses.get(id).get('account'));\n    if (insertAt !== -1) {\n      descendantsIds.forEach((id, idx) => {\n        if (idx > insertAt && statuses.get(id).get('in_reply_to_account_id') === statuses.get(id).get('account')) {\n          descendantsIds.splice(idx, 1);\n          descendantsIds.splice(insertAt, 0, id);\n          insertAt += 1;\n        }\n      });\n    }\n\n    return Immutable.List(descendantsIds);\n  });\n\n  const mapStateToProps = (state, props) => {\n    const status = getStatus(state, { id: props.params.statusId });\n\n    let ancestorsIds   = Immutable.List();\n    let descendantsIds = Immutable.List();\n\n    if (status) {\n      ancestorsIds   = getAncestorsIds(state, { id: status.get('in_reply_to_id') });\n      descendantsIds = getDescendantsIds(state, { id: status.get('id') });\n    }\n\n    return {\n      isLoading: state.getIn(['statuses', props.params.statusId, 'isLoading']),\n      status,\n      ancestorsIds,\n      descendantsIds,\n      askReplyConfirmation: state.getIn(['compose', 'text']).trim().length !== 0,\n      domain: state.getIn(['meta', 'domain']),\n      pictureInPicture: getPictureInPicture(state, { id: props.params.statusId }),\n    };\n  };\n\n  return mapStateToProps;\n};\n\nconst truncate = (str, num) => {\n  const arr = Array.from(str);\n  if (arr.length > num) {\n    return arr.slice(0, num).join('') + '…';\n  } else {\n    return str;\n  }\n};\n\nconst titleFromStatus = (intl, status) => {\n  const displayName = status.getIn(['account', 'display_name']);\n  const username = status.getIn(['account', 'username']);\n  const user = displayName.trim().length === 0 ? username : displayName;\n  const text = status.get('search_index');\n  const attachmentCount = status.get('media_attachments').size;\n\n  return text ? `${user}: \"${truncate(text, 30)}\"` : intl.formatMessage(messages.statusTitleWithAttachments, { user, attachmentCount });\n};\n\nclass Status extends ImmutablePureComponent {\n\n  static contextTypes = {\n    identity: PropTypes.object,\n  };\n\n  static propTypes = {\n    params: PropTypes.object.isRequired,\n    dispatch: PropTypes.func.isRequired,\n    status: ImmutablePropTypes.map,\n    isLoading: PropTypes.bool,\n    ancestorsIds: ImmutablePropTypes.list.isRequired,\n    descendantsIds: ImmutablePropTypes.list.isRequired,\n    intl: PropTypes.object.isRequired,\n    askReplyConfirmation: PropTypes.bool,\n    multiColumn: PropTypes.bool,\n    domain: PropTypes.string.isRequired,\n    pictureInPicture: ImmutablePropTypes.contains({\n      inUse: PropTypes.bool,\n      available: PropTypes.bool,\n    }),\n    ...WithRouterPropTypes\n  };\n\n  state = {\n    fullscreen: false,\n    showMedia: defaultMediaVisibility(this.props.status),\n    loadedStatusId: undefined,\n  };\n\n  UNSAFE_componentWillMount () {\n    this.props.dispatch(fetchStatus(this.props.params.statusId));\n  }\n\n  componentDidMount () {\n    attachFullscreenListener(this.onFullScreenChange);\n\n    this._scrollStatusIntoView();\n  }\n\n  UNSAFE_componentWillReceiveProps (nextProps) {\n    if (nextProps.params.statusId !== this.props.params.statusId && nextProps.params.statusId) {\n      this.props.dispatch(fetchStatus(nextProps.params.statusId));\n    }\n\n    if (nextProps.status && nextProps.status.get('id') !== this.state.loadedStatusId) {\n      this.setState({ showMedia: defaultMediaVisibility(nextProps.status), loadedStatusId: nextProps.status.get('id') });\n    }\n  }\n\n  handleToggleMediaVisibility = () => {\n    this.setState({ showMedia: !this.state.showMedia });\n  };\n\n  handleFavouriteClick = (status) => {\n    const { dispatch } = this.props;\n    const { signedIn } = this.context.identity;\n\n    if (signedIn) {\n      if (status.get('favourited')) {\n        dispatch(unfavourite(status));\n      } else {\n        dispatch(favourite(status));\n      }\n    } else {\n      dispatch(openModal({\n        modalType: 'INTERACTION',\n        modalProps: {\n          type: 'favourite',\n          accountId: status.getIn(['account', 'id']),\n          url: status.get('uri'),\n        },\n      }));\n    }\n  };\n\n  handlePin = (status) => {\n    if (status.get('pinned')) {\n      this.props.dispatch(unpin(status));\n    } else {\n      this.props.dispatch(pin(status));\n    }\n  };\n\n  handleReplyClick = (status) => {\n    const { askReplyConfirmation, dispatch, intl } = this.props;\n    const { signedIn } = this.context.identity;\n\n    if (signedIn) {\n      if (askReplyConfirmation) {\n        dispatch(openModal({\n          modalType: 'CONFIRM',\n          modalProps: {\n            message: intl.formatMessage(messages.replyMessage),\n            confirm: intl.formatMessage(messages.replyConfirm),\n            onConfirm: () => dispatch(replyCompose(status, this.props.history)),\n          },\n        }));\n      } else {\n        dispatch(replyCompose(status, this.props.history));\n      }\n    } else {\n      dispatch(openModal({\n        modalType: 'INTERACTION',\n        modalProps: {\n          type: 'reply',\n          accountId: status.getIn(['account', 'id']),\n          url: status.get('uri'),\n        },\n      }));\n    }\n  };\n\n  handleModalReblog = (status, privacy) => {\n    this.props.dispatch(reblog(status, privacy));\n  };\n\n  handleReblogClick = (status, e) => {\n    const { dispatch } = this.props;\n    const { signedIn } = this.context.identity;\n\n    if (signedIn) {\n      if (status.get('reblogged')) {\n        dispatch(unreblog(status));\n      } else {\n        if ((e && e.shiftKey) || !boostModal) {\n          this.handleModalReblog(status);\n        } else {\n          dispatch(initBoostModal({ status, onReblog: this.handleModalReblog }));\n        }\n      }\n    } else {\n      dispatch(openModal({\n        modalType: 'INTERACTION',\n        modalProps: {\n          type: 'reblog',\n          accountId: status.getIn(['account', 'id']),\n          url: status.get('uri'),\n        },\n      }));\n    }\n  };\n\n  handleBookmarkClick = (status) => {\n    if (status.get('bookmarked')) {\n      this.props.dispatch(unbookmark(status));\n    } else {\n      this.props.dispatch(bookmark(status));\n    }\n  };\n\n  handleDeleteClick = (status, history, withRedraft = false) => {\n    const { dispatch, intl } = this.props;\n\n    if (!deleteModal) {\n      dispatch(deleteStatus(status.get('id'), history, withRedraft));\n    } else {\n      dispatch(openModal({\n        modalType: 'CONFIRM',\n        modalProps: {\n          message: intl.formatMessage(withRedraft ? messages.redraftMessage : messages.deleteMessage),\n          confirm: intl.formatMessage(withRedraft ? messages.redraftConfirm : messages.deleteConfirm),\n          onConfirm: () => dispatch(deleteStatus(status.get('id'), history, withRedraft)),\n        },\n      }));\n    }\n  };\n\n  handleEditClick = (status, history) => {\n    this.props.dispatch(editStatus(status.get('id'), history));\n  };\n\n  handleDirectClick = (account, router) => {\n    this.props.dispatch(directCompose(account, router));\n  };\n\n  handleMentionClick = (account, router) => {\n    this.props.dispatch(mentionCompose(account, router));\n  };\n\n  handleOpenMedia = (media, index, lang) => {\n    this.props.dispatch(openModal({\n      modalType: 'MEDIA',\n      modalProps: { statusId: this.props.status.get('id'), media, index, lang },\n    }));\n  };\n\n  handleOpenVideo = (media, lang, options) => {\n    this.props.dispatch(openModal({\n      modalType: 'VIDEO',\n      modalProps: { statusId: this.props.status.get('id'), media, lang, options },\n    }));\n  };\n\n  handleHotkeyOpenMedia = e => {\n    const { status } = this.props;\n\n    e.preventDefault();\n\n    if (status.get('media_attachments').size > 0) {\n      if (status.getIn(['media_attachments', 0, 'type']) === 'video') {\n        this.handleOpenVideo(status.getIn(['media_attachments', 0]), { startTime: 0 });\n      } else {\n        this.handleOpenMedia(status.get('media_attachments'), 0);\n      }\n    }\n  };\n\n  handleMuteClick = (account) => {\n    this.props.dispatch(initMuteModal(account));\n  };\n\n  handleConversationMuteClick = (status) => {\n    if (status.get('muted')) {\n      this.props.dispatch(unmuteStatus(status.get('id')));\n    } else {\n      this.props.dispatch(muteStatus(status.get('id')));\n    }\n  };\n\n  handleToggleHidden = (status) => {\n    if (status.get('hidden')) {\n      this.props.dispatch(revealStatus(status.get('id')));\n    } else {\n      this.props.dispatch(hideStatus(status.get('id')));\n    }\n  };\n\n  handleToggleAll = () => {\n    const { status, ancestorsIds, descendantsIds } = this.props;\n    const statusIds = [status.get('id')].concat(ancestorsIds.toJS(), descendantsIds.toJS());\n\n    if (status.get('hidden')) {\n      this.props.dispatch(revealStatus(statusIds));\n    } else {\n      this.props.dispatch(hideStatus(statusIds));\n    }\n  };\n\n  handleTranslate = status => {\n    const { dispatch } = this.props;\n\n    if (status.get('translation')) {\n      dispatch(undoStatusTranslation(status.get('id'), status.get('poll')));\n    } else {\n      dispatch(translateStatus(status.get('id')));\n    }\n  };\n\n  handleBlockClick = (status) => {\n    const { dispatch } = this.props;\n    const account = status.get('account');\n    dispatch(initBlockModal(account));\n  };\n\n  handleReport = (status) => {\n    this.props.dispatch(initReport(status.get('account'), status));\n  };\n\n  handleEmbed = (status) => {\n    this.props.dispatch(openModal({\n      modalType: 'EMBED',\n      modalProps: { id: status.get('id') },\n    }));\n  };\n\n  handleUnmuteClick = account => {\n    this.props.dispatch(unmuteAccount(account.get('id')));\n  };\n\n  handleUnblockClick = account => {\n    this.props.dispatch(unblockAccount(account.get('id')));\n  };\n\n  handleBlockDomainClick = domain => {\n    this.props.dispatch(openModal({\n      modalType: 'CONFIRM',\n      modalProps: {\n        message: <FormattedMessage id='confirmations.domain_block.message' defaultMessage='Are you really, really sure you want to block the entire {domain}? In most cases a few targeted blocks or mutes are sufficient and preferable. You will not see content from that domain in any public timelines or your notifications. Your followers from that domain will be removed.' values={{ domain: <strong>{domain}</strong> }} />,\n        confirm: this.props.intl.formatMessage(messages.blockDomainConfirm),\n        onConfirm: () => this.props.dispatch(blockDomain(domain)),\n      },\n    }));\n  };\n\n  handleUnblockDomainClick = domain => {\n    this.props.dispatch(unblockDomain(domain));\n  };\n\n\n  handleHotkeyMoveUp = () => {\n    this.handleMoveUp(this.props.status.get('id'));\n  };\n\n  handleHotkeyMoveDown = () => {\n    this.handleMoveDown(this.props.status.get('id'));\n  };\n\n  handleHotkeyReply = e => {\n    e.preventDefault();\n    this.handleReplyClick(this.props.status);\n  };\n\n  handleHotkeyFavourite = () => {\n    this.handleFavouriteClick(this.props.status);\n  };\n\n  handleHotkeyBoost = () => {\n    this.handleReblogClick(this.props.status);\n  };\n\n  handleHotkeyMention = e => {\n    e.preventDefault();\n    this.handleMentionClick(this.props.status.get('account'));\n  };\n\n  handleHotkeyOpenProfile = () => {\n    this.props.history.push(`/@${this.props.status.getIn(['account', 'acct'])}`);\n  };\n\n  handleHotkeyToggleHidden = () => {\n    this.handleToggleHidden(this.props.status);\n  };\n\n  handleHotkeyToggleSensitive = () => {\n    this.handleToggleMediaVisibility();\n  };\n\n  handleMoveUp = id => {\n    const { status, ancestorsIds, descendantsIds } = this.props;\n\n    if (id === status.get('id')) {\n      this._selectChild(ancestorsIds.size - 1, true);\n    } else {\n      let index = ancestorsIds.indexOf(id);\n\n      if (index === -1) {\n        index = descendantsIds.indexOf(id);\n        this._selectChild(ancestorsIds.size + index, true);\n      } else {\n        this._selectChild(index - 1, true);\n      }\n    }\n  };\n\n  handleMoveDown = id => {\n    const { status, ancestorsIds, descendantsIds } = this.props;\n\n    if (id === status.get('id')) {\n      this._selectChild(ancestorsIds.size + 1, false);\n    } else {\n      let index = ancestorsIds.indexOf(id);\n\n      if (index === -1) {\n        index = descendantsIds.indexOf(id);\n        this._selectChild(ancestorsIds.size + index + 2, false);\n      } else {\n        this._selectChild(index + 1, false);\n      }\n    }\n  };\n\n  _selectChild (index, align_top) {\n    const container = this.node;\n    const element = container.querySelectorAll('.focusable')[index];\n\n    if (element) {\n      if (align_top && container.scrollTop > element.offsetTop) {\n        element.scrollIntoView(true);\n      } else if (!align_top && container.scrollTop + container.clientHeight < element.offsetTop + element.offsetHeight) {\n        element.scrollIntoView(false);\n      }\n      element.focus();\n    }\n  }\n\n  renderChildren (list, ancestors) {\n    const { params: { statusId } } = this.props;\n\n    return list.map((id, i) => (\n      <StatusContainer\n        key={id}\n        id={id}\n        onMoveUp={this.handleMoveUp}\n        onMoveDown={this.handleMoveDown}\n        contextType='thread'\n        previousId={i > 0 ? list.get(i - 1) : undefined}\n        nextId={list.get(i + 1) || (ancestors && statusId)}\n        rootId={statusId}\n      />\n    ));\n  }\n\n  setRef = c => {\n    this.node = c;\n  };\n\n  _scrollStatusIntoView () {\n    const { status, multiColumn } = this.props;\n\n    if (status) {\n      window.requestAnimationFrame(() => {\n        this.node?.querySelector('.detailed-status__wrapper')?.scrollIntoView(true);\n\n        // In the single-column interface, `scrollIntoView` will put the post behind the header,\n        // so compensate for that.\n        if (!multiColumn) {\n          const offset = document.querySelector('.column-header__wrapper')?.getBoundingClientRect()?.bottom;\n          if (offset) {\n            const scrollingElement = document.scrollingElement || document.body;\n            scrollingElement.scrollBy(0, -offset);\n          }\n        }\n      });\n    }\n  }\n\n  componentDidUpdate (prevProps) {\n    const { status, ancestorsIds } = this.props;\n\n    if (status && (ancestorsIds.size > prevProps.ancestorsIds.size || prevProps.status?.get('id') !== status.get('id'))) {\n      this._scrollStatusIntoView();\n    }\n  }\n\n  componentWillUnmount () {\n    detachFullscreenListener(this.onFullScreenChange);\n  }\n\n  onFullScreenChange = () => {\n    this.setState({ fullscreen: isFullscreen() });\n  };\n\n  shouldUpdateScroll = (prevRouterProps, { location }) => {\n    // Do not change scroll when opening a modal\n    if (location.state?.mastodonModalKey !== prevRouterProps?.location?.state?.mastodonModalKey) {\n      return false;\n    }\n\n    // Scroll to focused post if it is loaded\n    const child = this.node?.querySelector('.detailed-status__wrapper');\n    if (child) {\n      return [0, child.offsetTop];\n    }\n\n    // Do not scroll otherwise, `componentDidUpdate` will take care of that\n    return false;\n  };\n\n  render () {\n    let ancestors, descendants;\n    const { isLoading, status, ancestorsIds, descendantsIds, intl, domain, multiColumn, pictureInPicture } = this.props;\n    const { fullscreen } = this.state;\n\n    if (isLoading) {\n      return (\n        <Column>\n          <LoadingIndicator />\n        </Column>\n      );\n    }\n\n    if (status === null) {\n      return (\n        <BundleColumnError multiColumn={multiColumn} errorType='routing' />\n      );\n    }\n\n    if (ancestorsIds && ancestorsIds.size > 0) {\n      ancestors = <>{this.renderChildren(ancestorsIds, true)}</>;\n    }\n\n    if (descendantsIds && descendantsIds.size > 0) {\n      descendants = <>{this.renderChildren(descendantsIds)}</>;\n    }\n\n    const isLocal = status.getIn(['account', 'acct'], '').indexOf('@') === -1;\n    const isIndexable = !status.getIn(['account', 'noindex']);\n\n    const handlers = {\n      moveUp: this.handleHotkeyMoveUp,\n      moveDown: this.handleHotkeyMoveDown,\n      reply: this.handleHotkeyReply,\n      favourite: this.handleHotkeyFavourite,\n      boost: this.handleHotkeyBoost,\n      mention: this.handleHotkeyMention,\n      openProfile: this.handleHotkeyOpenProfile,\n      toggleHidden: this.handleHotkeyToggleHidden,\n      toggleSensitive: this.handleHotkeyToggleSensitive,\n      openMedia: this.handleHotkeyOpenMedia,\n    };\n\n    return (\n      <Column bindToDocument={!multiColumn} label={intl.formatMessage(messages.detailedStatus)}>\n        <ColumnHeader\n          showBackButton\n          multiColumn={multiColumn}\n          extraButton={(\n            <button type='button' className='column-header__button' title={intl.formatMessage(status.get('hidden') ? messages.revealAll : messages.hideAll)} aria-label={intl.formatMessage(status.get('hidden') ? messages.revealAll : messages.hideAll)} onClick={this.handleToggleAll}><Icon id={status.get('hidden') ? 'eye-slash' : 'eye'} icon={status.get('hidden') ? VisibilityOffIcon : VisibilityIcon} /></button>\n          )}\n        />\n\n        <ScrollContainer scrollKey='thread' shouldUpdateScroll={this.shouldUpdateScroll}>\n          <div className={classNames('scrollable', { fullscreen })} ref={this.setRef}>\n            {ancestors}\n\n            <HotKeys handlers={handlers}>\n              <div className={classNames('focusable', 'detailed-status__wrapper', `detailed-status__wrapper-${status.get('visibility')}`)} tabIndex={0} aria-label={textForScreenReader(intl, status, false)}>\n                <DetailedStatus\n                  key={`details-${status.get('id')}`}\n                  status={status}\n                  onOpenVideo={this.handleOpenVideo}\n                  onOpenMedia={this.handleOpenMedia}\n                  onToggleHidden={this.handleToggleHidden}\n                  onTranslate={this.handleTranslate}\n                  domain={domain}\n                  showMedia={this.state.showMedia}\n                  onToggleMediaVisibility={this.handleToggleMediaVisibility}\n                  pictureInPicture={pictureInPicture}\n                />\n\n                <ActionBar\n                  key={`action-bar-${status.get('id')}`}\n                  status={status}\n                  onReply={this.handleReplyClick}\n                  onFavourite={this.handleFavouriteClick}\n                  onReblog={this.handleReblogClick}\n                  onBookmark={this.handleBookmarkClick}\n                  onDelete={this.handleDeleteClick}\n                  onEdit={this.handleEditClick}\n                  onDirect={this.handleDirectClick}\n                  onMention={this.handleMentionClick}\n                  onMute={this.handleMuteClick}\n                  onUnmute={this.handleUnmuteClick}\n                  onMuteConversation={this.handleConversationMuteClick}\n                  onBlock={this.handleBlockClick}\n                  onUnblock={this.handleUnblockClick}\n                  onBlockDomain={this.handleBlockDomainClick}\n                  onUnblockDomain={this.handleUnblockDomainClick}\n                  onReport={this.handleReport}\n                  onPin={this.handlePin}\n                  onEmbed={this.handleEmbed}\n                />\n              </div>\n            </HotKeys>\n\n            {descendants}\n          </div>\n        </ScrollContainer>\n\n        <Helmet>\n          <title>{titleFromStatus(intl, status)}</title>\n          <meta name='robots' content={(isLocal && isIndexable) ? 'all' : 'noindex'} />\n          <link rel='canonical' href={status.get('url')} />\n        </Helmet>\n      </Column>\n    );\n  }\n\n}\n\nexport default withRouter(injectIntl(connect(makeMapStateToProps)(Status)));\n"],"sourceRoot":""}