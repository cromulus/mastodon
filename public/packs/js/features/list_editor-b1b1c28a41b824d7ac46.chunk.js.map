{"version":3,"sources":["webpack:///./app/javascript/mastodon/features/list_editor/components/account.jsx","webpack:///./app/javascript/mastodon/features/list_editor/components/edit_list_form.jsx","webpack:///./node_modules/@material-symbols/svg-600/outlined/cancel.svg","webpack:///./app/javascript/mastodon/features/list_editor/components/search.jsx","webpack:///./app/javascript/mastodon/features/list_editor/index.jsx"],"names":["messages","defineMessages","remove","id","defaultMessage","add","Account","ImmutablePureComponent","render","account","intl","onRemove","onAdd","added","this","props","button","_jsx","IconButton","icon","iconComponent","CloseIcon","title","formatMessage","onClick","AddIcon","className","Avatar","size","DisplayName","_defineProperty","ImmutablePropTypes","record","isRequired","PropTypes","object","func","bool","connect","makeMapStateToProps","getAccount","makeGetAccount","mapStateToProps","state","_ref","accountId","getIn","includes","mapDispatchToProps","dispatch","_ref2","removeFromListEditor","addToListEditor","injectIntl","ListForm","PureComponent","constructor","arguments","e","onChange","target","value","preventDefault","onSubmit","disabled","handleSubmit","handleChange","CheckIcon","handleClick","_path","changeListEditorTitle","submitListEditor","_extends","Object","assign","bind","i","length","source","key","prototype","hasOwnProperty","call","apply","SvgCancel","titleId","xmlns","width","height","viewBox","d","search","Search","keyCode","onClear","hasValue","style","display","type","onKeyUp","handleKeyUp","placeholder","role","tabIndex","handleClear","Icon","SearchIcon","classNames","active","CancelIcon","fetchListSuggestions","clearListSuggestions","changeListSuggestions","ListEditor","componentDidMount","onInitialize","listId","componentWillUnmount","onReset","accountIds","searchAccountIds","showSearch","EditListForm","map","Motion","defaultStyle","x","spring","stiffness","damping","transform","visibility","string","onClose","list","setupListEditor","resetListEditor"],"mappings":"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","file":"js/features/list_editor-b1b1c28a41b824d7ac46.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport { connect } from 'react-redux';\n\nimport { ReactComponent as AddIcon } from '@material-symbols/svg-600/outlined/add.svg';\nimport { ReactComponent as CloseIcon } from '@material-symbols/svg-600/outlined/close.svg';\n\nimport { removeFromListEditor, addToListEditor } from '../../../actions/lists';\nimport { Avatar } from '../../../components/avatar';\nimport { DisplayName } from '../../../components/display_name';\nimport { IconButton } from '../../../components/icon_button';\nimport { makeGetAccount } from '../../../selectors';\n\nconst messages = defineMessages({\n  remove: { id: 'lists.account.remove', defaultMessage: 'Remove from list' },\n  add: { id: 'lists.account.add', defaultMessage: 'Add to list' },\n});\n\nconst makeMapStateToProps = () => {\n  const getAccount = makeGetAccount();\n\n  const mapStateToProps = (state, { accountId, added }) => ({\n    account: getAccount(state, accountId),\n    added: typeof added === 'undefined' ? state.getIn(['listEditor', 'accounts', 'items']).includes(accountId) : added,\n  });\n\n  return mapStateToProps;\n};\n\nconst mapDispatchToProps = (dispatch, { accountId }) => ({\n  onRemove: () => dispatch(removeFromListEditor(accountId)),\n  onAdd: () => dispatch(addToListEditor(accountId)),\n});\n\nclass Account extends ImmutablePureComponent {\n\n  static propTypes = {\n    account: ImmutablePropTypes.record.isRequired,\n    intl: PropTypes.object.isRequired,\n    onRemove: PropTypes.func.isRequired,\n    onAdd: PropTypes.func.isRequired,\n    added: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    added: false,\n  };\n\n  render () {\n    const { account, intl, onRemove, onAdd, added } = this.props;\n\n    let button;\n\n    if (added) {\n      button = <IconButton icon='times' iconComponent={CloseIcon} title={intl.formatMessage(messages.remove)} onClick={onRemove} />;\n    } else {\n      button = <IconButton icon='plus' iconComponent={AddIcon} title={intl.formatMessage(messages.add)} onClick={onAdd} />;\n    }\n\n    return (\n      <div className='account'>\n        <div className='account__wrapper'>\n          <div className='account__display-name'>\n            <div className='account__avatar-wrapper'><Avatar account={account} size={36} /></div>\n            <DisplayName account={account} />\n          </div>\n\n          <div className='account__relationship'>\n            {button}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n}\n\nexport default connect(makeMapStateToProps, mapDispatchToProps)(injectIntl(Account));\n","import PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport { connect } from 'react-redux';\n\nimport { ReactComponent as CheckIcon } from '@material-symbols/svg-600/outlined/check.svg';\n\nimport { changeListEditorTitle, submitListEditor } from '../../../actions/lists';\nimport { IconButton } from '../../../components/icon_button';\n\nconst messages = defineMessages({\n  title: { id: 'lists.edit.submit', defaultMessage: 'Change title' },\n});\n\nconst mapStateToProps = state => ({\n  value: state.getIn(['listEditor', 'title']),\n  disabled: !state.getIn(['listEditor', 'isChanged']) || !state.getIn(['listEditor', 'title']),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: value => dispatch(changeListEditorTitle(value)),\n  onSubmit: () => dispatch(submitListEditor(false)),\n});\n\nclass ListForm extends PureComponent {\n\n  static propTypes = {\n    value: PropTypes.string.isRequired,\n    disabled: PropTypes.bool,\n    intl: PropTypes.object.isRequired,\n    onChange: PropTypes.func.isRequired,\n    onSubmit: PropTypes.func.isRequired,\n  };\n\n  handleChange = e => {\n    this.props.onChange(e.target.value);\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.onSubmit();\n  };\n\n  handleClick = () => {\n    this.props.onSubmit();\n  };\n\n  render () {\n    const { value, disabled, intl } = this.props;\n\n    const title = intl.formatMessage(messages.title);\n\n    return (\n      <form className='column-inline-form' onSubmit={this.handleSubmit}>\n        <input\n          className='setting-text'\n          value={value}\n          onChange={this.handleChange}\n        />\n\n        <IconButton\n          disabled={disabled}\n          icon='check'\n          iconComponent={CheckIcon}\n          title={title}\n          onClick={this.handleClick}\n        />\n      </form>\n    );\n  }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(injectIntl(ListForm));\n","var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgCancel(_ref) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 48,\n    height: 48,\n    viewBox: \"0 -960 960 960\",\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M334.522-288 480-433.478 625.478-288 672-334.522 526.522-480 672-625.478 625.478-672 480-526.522 334.522-672 288-625.478 433.478-480 288-334.522 334.522-288ZM480.078-65.869q-85.469 0-161.006-32.395-75.536-32.395-131.975-88.833-56.438-56.439-88.833-131.897-32.395-75.459-32.395-160.928 0-86.469 32.395-162.006 32.395-75.536 88.745-131.504 56.349-55.968 131.849-88.616 75.5-32.648 161.017-32.648 86.516 0 162.12 32.604 75.603 32.604 131.529 88.497t88.549 131.452Q894.696-566.584 894.696-480q0 85.547-32.648 161.075-32.648 75.527-88.616 131.896-55.968 56.37-131.426 88.765-75.459 32.395-161.928 32.395ZM480-145.087q139.739 0 237.326-97.732Q814.913-340.551 814.913-480q0-139.739-97.587-237.326-97.587-97.587-237.609-97.587-139.021 0-236.826 97.587-97.804 97.587-97.804 237.609 0 139.021 97.732 236.826Q340.551-145.087 480-145.087ZM480-480Z\"\n  })));\n}\nexport default __webpack_public_path__ + \"media/outlined/cancel-863f89e7.svg\";\nexport { SvgCancel as ReactComponent };","import PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport classNames from 'classnames';\n\nimport { connect } from 'react-redux';\n\nimport { ReactComponent as CancelIcon } from '@material-symbols/svg-600/outlined/cancel.svg';\nimport { ReactComponent as SearchIcon } from '@material-symbols/svg-600/outlined/search.svg';\n\nimport { Icon }  from 'mastodon/components/icon';\n\nimport { fetchListSuggestions, clearListSuggestions, changeListSuggestions } from '../../../actions/lists';\n\nconst messages = defineMessages({\n  search: { id: 'lists.search', defaultMessage: 'Search among people you follow' },\n});\n\nconst mapStateToProps = state => ({\n  value: state.getIn(['listEditor', 'suggestions', 'value']),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: value => dispatch(fetchListSuggestions(value)),\n  onClear: () => dispatch(clearListSuggestions()),\n  onChange: value => dispatch(changeListSuggestions(value)),\n});\n\nclass Search extends PureComponent {\n\n  static propTypes = {\n    intl: PropTypes.object.isRequired,\n    value: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n    onSubmit: PropTypes.func.isRequired,\n    onClear: PropTypes.func.isRequired,\n  };\n\n  handleChange = e => {\n    this.props.onChange(e.target.value);\n  };\n\n  handleKeyUp = e => {\n    if (e.keyCode === 13) {\n      this.props.onSubmit(this.props.value);\n    }\n  };\n\n  handleClear = () => {\n    this.props.onClear();\n  };\n\n  render () {\n    const { value, intl } = this.props;\n    const hasValue = value.length > 0;\n\n    return (\n      <div className='list-editor__search search'>\n        <label>\n          <span style={{ display: 'none' }}>{intl.formatMessage(messages.search)}</span>\n\n          <input\n            className='search__input'\n            type='text'\n            value={value}\n            onChange={this.handleChange}\n            onKeyUp={this.handleKeyUp}\n            placeholder={intl.formatMessage(messages.search)}\n          />\n        </label>\n\n        <div role='button' tabIndex={0} className='search__icon' onClick={this.handleClear}>\n          <Icon id='search' icon={SearchIcon} className={classNames({ active: !hasValue })} />\n          <Icon id='times-circle' icon={CancelIcon} aria-label={intl.formatMessage(messages.search)} className={classNames({ active: hasValue })} />\n        </div>\n      </div>\n    );\n  }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(injectIntl(Search));\n","import PropTypes from 'prop-types';\n\nimport { injectIntl } from 'react-intl';\n\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport { connect } from 'react-redux';\n\nimport spring from 'react-motion/lib/spring';\n\nimport { setupListEditor, clearListSuggestions, resetListEditor } from '../../actions/lists';\nimport Motion from '../ui/util/optional_motion';\n\nimport Account from './components/account';\nimport EditListForm from './components/edit_list_form';\nimport Search from './components/search';\n\nconst mapStateToProps = state => ({\n  accountIds: state.getIn(['listEditor', 'accounts', 'items']),\n  searchAccountIds: state.getIn(['listEditor', 'suggestions', 'items']),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onInitialize: listId => dispatch(setupListEditor(listId)),\n  onClear: () => dispatch(clearListSuggestions()),\n  onReset: () => dispatch(resetListEditor()),\n});\n\nclass ListEditor extends ImmutablePureComponent {\n\n  static propTypes = {\n    listId: PropTypes.string.isRequired,\n    onClose: PropTypes.func.isRequired,\n    intl: PropTypes.object.isRequired,\n    onInitialize: PropTypes.func.isRequired,\n    onClear: PropTypes.func.isRequired,\n    onReset: PropTypes.func.isRequired,\n    accountIds: ImmutablePropTypes.list.isRequired,\n    searchAccountIds: ImmutablePropTypes.list.isRequired,\n  };\n\n  componentDidMount () {\n    const { onInitialize, listId } = this.props;\n    onInitialize(listId);\n  }\n\n  componentWillUnmount () {\n    const { onReset } = this.props;\n    onReset();\n  }\n\n  render () {\n    const { accountIds, searchAccountIds, onClear } = this.props;\n    const showSearch = searchAccountIds.size > 0;\n\n    return (\n      <div className='modal-root__modal list-editor'>\n        <EditListForm />\n\n        <Search />\n\n        <div className='drawer__pager'>\n          <div className='drawer__inner list-editor__accounts'>\n            {accountIds.map(accountId => <Account key={accountId} accountId={accountId} added />)}\n          </div>\n\n          {showSearch && <div role='button' tabIndex={-1} className='drawer__backdrop' onClick={onClear} />}\n\n          <Motion defaultStyle={{ x: -100 }} style={{ x: spring(showSearch ? 0 : -100, { stiffness: 210, damping: 20 }) }}>\n            {({ x }) => (\n              <div className='drawer__inner backdrop' style={{ transform: x === 0 ? null : `translateX(${x}%)`, visibility: x === -100 ? 'hidden' : 'visible' }}>\n                {searchAccountIds.map(accountId => <Account key={accountId} accountId={accountId} />)}\n              </div>\n            )}\n          </Motion>\n        </div>\n      </div>\n    );\n  }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(injectIntl(ListEditor));\n"],"sourceRoot":""}