{"version":3,"sources":["webpack:///./node_modules/@material-symbols/svg-600/outlined/done_all.svg","webpack:///./app/javascript/mastodon/features/notifications/components/notifications_permission_banner.jsx","webpack:///./node_modules/@material-symbols/svg-600/outlined/delete_forever.svg","webpack:///./app/javascript/mastodon/features/notifications/components/clear_column_button.jsx","webpack:///./app/javascript/mastodon/features/notifications/components/grant_permission_button.jsx","webpack:///./app/javascript/mastodon/features/notifications/components/column_settings.jsx","webpack:///./app/javascript/mastodon/features/notifications/containers/column_settings_container.js","webpack:///./app/javascript/mastodon/features/notifications/components/filter_bar.jsx","webpack:///./app/javascript/mastodon/features/notifications/containers/filter_bar_container.js","webpack:///./node_modules/@material-symbols/svg-600/outlined/flag-fill.svg","webpack:///./node_modules/@material-symbols/svg-600/outlined/person-fill.svg","webpack:///./node_modules/@material-symbols/svg-600/outlined/person_add-fill.svg","webpack:///./app/javascript/mastodon/features/notifications/components/follow_request.jsx","webpack:///./app/javascript/mastodon/features/notifications/containers/follow_request_container.js","webpack:///./app/javascript/mastodon/features/notifications/components/report.jsx","webpack:///./app/javascript/mastodon/features/notifications/components/notification.jsx","webpack:///./app/javascript/mastodon/features/notifications/containers/notification_container.js","webpack:///./app/javascript/mastodon/features/notifications/index.jsx"],"names":["_path","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","SvgDoneAll","_ref","title","titleId","props","xmlns","width","height","viewBox","id","d","messages","defineMessages","close","defaultMessage","NotificationsPermissionBanner","PureComponent","constructor","handleClick","dispatch","requestBrowserPermission","handleClose","changeSetting","render","intl","_jsx","className","IconButton","icon","iconComponent","CloseIcon","onClick","formatMessage","FormattedMessage","values","Icon","TuneIcon","Button","connect","injectIntl","SvgDeleteForever","ClearColumnButton","tabIndex","DeleteForeverIcon","GrantPermissionButton","ColumnSettings","onPushChange","path","checked","onChange","settings","pushSettings","onClear","alertsEnabled","browserSupport","browserPermission","onRequestNotificationPermission","unreadMarkersShowStr","filterBarShowStr","filterAdvancedStr","alertStr","showStr","soundStr","showPushSettings","get","pushStr","role","SettingToggle","prefix","settingPath","label","disabled","context","identity","permissions","PERMISSION_MANAGE_USERS","PERMISSION_MANAGE_REPORTS","contextTypes","PropTypes","object","clearMessage","clearConfirm","permissionDenied","state","getIn","includes","mapDispatchToProps","window","Notification","permission","changePushNotifications","slice","showAlert","message","setFilter","openModal","modalType","modalProps","confirm","onConfirm","clearNotifications","tooltips","mentions","favourites","boosts","polls","follows","statuses","FilterBar","notificationType","selectFilter","selectedFilter","advancedMode","ReplyAllIcon","StarIcon","RepeatIcon","InsertChartIcon","HomeIcon","PersonAddIcon","newActiveFilter","SvgFlagFill","SvgPersonFill","SvgPersonAddFill","authorize","reject","FollowRequest","ImmutablePureComponent","hidden","account","onAuthorize","onReject","_jsxs","_Fragment","children","Link","to","Avatar","size","DisplayName","CheckIcon","propTypes","ImmutablePropTypes","map","isRequired","func","makeMapStateToProps","getAccount","makeGetAccount","mapStateToProps","authorizeFollowRequest","rejectFollowRequest","openReport","other","spam","legal","violation","Report","report","_jsx2","AvatarOverlay","friend","RelativeTimestamp","timestamp","short","count","href","rel","bool","favourite","follow","ownPoll","poll","reblog","status","update","adminSignUp","adminReport","notificationForScreenReader","output","push","formatDate","hour","minute","month","day","join","handleMoveUp","notification","onMoveUp","handleMoveDown","onMoveDown","handleOpen","history","handleOpenProfile","handleMention","e","preventDefault","onMention","handleHotkeyFavourite","onFavourite","handleHotkeyBoost","onReblog","handleHotkeyToggleHidden","onToggleHidden","getHandlers","reply","boost","mention","open","openProfile","moveUp","moveDown","toggleHidden","renderFollow","link","unread","HotKeys","handlers","classNames","name","AccountContainer","renderFollowRequest","PersonIcon","FollowRequestContainer","withNote","renderMention","StatusContainer","withDismiss","contextType","getScrollPosition","updateScrollBottom","cachedMediaWidth","cacheMediaWidth","renderFavourite","muted","renderReblog","renderStatus","renderUpdate","EditIcon","renderPoll","me","renderAdminSignUp","renderAdminReport","targetAccount","targetDisplayNameHtml","__html","targetLink","dangerouslySetInnerHTML","FlagIcon","displayNameHtml","number","WithRouterPropTypes","withRouter","getNotification","makeGetNotification","getStatus","makeGetStatus","getReport","makeGetReport","accountId","router","mentionCompose","onModalReblog","privacy","unreblog","shiftKey","boostModal","initBoostModal","unfavourite","revealStatus","hideStatus","markAsRead","getExcludedTypes","createSelector","shows","ImmutableList","filter","item","keys","getNotifications","showFilterBar","allowedType","excludedTypes","notifications","filterNot","Notifications","handleLoadGap","maxId","expandNotifications","handleLoadOlder","_debounce","last","leading","handleLoadPending","loadPending","handleScrollToTop","scrollTopNotifications","handleScroll","handlePin","columnId","removeColumn","addColumn","handleMove","dir","moveColumn","handleHeaderClick","column","scrollTop","setColumnRef","c","elementIndex","findIndex","_selectChild","handleMarkAsRead","markNotificationsAsRead","submitMarkers","immediate","UNSAFE_componentWillMount","mountNotifications","componentWillUnmount","cancel","unmountNotifications","index","align_top","container","node","element","querySelector","offsetTop","scrollIntoView","clientHeight","offsetHeight","focus","isLoading","isUnread","multiColumn","hasMore","numPending","lastReadId","canMarkAsRead","needsNotificationPermission","pinned","emptyMessage","signedIn","scrollableContent","filterBarContainer","FilterBarContainer","scrollContainer","LoadGap","NotificationContainer","compareId","ScrollableList","scrollKey","trackScroll","showLoading","prepend","alwaysPrepend","onLoadMore","onLoadPending","onScrollToTop","onScroll","bindToDocument","NotSignedInIndicator","extraButton","DoneAllIcon","Column","ref","ColumnHeader","NotificationsIcon","active","onPin","onMove","ColumnSettingsContainer","Helmet","content","defaultProps","some"],"mappings":"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","file":"js/features/notifications-e822edc462d6582d2474.chunk.js","sourcesContent":["var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgDoneAll(_ref) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 48,\n    height: 48,\n    viewBox: \"0 -960 960 960\",\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M294.565-214.868 56.999-452.434 113-509l181 181 56.566 56.566-56.001 56.566ZM464-228.434 225.869-467.13 283-523.131l181 181 383.435-382.87L904.566-669 464-228.434Zm0-184.131-56.001-56.566 257-257L721-669.565l-257 257Z\"\n  })));\n}\nexport default __webpack_public_path__ + \"media/outlined/done_all-140bd82c.svg\";\nexport { SvgDoneAll as ReactComponent };","import PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport { defineMessages, injectIntl, FormattedMessage } from 'react-intl';\n\nimport { connect } from 'react-redux';\n\nimport { ReactComponent as CloseIcon } from '@material-symbols/svg-600/outlined/close.svg';\nimport { ReactComponent as TuneIcon } from '@material-symbols/svg-600/outlined/tune.svg';\n\nimport { requestBrowserPermission } from 'mastodon/actions/notifications';\nimport { changeSetting } from 'mastodon/actions/settings';\nimport { Button } from 'mastodon/components/button';\nimport { Icon }  from 'mastodon/components/icon';\nimport { IconButton } from 'mastodon/components/icon_button';\n\nconst messages = defineMessages({\n  close: { id: 'lightbox.close', defaultMessage: 'Close' },\n});\n\nclass NotificationsPermissionBanner extends PureComponent {\n\n  static propTypes = {\n    dispatch: PropTypes.func.isRequired,\n    intl: PropTypes.object.isRequired,\n  };\n\n  handleClick = () => {\n    this.props.dispatch(requestBrowserPermission());\n  };\n\n  handleClose = () => {\n    this.props.dispatch(changeSetting(['notifications', 'dismissPermissionBanner'], true));\n  };\n\n  render () {\n    const { intl } = this.props;\n\n    return (\n      <div className='notifications-permission-banner'>\n        <div className='notifications-permission-banner__close'>\n          <IconButton icon='times' iconComponent={CloseIcon} onClick={this.handleClose} title={intl.formatMessage(messages.close)} />\n        </div>\n\n        <h2><FormattedMessage id='notifications_permission_banner.title' defaultMessage='Never miss a thing' /></h2>\n        <p><FormattedMessage id='notifications_permission_banner.how_to_control' defaultMessage=\"To receive notifications when Mastodon isn't open, enable desktop notifications. You can control precisely which types of interactions generate desktop notifications through the {icon} button above once they're enabled.\" values={{ icon: <Icon id='sliders' icon={TuneIcon} /> }} /></p>\n        <Button onClick={this.handleClick}><FormattedMessage id='notifications_permission_banner.enable' defaultMessage='Enable desktop notifications' /></Button>\n      </div>\n    );\n  }\n\n}\n\nexport default connect()(injectIntl(NotificationsPermissionBanner));\n","var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgDeleteForever(_ref) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 48,\n    height: 48,\n    viewBox: \"0 -960 960 960\",\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M362.13-293.348 480-412.652l118.87 119.304 54.348-54.782L535.348-468l117.87-119.87-54.348-55.348L480-523.348l-117.87-119.87-54.782 55.348L425.652-468 307.348-348.13l54.782 54.782ZM256.478-105.869q-32.74 0-56.262-23.356-23.522-23.355-23.522-55.862v-560.391h-50.609v-79.218h212.306v-40.175h282.653v40.175h212.871v79.218h-50.609v560.391q0 32.507-23.522 55.862-23.522 23.356-56.262 23.356H256.478Zm447.044-639.609H256.478v560.391h447.044v-560.391Zm-447.044 0v560.391-560.391Z\"\n  })));\n}\nexport default __webpack_public_path__ + \"media/outlined/delete_forever-21d29c3a.svg\";\nexport { SvgDeleteForever as ReactComponent };","import PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport { FormattedMessage } from 'react-intl';\n\nimport { ReactComponent as DeleteForeverIcon } from '@material-symbols/svg-600/outlined/delete_forever.svg';\n\nimport { Icon }  from 'mastodon/components/icon';\n\nexport default class ClearColumnButton extends PureComponent {\n\n  static propTypes = {\n    onClick: PropTypes.func.isRequired,\n  };\n\n  render () {\n    return (\n      <button className='text-btn column-header__setting-btn' tabIndex={0} onClick={this.props.onClick}><Icon id='eraser' icon={DeleteForeverIcon} /> <FormattedMessage id='notifications.clear' defaultMessage='Clear notifications' /></button>\n    );\n  }\n\n}\n","import PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport { FormattedMessage } from 'react-intl';\n\nexport default class GrantPermissionButton extends PureComponent {\n\n  static propTypes = {\n    onClick: PropTypes.func.isRequired,\n  };\n\n  render () {\n    return (\n      <button className='text-btn column-header__permission-btn' tabIndex={0} onClick={this.props.onClick}>\n        <FormattedMessage id='notifications.grant_permission' defaultMessage='Grant permission.' />\n      </button>\n    );\n  }\n\n}\n","import PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport { FormattedMessage } from 'react-intl';\n\nimport ImmutablePropTypes from 'react-immutable-proptypes';\n\nimport { PERMISSION_MANAGE_USERS, PERMISSION_MANAGE_REPORTS } from 'mastodon/permissions';\n\nimport ClearColumnButton from './clear_column_button';\nimport GrantPermissionButton from './grant_permission_button';\nimport SettingToggle from './setting_toggle';\n\nexport default class ColumnSettings extends PureComponent {\n\n  static contextTypes = {\n    identity: PropTypes.object,\n  };\n\n  static propTypes = {\n    settings: ImmutablePropTypes.map.isRequired,\n    pushSettings: ImmutablePropTypes.map.isRequired,\n    onChange: PropTypes.func.isRequired,\n    onClear: PropTypes.func.isRequired,\n    onRequestNotificationPermission: PropTypes.func,\n    alertsEnabled: PropTypes.bool,\n    browserSupport: PropTypes.bool,\n    browserPermission: PropTypes.string,\n  };\n\n  onPushChange = (path, checked) => {\n    this.props.onChange(['push', ...path], checked);\n  };\n\n  render () {\n    const { settings, pushSettings, onChange, onClear, alertsEnabled, browserSupport, browserPermission, onRequestNotificationPermission } = this.props;\n\n    const unreadMarkersShowStr = <FormattedMessage id='notifications.column_settings.unread_notifications.highlight' defaultMessage='Highlight unread notifications' />;\n    const filterBarShowStr = <FormattedMessage id='notifications.column_settings.filter_bar.show_bar' defaultMessage='Show filter bar' />;\n    const filterAdvancedStr = <FormattedMessage id='notifications.column_settings.filter_bar.advanced' defaultMessage='Display all categories' />;\n    const alertStr = <FormattedMessage id='notifications.column_settings.alert' defaultMessage='Desktop notifications' />;\n    const showStr = <FormattedMessage id='notifications.column_settings.show' defaultMessage='Show in column' />;\n    const soundStr = <FormattedMessage id='notifications.column_settings.sound' defaultMessage='Play sound' />;\n\n    const showPushSettings = pushSettings.get('browserSupport') && pushSettings.get('isSubscribed');\n    const pushStr = showPushSettings && <FormattedMessage id='notifications.column_settings.push' defaultMessage='Push notifications' />;\n\n    return (\n      <div>\n        {alertsEnabled && browserSupport && browserPermission === 'denied' && (\n          <div className='column-settings__row column-settings__row--with-margin'>\n            <span className='warning-hint'><FormattedMessage id='notifications.permission_denied' defaultMessage='Desktop notifications are unavailable due to previously denied browser permissions request' /></span>\n          </div>\n        )}\n\n        {alertsEnabled && browserSupport && browserPermission === 'default' && (\n          <div className='column-settings__row column-settings__row--with-margin'>\n            <span className='warning-hint'>\n              <FormattedMessage id='notifications.permission_required' defaultMessage='Desktop notifications are unavailable because the required permission has not been granted.' /> <GrantPermissionButton onClick={onRequestNotificationPermission} />\n            </span>\n          </div>\n        )}\n\n        <div className='column-settings__row'>\n          <ClearColumnButton onClick={onClear} />\n        </div>\n\n        <div role='group' aria-labelledby='notifications-unread-markers'>\n          <span id='notifications-unread-markers' className='column-settings__section'>\n            <FormattedMessage id='notifications.column_settings.unread_notifications.category' defaultMessage='Unread notifications' />\n          </span>\n\n          <div className='column-settings__row'>\n            <SettingToggle id='unread-notification-markers' prefix='notifications' settings={settings} settingPath={['showUnread']} onChange={onChange} label={unreadMarkersShowStr} />\n          </div>\n        </div>\n\n        <div role='group' aria-labelledby='notifications-filter-bar'>\n          <span id='notifications-filter-bar' className='column-settings__section'>\n            <FormattedMessage id='notifications.column_settings.filter_bar.category' defaultMessage='Quick filter bar' />\n          </span>\n\n          <div className='column-settings__row'>\n            <SettingToggle id='show-filter-bar' prefix='notifications' settings={settings} settingPath={['quickFilter', 'show']} onChange={onChange} label={filterBarShowStr} />\n            <SettingToggle id='show-filter-bar' prefix='notifications' settings={settings} settingPath={['quickFilter', 'advanced']} onChange={onChange} label={filterAdvancedStr} />\n          </div>\n        </div>\n\n        <div role='group' aria-labelledby='notifications-follow'>\n          <span id='notifications-follow' className='column-settings__section'><FormattedMessage id='notifications.column_settings.follow' defaultMessage='New followers:' /></span>\n\n          <div className='column-settings__row'>\n            <SettingToggle disabled={browserPermission === 'denied'} prefix='notifications_desktop' settings={settings} settingPath={['alerts', 'follow']} onChange={onChange} label={alertStr} />\n            {showPushSettings && <SettingToggle prefix='notifications_push' settings={pushSettings} settingPath={['alerts', 'follow']} onChange={this.onPushChange} label={pushStr} />}\n            <SettingToggle prefix='notifications' settings={settings} settingPath={['shows', 'follow']} onChange={onChange} label={showStr} />\n            <SettingToggle prefix='notifications' settings={settings} settingPath={['sounds', 'follow']} onChange={onChange} label={soundStr} />\n          </div>\n        </div>\n\n        <div role='group' aria-labelledby='notifications-follow-request'>\n          <span id='notifications-follow-request' className='column-settings__section'><FormattedMessage id='notifications.column_settings.follow_request' defaultMessage='New follow requests:' /></span>\n\n          <div className='column-settings__row'>\n            <SettingToggle disabled={browserPermission === 'denied'} prefix='notifications_desktop' settings={settings} settingPath={['alerts', 'follow_request']} onChange={onChange} label={alertStr} />\n            {showPushSettings && <SettingToggle prefix='notifications_push' settings={pushSettings} settingPath={['alerts', 'follow_request']} onChange={this.onPushChange} label={pushStr} />}\n            <SettingToggle prefix='notifications' settings={settings} settingPath={['shows', 'follow_request']} onChange={onChange} label={showStr} />\n            <SettingToggle prefix='notifications' settings={settings} settingPath={['sounds', 'follow_request']} onChange={onChange} label={soundStr} />\n          </div>\n        </div>\n\n        <div role='group' aria-labelledby='notifications-favourite'>\n          <span id='notifications-favourite' className='column-settings__section'><FormattedMessage id='notifications.column_settings.favourite' defaultMessage='Favorites:' /></span>\n\n          <div className='column-settings__row'>\n            <SettingToggle disabled={browserPermission === 'denied'} prefix='notifications_desktop' settings={settings} settingPath={['alerts', 'favourite']} onChange={onChange} label={alertStr} />\n            {showPushSettings && <SettingToggle prefix='notifications_push' settings={pushSettings} settingPath={['alerts', 'favourite']} onChange={this.onPushChange} label={pushStr} />}\n            <SettingToggle prefix='notifications' settings={settings} settingPath={['shows', 'favourite']} onChange={onChange} label={showStr} />\n            <SettingToggle prefix='notifications' settings={settings} settingPath={['sounds', 'favourite']} onChange={onChange} label={soundStr} />\n          </div>\n        </div>\n\n        <div role='group' aria-labelledby='notifications-mention'>\n          <span id='notifications-mention' className='column-settings__section'><FormattedMessage id='notifications.column_settings.mention' defaultMessage='Mentions:' /></span>\n\n          <div className='column-settings__row'>\n            <SettingToggle disabled={browserPermission === 'denied'} prefix='notifications_desktop' settings={settings} settingPath={['alerts', 'mention']} onChange={onChange} label={alertStr} />\n            {showPushSettings && <SettingToggle prefix='notifications_push' settings={pushSettings} settingPath={['alerts', 'mention']} onChange={this.onPushChange} label={pushStr} />}\n            <SettingToggle prefix='notifications' settings={settings} settingPath={['shows', 'mention']} onChange={onChange} label={showStr} />\n            <SettingToggle prefix='notifications' settings={settings} settingPath={['sounds', 'mention']} onChange={onChange} label={soundStr} />\n          </div>\n        </div>\n\n        <div role='group' aria-labelledby='notifications-reblog'>\n          <span id='notifications-reblog' className='column-settings__section'><FormattedMessage id='notifications.column_settings.reblog' defaultMessage='Boosts:' /></span>\n\n          <div className='column-settings__row'>\n            <SettingToggle disabled={browserPermission === 'denied'} prefix='notifications_desktop' settings={settings} settingPath={['alerts', 'reblog']} onChange={onChange} label={alertStr} />\n            {showPushSettings && <SettingToggle prefix='notifications_push' settings={pushSettings} settingPath={['alerts', 'reblog']} onChange={this.onPushChange} label={pushStr} />}\n            <SettingToggle prefix='notifications' settings={settings} settingPath={['shows', 'reblog']} onChange={onChange} label={showStr} />\n            <SettingToggle prefix='notifications' settings={settings} settingPath={['sounds', 'reblog']} onChange={onChange} label={soundStr} />\n          </div>\n        </div>\n\n        <div role='group' aria-labelledby='notifications-poll'>\n          <span id='notifications-poll' className='column-settings__section'><FormattedMessage id='notifications.column_settings.poll' defaultMessage='Poll results:' /></span>\n\n          <div className='column-settings__row'>\n            <SettingToggle disabled={browserPermission === 'denied'} prefix='notifications_desktop' settings={settings} settingPath={['alerts', 'poll']} onChange={onChange} label={alertStr} />\n            {showPushSettings && <SettingToggle prefix='notifications_push' settings={pushSettings} settingPath={['alerts', 'poll']} onChange={this.onPushChange} label={pushStr} />}\n            <SettingToggle prefix='notifications' settings={settings} settingPath={['shows', 'poll']} onChange={onChange} label={showStr} />\n            <SettingToggle prefix='notifications' settings={settings} settingPath={['sounds', 'poll']} onChange={onChange} label={soundStr} />\n          </div>\n        </div>\n\n        <div role='group' aria-labelledby='notifications-status'>\n          <span id='notifications-status' className='column-settings__section'><FormattedMessage id='notifications.column_settings.status' defaultMessage='New posts:' /></span>\n\n          <div className='column-settings__row'>\n            <SettingToggle disabled={browserPermission === 'denied'} prefix='notifications_desktop' settings={settings} settingPath={['alerts', 'status']} onChange={onChange} label={alertStr} />\n            {showPushSettings && <SettingToggle prefix='notifications_push' settings={pushSettings} settingPath={['alerts', 'status']} onChange={this.onPushChange} label={pushStr} />}\n            <SettingToggle prefix='notifications' settings={settings} settingPath={['shows', 'status']} onChange={onChange} label={showStr} />\n            <SettingToggle prefix='notifications' settings={settings} settingPath={['sounds', 'status']} onChange={onChange} label={soundStr} />\n          </div>\n        </div>\n\n        <div role='group' aria-labelledby='notifications-update'>\n          <span id='notifications-update' className='column-settings__section'><FormattedMessage id='notifications.column_settings.update' defaultMessage='Edits:' /></span>\n\n          <div className='column-settings__row'>\n            <SettingToggle disabled={browserPermission === 'denied'} prefix='notifications_desktop' settings={settings} settingPath={['alerts', 'update']} onChange={onChange} label={alertStr} />\n            {showPushSettings && <SettingToggle prefix='notifications_push' settings={pushSettings} settingPath={['alerts', 'update']} onChange={this.onPushChange} label={pushStr} />}\n            <SettingToggle prefix='notifications' settings={settings} settingPath={['shows', 'update']} onChange={onChange} label={showStr} />\n            <SettingToggle prefix='notifications' settings={settings} settingPath={['sounds', 'update']} onChange={onChange} label={soundStr} />\n          </div>\n        </div>\n\n        {((this.context.identity.permissions & PERMISSION_MANAGE_USERS) === PERMISSION_MANAGE_USERS) && (\n          <div role='group' aria-labelledby='notifications-admin-sign-up'>\n            <span id='notifications-status' className='column-settings__section'><FormattedMessage id='notifications.column_settings.admin.sign_up' defaultMessage='New sign-ups:' /></span>\n\n            <div className='column-settings__row'>\n              <SettingToggle disabled={browserPermission === 'denied'} prefix='notifications_desktop' settings={settings} settingPath={['alerts', 'admin.sign_up']} onChange={onChange} label={alertStr} />\n              {showPushSettings && <SettingToggle prefix='notifications_push' settings={pushSettings} settingPath={['alerts', 'admin.sign_up']} onChange={this.onPushChange} label={pushStr} />}\n              <SettingToggle prefix='notifications' settings={settings} settingPath={['shows', 'admin.sign_up']} onChange={onChange} label={showStr} />\n              <SettingToggle prefix='notifications' settings={settings} settingPath={['sounds', 'admin.sign_up']} onChange={onChange} label={soundStr} />\n            </div>\n          </div>\n        )}\n\n        {((this.context.identity.permissions & PERMISSION_MANAGE_REPORTS) === PERMISSION_MANAGE_REPORTS) && (\n          <div role='group' aria-labelledby='notifications-admin-report'>\n            <span id='notifications-status' className='column-settings__section'><FormattedMessage id='notifications.column_settings.admin.report' defaultMessage='New reports:' /></span>\n\n            <div className='column-settings__row'>\n              <SettingToggle disabled={browserPermission === 'denied'} prefix='notifications_desktop' settings={settings} settingPath={['alerts', 'admin.report']} onChange={onChange} label={alertStr} />\n              {showPushSettings && <SettingToggle prefix='notifications_push' settings={pushSettings} settingPath={['alerts', 'admin.report']} onChange={this.onPushChange} label={pushStr} />}\n              <SettingToggle prefix='notifications' settings={settings} settingPath={['shows', 'admin.report']} onChange={onChange} label={showStr} />\n              <SettingToggle prefix='notifications' settings={settings} settingPath={['sounds', 'admin.report']} onChange={onChange} label={soundStr} />\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n}\n","import { defineMessages, injectIntl } from 'react-intl';\n\nimport { connect } from 'react-redux';\n\nimport { showAlert } from '../../../actions/alerts';\nimport { openModal } from '../../../actions/modal';\nimport { setFilter, clearNotifications, requestBrowserPermission } from '../../../actions/notifications';\nimport { changeAlerts as changePushNotifications } from '../../../actions/push_notifications';\nimport { changeSetting } from '../../../actions/settings';\nimport ColumnSettings from '../components/column_settings';\n\nconst messages = defineMessages({\n  clearMessage: { id: 'notifications.clear_confirmation', defaultMessage: 'Are you sure you want to permanently clear all your notifications?' },\n  clearConfirm: { id: 'notifications.clear', defaultMessage: 'Clear notifications' },\n  permissionDenied: { id: 'notifications.permission_denied_alert', defaultMessage: 'Desktop notifications can\\'t be enabled, as browser permission has been denied before' },\n});\n\nconst mapStateToProps = state => ({\n  settings: state.getIn(['settings', 'notifications']),\n  pushSettings: state.get('push_notifications'),\n  alertsEnabled: state.getIn(['settings', 'notifications', 'alerts']).includes(true),\n  browserSupport: state.getIn(['notifications', 'browserSupport']),\n  browserPermission: state.getIn(['notifications', 'browserPermission']),\n});\n\nconst mapDispatchToProps = (dispatch, { intl }) => ({\n\n  onChange (path, checked) {\n    if (path[0] === 'push') {\n      if (checked && typeof window.Notification !== 'undefined' && Notification.permission !== 'granted') {\n        dispatch(requestBrowserPermission((permission) => {\n          if (permission === 'granted') {\n            dispatch(changePushNotifications(path.slice(1), checked));\n          } else {\n            dispatch(showAlert({ message: messages.permissionDenied }));\n          }\n        }));\n      } else {\n        dispatch(changePushNotifications(path.slice(1), checked));\n      }\n    } else if (path[0] === 'quickFilter') {\n      dispatch(changeSetting(['notifications', ...path], checked));\n      dispatch(setFilter('all'));\n    } else if (path[0] === 'alerts' && checked && typeof window.Notification !== 'undefined' && Notification.permission !== 'granted') {\n      if (checked && typeof window.Notification !== 'undefined' && Notification.permission !== 'granted') {\n        dispatch(requestBrowserPermission((permission) => {\n          if (permission === 'granted') {\n            dispatch(changeSetting(['notifications', ...path], checked));\n          } else {\n            dispatch(showAlert({ message: messages.permissionDenied }));\n          }\n        }));\n      } else {\n        dispatch(changeSetting(['notifications', ...path], checked));\n      }\n    } else {\n      dispatch(changeSetting(['notifications', ...path], checked));\n    }\n  },\n\n  onClear () {\n    dispatch(openModal({\n      modalType: 'CONFIRM',\n      modalProps: {\n        message: intl.formatMessage(messages.clearMessage),\n        confirm: intl.formatMessage(messages.clearConfirm),\n        onConfirm: () => dispatch(clearNotifications()),\n      },\n    }));\n  },\n\n  onRequestNotificationPermission () {\n    dispatch(requestBrowserPermission());\n  },\n\n});\n\nexport default injectIntl(connect(mapStateToProps, mapDispatchToProps)(ColumnSettings));\n","import PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport { defineMessages, injectIntl, FormattedMessage } from 'react-intl';\n\nimport { ReactComponent as HomeIcon } from '@material-symbols/svg-600/outlined/home-fill.svg';\nimport { ReactComponent as InsertChartIcon } from '@material-symbols/svg-600/outlined/insert_chart.svg';\nimport { ReactComponent as PersonAddIcon } from '@material-symbols/svg-600/outlined/person_add.svg';\nimport { ReactComponent as RepeatIcon } from '@material-symbols/svg-600/outlined/repeat.svg';\nimport { ReactComponent as ReplyAllIcon } from '@material-symbols/svg-600/outlined/reply_all.svg';\nimport { ReactComponent as StarIcon } from '@material-symbols/svg-600/outlined/star.svg';\n\nimport { Icon }  from 'mastodon/components/icon';\n\nconst tooltips = defineMessages({\n  mentions: { id: 'notifications.filter.mentions', defaultMessage: 'Mentions' },\n  favourites: { id: 'notifications.filter.favourites', defaultMessage: 'Favorites' },\n  boosts: { id: 'notifications.filter.boosts', defaultMessage: 'Boosts' },\n  polls: { id: 'notifications.filter.polls', defaultMessage: 'Poll results' },\n  follows: { id: 'notifications.filter.follows', defaultMessage: 'Follows' },\n  statuses: { id: 'notifications.filter.statuses', defaultMessage: 'Updates from people you follow' },\n});\n\nclass FilterBar extends PureComponent {\n\n  static propTypes = {\n    selectFilter: PropTypes.func.isRequired,\n    selectedFilter: PropTypes.string.isRequired,\n    advancedMode: PropTypes.bool.isRequired,\n    intl: PropTypes.object.isRequired,\n  };\n\n  onClick (notificationType) {\n    return () => this.props.selectFilter(notificationType);\n  }\n\n  render () {\n    const { selectedFilter, advancedMode, intl } = this.props;\n    const renderedElement = !advancedMode ? (\n      <div className='notification__filter-bar'>\n        <button\n          className={selectedFilter === 'all' ? 'active' : ''}\n          onClick={this.onClick('all')}\n        >\n          <FormattedMessage\n            id='notifications.filter.all'\n            defaultMessage='All'\n          />\n        </button>\n        <button\n          className={selectedFilter === 'mention' ? 'active' : ''}\n          onClick={this.onClick('mention')}\n        >\n          <FormattedMessage\n            id='notifications.filter.mentions'\n            defaultMessage='Mentions'\n          />\n        </button>\n      </div>\n    ) : (\n      <div className='notification__filter-bar'>\n        <button\n          className={selectedFilter === 'all' ? 'active' : ''}\n          onClick={this.onClick('all')}\n        >\n          <FormattedMessage\n            id='notifications.filter.all'\n            defaultMessage='All'\n          />\n        </button>\n        <button\n          className={selectedFilter === 'mention' ? 'active' : ''}\n          onClick={this.onClick('mention')}\n          title={intl.formatMessage(tooltips.mentions)}\n        >\n          <Icon id='reply-all' icon={ReplyAllIcon} />\n        </button>\n        <button\n          className={selectedFilter === 'favourite' ? 'active' : ''}\n          onClick={this.onClick('favourite')}\n          title={intl.formatMessage(tooltips.favourites)}\n        >\n          <Icon id='star' icon={StarIcon} />\n        </button>\n        <button\n          className={selectedFilter === 'reblog' ? 'active' : ''}\n          onClick={this.onClick('reblog')}\n          title={intl.formatMessage(tooltips.boosts)}\n        >\n          <Icon id='retweet' icon={RepeatIcon} />\n        </button>\n        <button\n          className={selectedFilter === 'poll' ? 'active' : ''}\n          onClick={this.onClick('poll')}\n          title={intl.formatMessage(tooltips.polls)}\n        >\n          <Icon id='tasks' icon={InsertChartIcon} />\n        </button>\n        <button\n          className={selectedFilter === 'status' ? 'active' : ''}\n          onClick={this.onClick('status')}\n          title={intl.formatMessage(tooltips.statuses)}\n        >\n          <Icon id='home' icon={HomeIcon} />\n        </button>\n        <button\n          className={selectedFilter === 'follow' ? 'active' : ''}\n          onClick={this.onClick('follow')}\n          title={intl.formatMessage(tooltips.follows)}\n        >\n          <Icon id='user-plus' icon={PersonAddIcon} />\n        </button>\n      </div>\n    );\n    return renderedElement;\n  }\n\n}\n\nexport default injectIntl(FilterBar);\n","import { connect } from 'react-redux';\n\nimport { setFilter } from '../../../actions/notifications';\nimport FilterBar from '../components/filter_bar';\n\nconst makeMapStateToProps = state => ({\n  selectedFilter: state.getIn(['settings', 'notifications', 'quickFilter', 'active']),\n  advancedMode: state.getIn(['settings', 'notifications', 'quickFilter', 'advanced']),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  selectFilter (newActiveFilter) {\n    dispatch(setFilter(newActiveFilter));\n  },\n});\n\nexport default connect(makeMapStateToProps, mapDispatchToProps)(FilterBar);\n","var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgFlagFill(_ref) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 48,\n    height: 48,\n    viewBox: \"0 -960 960 960\",\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M185.869-105.869v-708.827H554.87l19.189 86h240.637v398.827H532.13l-19-85H265.087v309h-79.218Z\"\n  })));\n}\nexport default __webpack_public_path__ + \"media/outlined/flag-fill-ea35a6f2.svg\";\nexport { SvgFlagFill as ReactComponent };","var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgPersonFill(_ref) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 48,\n    height: 48,\n    viewBox: \"0 -960 960 960\",\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M479.885-488.348q-72.333 0-118.174-45.842-45.842-45.842-45.842-118.174 0-72.333 45.842-118.29 45.841-45.957 118.174-45.957t118.572 45.957q46.239 45.957 46.239 118.29 0 72.332-46.239 118.174-46.239 45.842-118.572 45.842ZM145.869-138.521v-109.145q0-41.678 21.164-72.191 21.164-30.512 54.749-46.361 68.131-30.565 131.303-45.848 63.173-15.282 126.763-15.282 64.674 0 127.239 15.782 62.565 15.783 130.131 45.348 34.736 15.107 56.107 45.793 21.371 30.686 21.371 72.612v109.292H145.869Z\"\n  })));\n}\nexport default __webpack_public_path__ + \"media/outlined/person-fill-27d3fad5.svg\";\nexport { SvgPersonFill as ReactComponent };","var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgPersonAddFill(_ref) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 48,\n    height: 48,\n    viewBox: \"0 -960 960 960\",\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M737.913-418.088v-126.608H611.305v-66.783h126.608v-126.609h66.783v126.609h126.609v66.783H804.696v126.608h-66.783Zm-376.898-70.26q-72.332 0-118.174-45.842-45.842-45.842-45.842-118.174 0-72.333 45.842-118.29 45.842-45.957 118.174-45.957 72.333 0 118.573 45.957 46.239 45.957 46.239 118.29 0 72.332-46.239 118.174-46.24 45.842-118.573 45.842ZM26.999-138.521v-109.261q0-39.128 19.872-70.622 19.871-31.494 56.042-47.814 76.13-33.565 136.02-47.348 59.89-13.782 121.915-13.782 63.109 0 122.804 13.782 59.696 13.783 135.261 47.348 36.171 16.672 56.543 47.654 20.371 30.981 20.371 70.653v109.39H26.999Z\"\n  })));\n}\nexport default __webpack_public_path__ + \"media/outlined/person_add-fill-cabbf3e3.svg\";\nexport { SvgPersonAddFill as ReactComponent };","import PropTypes from 'prop-types';\n\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport { Link } from 'react-router-dom';\n\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\n\nimport { ReactComponent as CheckIcon } from '@material-symbols/svg-600/outlined/check.svg';\nimport { ReactComponent as CloseIcon } from '@material-symbols/svg-600/outlined/close.svg';\n\nimport { Avatar } from 'mastodon/components/avatar';\nimport { DisplayName } from 'mastodon/components/display_name';\nimport { IconButton } from 'mastodon/components/icon_button';\n\nconst messages = defineMessages({\n  authorize: { id: 'follow_request.authorize', defaultMessage: 'Authorize' },\n  reject: { id: 'follow_request.reject', defaultMessage: 'Reject' },\n});\n\nclass FollowRequest extends ImmutablePureComponent {\n\n  static propTypes = {\n    account: ImmutablePropTypes.map.isRequired,\n    onAuthorize: PropTypes.func.isRequired,\n    onReject: PropTypes.func.isRequired,\n    intl: PropTypes.object.isRequired,\n  };\n\n  render () {\n    const { intl, hidden, account, onAuthorize, onReject } = this.props;\n\n    if (!account) {\n      return <div />;\n    }\n\n    if (hidden) {\n      return (\n        <>\n          {account.get('display_name')}\n          {account.get('username')}\n        </>\n      );\n    }\n\n    return (\n      <div className='account'>\n        <div className='account__wrapper'>\n          <Link key={account.get('id')} className='account__display-name' title={account.get('acct')} to={`/@${account.get('acct')}`}>\n            <div className='account__avatar-wrapper'><Avatar account={account} size={36} /></div>\n            <DisplayName account={account} />\n          </Link>\n\n          <div className='account__relationship'>\n            <IconButton title={intl.formatMessage(messages.authorize)} icon='check' iconComponent={CheckIcon} onClick={onAuthorize} />\n            <IconButton title={intl.formatMessage(messages.reject)} icon='times' iconComponent={CloseIcon} onClick={onReject} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n}\n\nexport default injectIntl(FollowRequest);\n","import { connect } from 'react-redux';\n\nimport { authorizeFollowRequest, rejectFollowRequest } from 'mastodon/actions/accounts';\nimport { makeGetAccount } from 'mastodon/selectors';\n\nimport FollowRequest from '../components/follow_request';\n\nconst makeMapStateToProps = () => {\n  const getAccount = makeGetAccount();\n\n  const mapStateToProps = (state, props) => ({\n    account: getAccount(state, props.id),\n  });\n\n  return mapStateToProps;\n};\n\nconst mapDispatchToProps = (dispatch, { id }) => ({\n  onAuthorize () {\n    dispatch(authorizeFollowRequest(id));\n  },\n\n  onReject () {\n    dispatch(rejectFollowRequest(id));\n  },\n});\n\nexport default connect(makeMapStateToProps, mapDispatchToProps)(FollowRequest);\n","import PropTypes from 'prop-types';\n\nimport { defineMessages, FormattedMessage, injectIntl } from 'react-intl';\n\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\n\nimport { AvatarOverlay } from 'mastodon/components/avatar_overlay';\nimport { RelativeTimestamp } from 'mastodon/components/relative_timestamp';\n\n// This needs to be kept in sync with app/models/report.rb\nconst messages = defineMessages({\n  openReport: { id: 'report_notification.open', defaultMessage: 'Open report' },\n  other: { id: 'report_notification.categories.other', defaultMessage: 'Other' },\n  spam: { id: 'report_notification.categories.spam', defaultMessage: 'Spam' },\n  legal: { id: 'report_notification.categories.legal', defaultMessage: 'Legal' },\n  violation: { id: 'report_notification.categories.violation', defaultMessage: 'Rule violation' },\n});\n\nclass Report extends ImmutablePureComponent {\n\n  static propTypes = {\n    account: ImmutablePropTypes.map.isRequired,\n    report: ImmutablePropTypes.map.isRequired,\n    hidden: PropTypes.bool,\n    intl: PropTypes.object.isRequired,\n  };\n\n  render () {\n    const { intl, hidden, report, account } = this.props;\n\n    if (!report) {\n      return null;\n    }\n\n    if (hidden) {\n      return (\n        <>\n          {report.get('id')}\n        </>\n      );\n    }\n\n    return (\n      <div className='notification__report'>\n        <div className='notification__report__avatar'>\n          <AvatarOverlay account={report.get('target_account')} friend={account} />\n        </div>\n\n        <div className='notification__report__details'>\n          <div>\n            <RelativeTimestamp timestamp={report.get('created_at')} short={false} /> · <FormattedMessage id='report_notification.attached_statuses' defaultMessage='{count, plural, one {# post} other {# posts}} attached' values={{ count: report.get('status_ids').size }} />\n            <br />\n            <strong>{intl.formatMessage(messages[report.get('category')])}</strong>\n          </div>\n\n          <div className='notification__report__actions'>\n            <a href={`/admin/reports/${report.get('id')}`} className='button' target='_blank' rel='noopener noreferrer'>{intl.formatMessage(messages.openReport)}</a>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n}\n\nexport default injectIntl(Report);\n","import PropTypes from 'prop-types';\n\nimport { injectIntl, FormattedMessage, defineMessages } from 'react-intl';\n\nimport classNames from 'classnames';\nimport { Link, withRouter } from 'react-router-dom';\n\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\n\nimport { ReactComponent as EditIcon } from '@material-symbols/svg-600/outlined/edit.svg';\nimport { ReactComponent as FlagIcon } from '@material-symbols/svg-600/outlined/flag-fill.svg';\nimport { ReactComponent as HomeIcon } from '@material-symbols/svg-600/outlined/home-fill.svg';\nimport { ReactComponent as InsertChartIcon } from '@material-symbols/svg-600/outlined/insert_chart.svg';\nimport { ReactComponent as PersonIcon } from '@material-symbols/svg-600/outlined/person-fill.svg';\nimport { ReactComponent as PersonAddIcon } from '@material-symbols/svg-600/outlined/person_add-fill.svg';\nimport { ReactComponent as RepeatIcon } from '@material-symbols/svg-600/outlined/repeat.svg';\nimport { ReactComponent as StarIcon } from '@material-symbols/svg-600/outlined/star-fill.svg';\nimport { HotKeys } from 'react-hotkeys';\n\nimport { Icon }  from 'mastodon/components/icon';\nimport AccountContainer from 'mastodon/containers/account_container';\nimport StatusContainer from 'mastodon/containers/status_container';\nimport { me } from 'mastodon/initial_state';\nimport { WithRouterPropTypes } from 'mastodon/utils/react_router';\n\nimport FollowRequestContainer from '../containers/follow_request_container';\n\nimport Report from './report';\n\nconst messages = defineMessages({\n  favourite: { id: 'notification.favourite', defaultMessage: '{name} favorited your status' },\n  follow: { id: 'notification.follow', defaultMessage: '{name} followed you' },\n  ownPoll: { id: 'notification.own_poll', defaultMessage: 'Your poll has ended' },\n  poll: { id: 'notification.poll', defaultMessage: 'A poll you have voted in has ended' },\n  reblog: { id: 'notification.reblog', defaultMessage: '{name} boosted your status' },\n  status: { id: 'notification.status', defaultMessage: '{name} just posted' },\n  update: { id: 'notification.update', defaultMessage: '{name} edited a post' },\n  adminSignUp: { id: 'notification.admin.sign_up', defaultMessage: '{name} signed up' },\n  adminReport: { id: 'notification.admin.report', defaultMessage: '{name} reported {target}' },\n});\n\nconst notificationForScreenReader = (intl, message, timestamp) => {\n  const output = [message];\n\n  output.push(intl.formatDate(timestamp, { hour: '2-digit', minute: '2-digit', month: 'short', day: 'numeric' }));\n\n  return output.join(', ');\n};\n\nclass Notification extends ImmutablePureComponent {\n  static propTypes = {\n    notification: ImmutablePropTypes.map.isRequired,\n    hidden: PropTypes.bool,\n    onMoveUp: PropTypes.func.isRequired,\n    onMoveDown: PropTypes.func.isRequired,\n    onMention: PropTypes.func.isRequired,\n    onFavourite: PropTypes.func.isRequired,\n    onReblog: PropTypes.func.isRequired,\n    onToggleHidden: PropTypes.func.isRequired,\n    status: ImmutablePropTypes.map,\n    intl: PropTypes.object.isRequired,\n    getScrollPosition: PropTypes.func,\n    updateScrollBottom: PropTypes.func,\n    cacheMediaWidth: PropTypes.func,\n    cachedMediaWidth: PropTypes.number,\n    unread: PropTypes.bool,\n    ...WithRouterPropTypes,\n  };\n\n  handleMoveUp = () => {\n    const { notification, onMoveUp } = this.props;\n    onMoveUp(notification.get('id'));\n  };\n\n  handleMoveDown = () => {\n    const { notification, onMoveDown } = this.props;\n    onMoveDown(notification.get('id'));\n  };\n\n  handleOpen = () => {\n    const { notification } = this.props;\n\n    if (notification.get('status')) {\n      this.props.history.push(`/@${notification.getIn(['status', 'account', 'acct'])}/${notification.get('status')}`);\n    } else {\n      this.handleOpenProfile();\n    }\n  };\n\n  handleOpenProfile = () => {\n    const { notification } = this.props;\n    this.props.history.push(`/@${notification.getIn(['account', 'acct'])}`);\n  };\n\n  handleMention = e => {\n    e.preventDefault();\n\n    const { notification, onMention } = this.props;\n    onMention(notification.get('account'), this.props.history);\n  };\n\n  handleHotkeyFavourite = () => {\n    const { status } = this.props;\n    if (status) this.props.onFavourite(status);\n  };\n\n  handleHotkeyBoost = e => {\n    const { status } = this.props;\n    if (status) this.props.onReblog(status, e);\n  };\n\n  handleHotkeyToggleHidden = () => {\n    const { status } = this.props;\n    if (status) this.props.onToggleHidden(status);\n  };\n\n  getHandlers () {\n    return {\n      reply: this.handleMention,\n      favourite: this.handleHotkeyFavourite,\n      boost: this.handleHotkeyBoost,\n      mention: this.handleMention,\n      open: this.handleOpen,\n      openProfile: this.handleOpenProfile,\n      moveUp: this.handleMoveUp,\n      moveDown: this.handleMoveDown,\n      toggleHidden: this.handleHotkeyToggleHidden,\n    };\n  }\n\n  renderFollow (notification, account, link) {\n    const { intl, unread } = this.props;\n\n    return (\n      <HotKeys handlers={this.getHandlers()}>\n        <div className={classNames('notification notification-follow focusable', { unread })} tabIndex={0} aria-label={notificationForScreenReader(intl, intl.formatMessage(messages.follow, { name: account.get('acct') }), notification.get('created_at'))}>\n          <div className='notification__message'>\n            <Icon id='user-plus' icon={PersonAddIcon} />\n\n            <span title={notification.get('created_at')}>\n              <FormattedMessage id='notification.follow' defaultMessage='{name} followed you' values={{ name: link }} />\n            </span>\n          </div>\n\n          <AccountContainer id={account.get('id')} hidden={this.props.hidden} />\n        </div>\n      </HotKeys>\n    );\n  }\n\n  renderFollowRequest (notification, account, link) {\n    const { intl, unread } = this.props;\n\n    return (\n      <HotKeys handlers={this.getHandlers()}>\n        <div className={classNames('notification notification-follow-request focusable', { unread })} tabIndex={0} aria-label={notificationForScreenReader(intl, intl.formatMessage({ id: 'notification.follow_request', defaultMessage: '{name} has requested to follow you' }, { name: account.get('acct') }), notification.get('created_at'))}>\n          <div className='notification__message'>\n            <Icon id='user' icon={PersonIcon} />\n\n            <span title={notification.get('created_at')}>\n              <FormattedMessage id='notification.follow_request' defaultMessage='{name} has requested to follow you' values={{ name: link }} />\n            </span>\n          </div>\n\n          <FollowRequestContainer id={account.get('id')} withNote={false} hidden={this.props.hidden} />\n        </div>\n      </HotKeys>\n    );\n  }\n\n  renderMention (notification) {\n    return (\n      <StatusContainer\n        id={notification.get('status')}\n        withDismiss\n        hidden={this.props.hidden}\n        onMoveDown={this.handleMoveDown}\n        onMoveUp={this.handleMoveUp}\n        contextType='notifications'\n        getScrollPosition={this.props.getScrollPosition}\n        updateScrollBottom={this.props.updateScrollBottom}\n        cachedMediaWidth={this.props.cachedMediaWidth}\n        cacheMediaWidth={this.props.cacheMediaWidth}\n        unread={this.props.unread}\n      />\n    );\n  }\n\n  renderFavourite (notification, link) {\n    const { intl, unread } = this.props;\n\n    return (\n      <HotKeys handlers={this.getHandlers()}>\n        <div className={classNames('notification notification-favourite focusable', { unread })} tabIndex={0} aria-label={notificationForScreenReader(intl, intl.formatMessage(messages.favourite, { name: notification.getIn(['account', 'acct']) }), notification.get('created_at'))}>\n          <div className='notification__message'>\n            <Icon id='star' icon={StarIcon} className='star-icon' />\n\n            <span title={notification.get('created_at')}>\n              <FormattedMessage id='notification.favourite' defaultMessage='{name} favorited your status' values={{ name: link }} />\n            </span>\n          </div>\n\n          <StatusContainer\n            id={notification.get('status')}\n            account={notification.get('account')}\n            muted\n            withDismiss\n            hidden={!!this.props.hidden}\n            getScrollPosition={this.props.getScrollPosition}\n            updateScrollBottom={this.props.updateScrollBottom}\n            cachedMediaWidth={this.props.cachedMediaWidth}\n            cacheMediaWidth={this.props.cacheMediaWidth}\n          />\n        </div>\n      </HotKeys>\n    );\n  }\n\n  renderReblog (notification, link) {\n    const { intl, unread } = this.props;\n\n    return (\n      <HotKeys handlers={this.getHandlers()}>\n        <div className={classNames('notification notification-reblog focusable', { unread })} tabIndex={0} aria-label={notificationForScreenReader(intl, intl.formatMessage(messages.reblog, { name: notification.getIn(['account', 'acct']) }), notification.get('created_at'))}>\n          <div className='notification__message'>\n            <Icon id='retweet' icon={RepeatIcon} />\n\n            <span title={notification.get('created_at')}>\n              <FormattedMessage id='notification.reblog' defaultMessage='{name} boosted your status' values={{ name: link }} />\n            </span>\n          </div>\n\n          <StatusContainer\n            id={notification.get('status')}\n            account={notification.get('account')}\n            muted\n            withDismiss\n            hidden={this.props.hidden}\n            getScrollPosition={this.props.getScrollPosition}\n            updateScrollBottom={this.props.updateScrollBottom}\n            cachedMediaWidth={this.props.cachedMediaWidth}\n            cacheMediaWidth={this.props.cacheMediaWidth}\n          />\n        </div>\n      </HotKeys>\n    );\n  }\n\n  renderStatus (notification, link) {\n    const { intl, unread, status } = this.props;\n\n    if (!status) {\n      return null;\n    }\n\n    return (\n      <HotKeys handlers={this.getHandlers()}>\n        <div className={classNames('notification notification-status focusable', { unread })} tabIndex={0} aria-label={notificationForScreenReader(intl, intl.formatMessage(messages.status, { name: notification.getIn(['account', 'acct']) }), notification.get('created_at'))}>\n          <div className='notification__message'>\n            <Icon id='home' icon={HomeIcon} />\n\n            <span title={notification.get('created_at')}>\n              <FormattedMessage id='notification.status' defaultMessage='{name} just posted' values={{ name: link }} />\n            </span>\n          </div>\n\n          <StatusContainer\n            id={notification.get('status')}\n            account={notification.get('account')}\n            contextType='notifications'\n            muted\n            withDismiss\n            hidden={this.props.hidden}\n            getScrollPosition={this.props.getScrollPosition}\n            updateScrollBottom={this.props.updateScrollBottom}\n            cachedMediaWidth={this.props.cachedMediaWidth}\n            cacheMediaWidth={this.props.cacheMediaWidth}\n          />\n        </div>\n      </HotKeys>\n    );\n  }\n\n  renderUpdate (notification, link) {\n    const { intl, unread, status } = this.props;\n\n    if (!status) {\n      return null;\n    }\n\n    return (\n      <HotKeys handlers={this.getHandlers()}>\n        <div className={classNames('notification notification-update focusable', { unread })} tabIndex={0} aria-label={notificationForScreenReader(intl, intl.formatMessage(messages.update, { name: notification.getIn(['account', 'acct']) }), notification.get('created_at'))}>\n          <div className='notification__message'>\n            <Icon id='pencil' icon={EditIcon} />\n\n            <span title={notification.get('created_at')}>\n              <FormattedMessage id='notification.update' defaultMessage='{name} edited a post' values={{ name: link }} />\n            </span>\n          </div>\n\n          <StatusContainer\n            id={notification.get('status')}\n            account={notification.get('account')}\n            contextType='notifications'\n            muted\n            withDismiss\n            hidden={this.props.hidden}\n            getScrollPosition={this.props.getScrollPosition}\n            updateScrollBottom={this.props.updateScrollBottom}\n            cachedMediaWidth={this.props.cachedMediaWidth}\n            cacheMediaWidth={this.props.cacheMediaWidth}\n          />\n        </div>\n      </HotKeys>\n    );\n  }\n\n  renderPoll (notification, account) {\n    const { intl, unread, status } = this.props;\n    const ownPoll  = me === account.get('id');\n    const message  = ownPoll ? intl.formatMessage(messages.ownPoll) : intl.formatMessage(messages.poll);\n\n    if (!status) {\n      return null;\n    }\n\n    return (\n      <HotKeys handlers={this.getHandlers()}>\n        <div className={classNames('notification notification-poll focusable', { unread })} tabIndex={0} aria-label={notificationForScreenReader(intl, message, notification.get('created_at'))}>\n          <div className='notification__message'>\n            <Icon id='tasks' icon={InsertChartIcon} />\n\n            <span title={notification.get('created_at')}>\n              {ownPoll ? (\n                <FormattedMessage id='notification.own_poll' defaultMessage='Your poll has ended' />\n              ) : (\n                <FormattedMessage id='notification.poll' defaultMessage='A poll you have voted in has ended' />\n              )}\n            </span>\n          </div>\n\n          <StatusContainer\n            id={notification.get('status')}\n            account={account}\n            contextType='notifications'\n            muted\n            withDismiss\n            hidden={this.props.hidden}\n            getScrollPosition={this.props.getScrollPosition}\n            updateScrollBottom={this.props.updateScrollBottom}\n            cachedMediaWidth={this.props.cachedMediaWidth}\n            cacheMediaWidth={this.props.cacheMediaWidth}\n          />\n        </div>\n      </HotKeys>\n    );\n  }\n\n  renderAdminSignUp (notification, account, link) {\n    const { intl, unread } = this.props;\n\n    return (\n      <HotKeys handlers={this.getHandlers()}>\n        <div className={classNames('notification notification-admin-sign-up focusable', { unread })} tabIndex={0} aria-label={notificationForScreenReader(intl, intl.formatMessage(messages.adminSignUp, { name: account.get('acct') }), notification.get('created_at'))}>\n          <div className='notification__message'>\n            <Icon id='user-plus' icon={PersonAddIcon} />\n\n            <span title={notification.get('created_at')}>\n              <FormattedMessage id='notification.admin.sign_up' defaultMessage='{name} signed up' values={{ name: link }} />\n            </span>\n          </div>\n\n          <AccountContainer id={account.get('id')} hidden={this.props.hidden} />\n        </div>\n      </HotKeys>\n    );\n  }\n\n  renderAdminReport (notification, account, link) {\n    const { intl, unread, report } = this.props;\n\n    if (!report) {\n      return null;\n    }\n\n    const targetAccount = report.get('target_account');\n    const targetDisplayNameHtml = { __html: targetAccount.get('display_name_html') };\n    const targetLink = <bdi><Link className='notification__display-name' title={targetAccount.get('acct')} to={`/@${targetAccount.get('acct')}`} dangerouslySetInnerHTML={targetDisplayNameHtml} /></bdi>;\n\n    return (\n      <HotKeys handlers={this.getHandlers()}>\n        <div className={classNames('notification notification-admin-report focusable', { unread })} tabIndex={0} aria-label={notificationForScreenReader(intl, intl.formatMessage(messages.adminReport, { name: account.get('acct'), target: notification.getIn(['report', 'target_account', 'acct']) }), notification.get('created_at'))}>\n          <div className='notification__message'>\n            <Icon id='flag' icon={FlagIcon} />\n\n            <span title={notification.get('created_at')}>\n              <FormattedMessage id='notification.admin.report' defaultMessage='{name} reported {target}' values={{ name: link, target: targetLink }} />\n            </span>\n          </div>\n\n          <Report account={account} report={notification.get('report')} hidden={this.props.hidden} />\n        </div>\n      </HotKeys>\n    );\n  }\n\n  render () {\n    const { notification } = this.props;\n    const account          = notification.get('account');\n    const displayNameHtml  = { __html: account.get('display_name_html') };\n    const link             = <bdi><Link className='notification__display-name' href={`/@${account.get('acct')}`} title={account.get('acct')} to={`/@${account.get('acct')}`} dangerouslySetInnerHTML={displayNameHtml} /></bdi>;\n\n    switch(notification.get('type')) {\n    case 'follow':\n      return this.renderFollow(notification, account, link);\n    case 'follow_request':\n      return this.renderFollowRequest(notification, account, link);\n    case 'mention':\n      return this.renderMention(notification);\n    case 'favourite':\n      return this.renderFavourite(notification, link);\n    case 'reblog':\n      return this.renderReblog(notification, link);\n    case 'status':\n      return this.renderStatus(notification, link);\n    case 'update':\n      return this.renderUpdate(notification, link);\n    case 'poll':\n      return this.renderPoll(notification, account);\n    case 'admin.sign_up':\n      return this.renderAdminSignUp(notification, account, link);\n    case 'admin.report':\n      return this.renderAdminReport(notification, account, link);\n    }\n\n    return null;\n  }\n\n}\n\nexport default withRouter(injectIntl(Notification));\n","import { connect } from 'react-redux';\n\nimport { initBoostModal } from '../../../actions/boosts';\nimport { mentionCompose } from '../../../actions/compose';\nimport {\n  reblog,\n  favourite,\n  unreblog,\n  unfavourite,\n} from '../../../actions/interactions';\nimport {\n  hideStatus,\n  revealStatus,\n} from '../../../actions/statuses';\nimport { boostModal } from '../../../initial_state';\nimport { makeGetNotification, makeGetStatus, makeGetReport } from '../../../selectors';\nimport Notification from '../components/notification';\n\nconst makeMapStateToProps = () => {\n  const getNotification = makeGetNotification();\n  const getStatus = makeGetStatus();\n  const getReport = makeGetReport();\n\n  const mapStateToProps = (state, props) => {\n    const notification = getNotification(state, props.notification, props.accountId);\n    return {\n      notification: notification,\n      status: notification.get('status') ? getStatus(state, { id: notification.get('status'), contextType: 'notifications' }) : null,\n      report: notification.get('report') ? getReport(state, notification.get('report'), notification.getIn(['report', 'target_account', 'id'])) : null,\n    };\n  };\n\n  return mapStateToProps;\n};\n\nconst mapDispatchToProps = dispatch => ({\n  onMention: (account, router) => {\n    dispatch(mentionCompose(account, router));\n  },\n\n  onModalReblog (status, privacy) {\n    dispatch(reblog(status, privacy));\n  },\n\n  onReblog (status, e) {\n    if (status.get('reblogged')) {\n      dispatch(unreblog(status));\n    } else {\n      if (e.shiftKey || !boostModal) {\n        this.onModalReblog(status);\n      } else {\n        dispatch(initBoostModal({ status, onReblog: this.onModalReblog }));\n      }\n    }\n  },\n\n  onFavourite (status) {\n    if (status.get('favourited')) {\n      dispatch(unfavourite(status));\n    } else {\n      dispatch(favourite(status));\n    }\n  },\n\n  onToggleHidden (status) {\n    if (status.get('hidden')) {\n      dispatch(revealStatus(status.get('id')));\n    } else {\n      dispatch(hideStatus(status.get('id')));\n    }\n  },\n});\n\nexport default connect(makeMapStateToProps, mapDispatchToProps)(Notification);\n","import PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport { defineMessages, injectIntl, FormattedMessage } from 'react-intl';\n\nimport { Helmet } from 'react-helmet';\n\nimport { List as ImmutableList } from 'immutable';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport { connect } from 'react-redux';\nimport { createSelector } from 'reselect';\n\nimport { ReactComponent as DoneAllIcon } from '@material-symbols/svg-600/outlined/done_all.svg';\nimport { ReactComponent as NotificationsIcon } from '@material-symbols/svg-600/outlined/notifications-fill.svg';\nimport { debounce } from 'lodash';\n\nimport { compareId } from 'mastodon/compare_id';\nimport { Icon }  from 'mastodon/components/icon';\nimport { NotSignedInIndicator } from 'mastodon/components/not_signed_in_indicator';\n\nimport { addColumn, removeColumn, moveColumn } from '../../actions/columns';\nimport { submitMarkers } from '../../actions/markers';\nimport {\n  expandNotifications,\n  scrollTopNotifications,\n  loadPending,\n  mountNotifications,\n  unmountNotifications,\n  markNotificationsAsRead,\n} from '../../actions/notifications';\nimport Column from '../../components/column';\nimport ColumnHeader from '../../components/column_header';\nimport { LoadGap } from '../../components/load_gap';\nimport ScrollableList from '../../components/scrollable_list';\n\nimport NotificationsPermissionBanner from './components/notifications_permission_banner';\nimport ColumnSettingsContainer from './containers/column_settings_container';\nimport FilterBarContainer from './containers/filter_bar_container';\nimport NotificationContainer from './containers/notification_container';\n\nconst messages = defineMessages({\n  title: { id: 'column.notifications', defaultMessage: 'Notifications' },\n  markAsRead : { id: 'notifications.mark_as_read', defaultMessage: 'Mark every notification as read' },\n});\n\nconst getExcludedTypes = createSelector([\n  state => state.getIn(['settings', 'notifications', 'shows']),\n], (shows) => {\n  return ImmutableList(shows.filter(item => !item).keys());\n});\n\nconst getNotifications = createSelector([\n  state => state.getIn(['settings', 'notifications', 'quickFilter', 'show']),\n  state => state.getIn(['settings', 'notifications', 'quickFilter', 'active']),\n  getExcludedTypes,\n  state => state.getIn(['notifications', 'items']),\n], (showFilterBar, allowedType, excludedTypes, notifications) => {\n  if (!showFilterBar || allowedType === 'all') {\n    // used if user changed the notification settings after loading the notifications from the server\n    // otherwise a list of notifications will come pre-filtered from the backend\n    // we need to turn it off for FilterBar in order not to block ourselves from seeing a specific category\n    return notifications.filterNot(item => item !== null && excludedTypes.includes(item.get('type')));\n  }\n  return notifications.filter(item => item === null || allowedType === item.get('type'));\n});\n\nconst mapStateToProps = state => ({\n  showFilterBar: state.getIn(['settings', 'notifications', 'quickFilter', 'show']),\n  notifications: getNotifications(state),\n  isLoading: state.getIn(['notifications', 'isLoading'], 0) > 0,\n  isUnread: state.getIn(['notifications', 'unread']) > 0 || state.getIn(['notifications', 'pendingItems']).size > 0,\n  hasMore: state.getIn(['notifications', 'hasMore']),\n  numPending: state.getIn(['notifications', 'pendingItems'], ImmutableList()).size,\n  lastReadId: state.getIn(['settings', 'notifications', 'showUnread']) ? state.getIn(['notifications', 'readMarkerId']) : '0',\n  canMarkAsRead: state.getIn(['settings', 'notifications', 'showUnread']) && state.getIn(['notifications', 'readMarkerId']) !== '0' && getNotifications(state).some(item => item !== null && compareId(item.get('id'), state.getIn(['notifications', 'readMarkerId'])) > 0),\n  needsNotificationPermission: state.getIn(['settings', 'notifications', 'alerts']).includes(true) && state.getIn(['notifications', 'browserSupport']) && state.getIn(['notifications', 'browserPermission']) === 'default' && !state.getIn(['settings', 'notifications', 'dismissPermissionBanner']),\n});\n\nclass Notifications extends PureComponent {\n\n  static contextTypes = {\n    identity: PropTypes.object,\n  };\n\n  static propTypes = {\n    columnId: PropTypes.string,\n    notifications: ImmutablePropTypes.list.isRequired,\n    showFilterBar: PropTypes.bool.isRequired,\n    dispatch: PropTypes.func.isRequired,\n    intl: PropTypes.object.isRequired,\n    isLoading: PropTypes.bool,\n    isUnread: PropTypes.bool,\n    multiColumn: PropTypes.bool,\n    hasMore: PropTypes.bool,\n    numPending: PropTypes.number,\n    lastReadId: PropTypes.string,\n    canMarkAsRead: PropTypes.bool,\n    needsNotificationPermission: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    trackScroll: true,\n  };\n\n  UNSAFE_componentWillMount() {\n    this.props.dispatch(mountNotifications());\n  }\n\n  componentWillUnmount () {\n    this.handleLoadOlder.cancel();\n    this.handleScrollToTop.cancel();\n    this.handleScroll.cancel();\n    this.props.dispatch(scrollTopNotifications(false));\n    this.props.dispatch(unmountNotifications());\n  }\n\n  handleLoadGap = (maxId) => {\n    this.props.dispatch(expandNotifications({ maxId }));\n  };\n\n  handleLoadOlder = debounce(() => {\n    const last = this.props.notifications.last();\n    this.props.dispatch(expandNotifications({ maxId: last && last.get('id') }));\n  }, 300, { leading: true });\n\n  handleLoadPending = () => {\n    this.props.dispatch(loadPending());\n  };\n\n  handleScrollToTop = debounce(() => {\n    this.props.dispatch(scrollTopNotifications(true));\n  }, 100);\n\n  handleScroll = debounce(() => {\n    this.props.dispatch(scrollTopNotifications(false));\n  }, 100);\n\n  handlePin = () => {\n    const { columnId, dispatch } = this.props;\n\n    if (columnId) {\n      dispatch(removeColumn(columnId));\n    } else {\n      dispatch(addColumn('NOTIFICATIONS', {}));\n    }\n  };\n\n  handleMove = (dir) => {\n    const { columnId, dispatch } = this.props;\n    dispatch(moveColumn(columnId, dir));\n  };\n\n  handleHeaderClick = () => {\n    this.column.scrollTop();\n  };\n\n  setColumnRef = c => {\n    this.column = c;\n  };\n\n  handleMoveUp = id => {\n    const elementIndex = this.props.notifications.findIndex(item => item !== null && item.get('id') === id) - 1;\n    this._selectChild(elementIndex, true);\n  };\n\n  handleMoveDown = id => {\n    const elementIndex = this.props.notifications.findIndex(item => item !== null && item.get('id') === id) + 1;\n    this._selectChild(elementIndex, false);\n  };\n\n  _selectChild (index, align_top) {\n    const container = this.column.node;\n    const element = container.querySelector(`article:nth-of-type(${index + 1}) .focusable`);\n\n    if (element) {\n      if (align_top && container.scrollTop > element.offsetTop) {\n        element.scrollIntoView(true);\n      } else if (!align_top && container.scrollTop + container.clientHeight < element.offsetTop + element.offsetHeight) {\n        element.scrollIntoView(false);\n      }\n      element.focus();\n    }\n  }\n\n  handleMarkAsRead = () => {\n    this.props.dispatch(markNotificationsAsRead());\n    this.props.dispatch(submitMarkers({ immediate: true }));\n  };\n\n  render () {\n    const { intl, notifications, isLoading, isUnread, columnId, multiColumn, hasMore, numPending, showFilterBar, lastReadId, canMarkAsRead, needsNotificationPermission } = this.props;\n    const pinned = !!columnId;\n    const emptyMessage = <FormattedMessage id='empty_column.notifications' defaultMessage=\"You don't have any notifications yet. When other people interact with you, you will see it here.\" />;\n    const { signedIn } = this.context.identity;\n\n    let scrollableContent = null;\n\n    const filterBarContainer = (signedIn && showFilterBar)\n      ? (<FilterBarContainer />)\n      : null;\n\n    if (isLoading && this.scrollableContent) {\n      scrollableContent = this.scrollableContent;\n    } else if (notifications.size > 0 || hasMore) {\n      scrollableContent = notifications.map((item, index) => item === null ? (\n        <LoadGap\n          key={'gap:' + notifications.getIn([index + 1, 'id'])}\n          disabled={isLoading}\n          maxId={index > 0 ? notifications.getIn([index - 1, 'id']) : null}\n          onClick={this.handleLoadGap}\n        />\n      ) : (\n        <NotificationContainer\n          key={item.get('id')}\n          notification={item}\n          accountId={item.get('account')}\n          onMoveUp={this.handleMoveUp}\n          onMoveDown={this.handleMoveDown}\n          unread={lastReadId !== '0' && compareId(item.get('id'), lastReadId) > 0}\n        />\n      ));\n    } else {\n      scrollableContent = null;\n    }\n\n    this.scrollableContent = scrollableContent;\n\n    let scrollContainer;\n\n    if (signedIn) {\n      scrollContainer = (\n        <ScrollableList\n          scrollKey={`notifications-${columnId}`}\n          trackScroll={!pinned}\n          isLoading={isLoading}\n          showLoading={isLoading && notifications.size === 0}\n          hasMore={hasMore}\n          numPending={numPending}\n          prepend={needsNotificationPermission && <NotificationsPermissionBanner />}\n          alwaysPrepend\n          emptyMessage={emptyMessage}\n          onLoadMore={this.handleLoadOlder}\n          onLoadPending={this.handleLoadPending}\n          onScrollToTop={this.handleScrollToTop}\n          onScroll={this.handleScroll}\n          bindToDocument={!multiColumn}\n        >\n          {scrollableContent}\n        </ScrollableList>\n      );\n    } else {\n      scrollContainer = <NotSignedInIndicator />;\n    }\n\n    let extraButton = null;\n\n    if (canMarkAsRead) {\n      extraButton = (\n        <button\n          aria-label={intl.formatMessage(messages.markAsRead)}\n          title={intl.formatMessage(messages.markAsRead)}\n          onClick={this.handleMarkAsRead}\n          className='column-header__button'\n        >\n          <Icon id='done-all' icon={DoneAllIcon} />\n        </button>\n      );\n    }\n\n    return (\n      <Column bindToDocument={!multiColumn} ref={this.setColumnRef} label={intl.formatMessage(messages.title)}>\n        <ColumnHeader\n          icon='bell'\n          iconComponent={NotificationsIcon}\n          active={isUnread}\n          title={intl.formatMessage(messages.title)}\n          onPin={this.handlePin}\n          onMove={this.handleMove}\n          onClick={this.handleHeaderClick}\n          pinned={pinned}\n          multiColumn={multiColumn}\n          extraButton={extraButton}\n        >\n          <ColumnSettingsContainer />\n        </ColumnHeader>\n\n        {filterBarContainer}\n        {scrollContainer}\n\n        <Helmet>\n          <title>{intl.formatMessage(messages.title)}</title>\n          <meta name='robots' content='noindex' />\n        </Helmet>\n      </Column>\n    );\n  }\n\n}\n\nexport default connect(mapStateToProps)(injectIntl(Notifications));\n"],"sourceRoot":""}