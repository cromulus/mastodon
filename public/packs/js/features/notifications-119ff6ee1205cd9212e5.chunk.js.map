{"version":3,"sources":["webpack:///./node_modules/@material-symbols/svg-600/outlined/done_all.svg","webpack:///./app/javascript/mastodon/features/notifications/components/notifications_permission_banner.jsx","webpack:///./node_modules/@material-symbols/svg-600/outlined/delete_forever.svg","webpack:///./app/javascript/mastodon/features/notifications/components/clear_column_button.jsx","webpack:///./app/javascript/mastodon/features/notifications/components/grant_permission_button.jsx","webpack:///./app/javascript/mastodon/features/notifications/components/column_settings.jsx","webpack:///./app/javascript/mastodon/features/notifications/containers/column_settings_container.js","webpack:///./app/javascript/mastodon/features/notifications/components/filter_bar.jsx","webpack:///./app/javascript/mastodon/features/notifications/containers/filter_bar_container.js","webpack:///./node_modules/@material-symbols/svg-600/outlined/flag-fill.svg","webpack:///./node_modules/@material-symbols/svg-600/outlined/person-fill.svg","webpack:///./node_modules/@material-symbols/svg-600/outlined/person_add-fill.svg","webpack:///./app/javascript/mastodon/features/notifications/components/follow_request.jsx","webpack:///./app/javascript/mastodon/features/notifications/containers/follow_request_container.js","webpack:///./app/javascript/mastodon/features/notifications/components/report.jsx","webpack:///./app/javascript/mastodon/features/notifications/components/notification.jsx","webpack:///./app/javascript/mastodon/features/notifications/containers/notification_container.js","webpack:///./app/javascript/mastodon/features/notifications/index.jsx"],"names":["_path","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","SvgDoneAll","_ref","title","titleId","props","xmlns","width","height","viewBox","id","d","messages","defineMessages","close","defaultMessage","NotificationsPermissionBanner","PureComponent","constructor","_defineProperty","dispatch","requestBrowserPermission","changeSetting","render","intl","_jsx","className","IconButton","icon","iconComponent","CloseIcon","onClick","handleClose","formatMessage","FormattedMessage","values","Icon","TuneIcon","Button","handleClick","connect","injectIntl","SvgDeleteForever","ClearColumnButton","tabIndex","DeleteForeverIcon","GrantPermissionButton","ColumnSettings","path","checked","onChange","settings","pushSettings","onClear","alertsEnabled","browserSupport","browserPermission","onRequestNotificationPermission","unreadMarkersShowStr","filterBarShowStr","filterAdvancedStr","alertStr","showStr","soundStr","showPushSettings","get","pushStr","role","SettingToggle","prefix","settingPath","label","disabled","onPushChange","context","identity","permissions","PERMISSION_MANAGE_USERS","PERMISSION_MANAGE_REPORTS","PropTypes","object","clearMessage","clearConfirm","permissionDenied","state","getIn","includes","mapDispatchToProps","window","Notification","permission","changePushNotifications","slice","showAlert","message","setFilter","openModal","modalType","modalProps","confirm","onConfirm","clearNotifications","tooltips","mentions","favourites","boosts","polls","follows","statuses","FilterBar","notificationType","selectFilter","selectedFilter","advancedMode","ReplyAllIcon","StarIcon","RepeatIcon","InsertChartIcon","HomeIcon","PersonAddIcon","newActiveFilter","SvgFlagFill","SvgPersonFill","SvgPersonAddFill","authorize","reject","FollowRequest","ImmutablePureComponent","hidden","account","onAuthorize","onReject","_jsxs","_Fragment","children","Link","to","Avatar","size","DisplayName","CheckIcon","ImmutablePropTypes","record","isRequired","func","makeMapStateToProps","getAccount","makeGetAccount","mapStateToProps","authorizeFollowRequest","rejectFollowRequest","openReport","other","spam","legal","violation","Report","report","_jsx2","AvatarOverlay","friend","RelativeTimestamp","timestamp","short","count","href","rel","map","bool","favourite","follow","ownPoll","poll","reblog","status","update","adminSignUp","adminReport","notificationForScreenReader","output","push","formatDate","hour","minute","month","day","join","notification","onMoveUp","onMoveDown","history","handleOpenProfile","e","preventDefault","onMention","onFavourite","onReblog","onToggleHidden","getHandlers","reply","handleMention","handleHotkeyFavourite","boost","handleHotkeyBoost","mention","open","handleOpen","openProfile","moveUp","handleMoveUp","moveDown","handleMoveDown","toggleHidden","handleHotkeyToggleHidden","renderFollow","link","unread","HotKeys","handlers","classNames","name","AccountContainer","renderFollowRequest","PersonIcon","FollowRequestContainer","withNote","renderMention","StatusContainer","withDismiss","contextType","getScrollPosition","updateScrollBottom","cachedMediaWidth","cacheMediaWidth","renderFavourite","muted","renderReblog","renderStatus","renderUpdate","EditIcon","renderPoll","me","renderAdminSignUp","renderAdminReport","targetAccount","targetDisplayNameHtml","__html","targetLink","dangerouslySetInnerHTML","FlagIcon","displayNameHtml","number","WithRouterPropTypes","withRouter","getNotification","makeGetNotification","getStatus","makeGetStatus","getReport","makeGetReport","accountId","router","mentionCompose","onModalReblog","privacy","unreblog","shiftKey","boostModal","initBoostModal","unfavourite","revealStatus","hideStatus","markAsRead","getExcludedTypes","createSelector","shows","ImmutableList","filter","item","keys","getNotifications","showFilterBar","allowedType","excludedTypes","notifications","filterNot","Notifications","maxId","expandNotifications","_debounce","last","leading","loadPending","scrollTopNotifications","columnId","removeColumn","addColumn","dir","moveColumn","column","scrollTop","c","elementIndex","findIndex","_selectChild","markNotificationsAsRead","submitMarkers","immediate","UNSAFE_componentWillMount","mountNotifications","componentWillUnmount","handleLoadOlder","cancel","handleScrollToTop","handleScroll","unmountNotifications","index","align_top","container","node","element","querySelector","offsetTop","scrollIntoView","clientHeight","offsetHeight","focus","isLoading","isUnread","multiColumn","hasMore","numPending","lastReadId","canMarkAsRead","needsNotificationPermission","pinned","emptyMessage","signedIn","scrollableContent","filterBarContainer","FilterBarContainer","scrollContainer","LoadGap","handleLoadGap","NotificationContainer","compareId","ScrollableList","scrollKey","trackScroll","showLoading","prepend","alwaysPrepend","onLoadMore","onLoadPending","handleLoadPending","onScrollToTop","onScroll","bindToDocument","NotSignedInIndicator","extraButton","handleMarkAsRead","DoneAllIcon","Column","ref","setColumnRef","ColumnHeader","NotificationsIcon","active","onPin","handlePin","onMove","handleMove","handleHeaderClick","ColumnSettingsContainer","Helmet","content","some"],"mappings":"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","file":"js/features/notifications-119ff6ee1205cd9212e5.chunk.js","sourcesContent":["var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgDoneAll(_ref) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 48,\n    height: 48,\n    viewBox: \"0 -960 960 960\",\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M294.565-214.868 56.999-452.434 113-509l181 181 56.566 56.566-56.001 56.566ZM464-228.434 225.869-467.13 283-523.131l181 181 383.435-382.87L904.566-669 464-228.434Zm0-184.131-56.001-56.566 257-257L721-669.565l-257 257Z\"\n  })));\n}\nexport default __webpack_public_path__ + \"media/outlined/done_all-140bd82c.svg\";\nexport { SvgDoneAll as ReactComponent };","import PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport { defineMessages, injectIntl, FormattedMessage } from 'react-intl';\n\nimport { connect } from 'react-redux';\n\nimport { ReactComponent as CloseIcon } from '@material-symbols/svg-600/outlined/close.svg';\nimport { ReactComponent as TuneIcon } from '@material-symbols/svg-600/outlined/tune.svg';\n\nimport { requestBrowserPermission } from 'mastodon/actions/notifications';\nimport { changeSetting } from 'mastodon/actions/settings';\nimport { Button } from 'mastodon/components/button';\nimport { Icon }  from 'mastodon/components/icon';\nimport { IconButton } from 'mastodon/components/icon_button';\n\nconst messages = defineMessages({\n  close: { id: 'lightbox.close', defaultMessage: 'Close' },\n});\n\nclass NotificationsPermissionBanner extends PureComponent {\n\n  static propTypes = {\n    dispatch: PropTypes.func.isRequired,\n    intl: PropTypes.object.isRequired,\n  };\n\n  handleClick = () => {\n    this.props.dispatch(requestBrowserPermission());\n  };\n\n  handleClose = () => {\n    this.props.dispatch(changeSetting(['notifications', 'dismissPermissionBanner'], true));\n  };\n\n  render () {\n    const { intl } = this.props;\n\n    return (\n      <div className='notifications-permission-banner'>\n        <div className='notifications-permission-banner__close'>\n          <IconButton icon='times' iconComponent={CloseIcon} onClick={this.handleClose} title={intl.formatMessage(messages.close)} />\n        </div>\n\n        <h2><FormattedMessage id='notifications_permission_banner.title' defaultMessage='Never miss a thing' /></h2>\n        <p><FormattedMessage id='notifications_permission_banner.how_to_control' defaultMessage=\"To receive notifications when Mastodon isn't open, enable desktop notifications. You can control precisely which types of interactions generate desktop notifications through the {icon} button above once they're enabled.\" values={{ icon: <Icon id='sliders' icon={TuneIcon} /> }} /></p>\n        <Button onClick={this.handleClick}><FormattedMessage id='notifications_permission_banner.enable' defaultMessage='Enable desktop notifications' /></Button>\n      </div>\n    );\n  }\n\n}\n\nexport default connect()(injectIntl(NotificationsPermissionBanner));\n","var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgDeleteForever(_ref) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 48,\n    height: 48,\n    viewBox: \"0 -960 960 960\",\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M362.13-293.348 480-412.652l118.87 119.304 54.348-54.782L535.348-468l117.87-119.87-54.348-55.348L480-523.348l-117.87-119.87-54.782 55.348L425.652-468 307.348-348.13l54.782 54.782ZM256.478-105.869q-32.74 0-56.262-23.356-23.522-23.355-23.522-55.862v-560.391h-50.609v-79.218h212.306v-40.175h282.653v40.175h212.871v79.218h-50.609v560.391q0 32.507-23.522 55.862-23.522 23.356-56.262 23.356H256.478Zm447.044-639.609H256.478v560.391h447.044v-560.391Zm-447.044 0v560.391-560.391Z\"\n  })));\n}\nexport default __webpack_public_path__ + \"media/outlined/delete_forever-21d29c3a.svg\";\nexport { SvgDeleteForever as ReactComponent };","import PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport { FormattedMessage } from 'react-intl';\n\nimport { ReactComponent as DeleteForeverIcon } from '@material-symbols/svg-600/outlined/delete_forever.svg';\n\nimport { Icon }  from 'mastodon/components/icon';\n\nexport default class ClearColumnButton extends PureComponent {\n\n  static propTypes = {\n    onClick: PropTypes.func.isRequired,\n  };\n\n  render () {\n    return (\n      <button className='text-btn column-header__setting-btn' tabIndex={0} onClick={this.props.onClick}><Icon id='eraser' icon={DeleteForeverIcon} /> <FormattedMessage id='notifications.clear' defaultMessage='Clear notifications' /></button>\n    );\n  }\n\n}\n","import PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport { FormattedMessage } from 'react-intl';\n\nexport default class GrantPermissionButton extends PureComponent {\n\n  static propTypes = {\n    onClick: PropTypes.func.isRequired,\n  };\n\n  render () {\n    return (\n      <button className='text-btn column-header__permission-btn' tabIndex={0} onClick={this.props.onClick}>\n        <FormattedMessage id='notifications.grant_permission' defaultMessage='Grant permission.' />\n      </button>\n    );\n  }\n\n}\n","import PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport { FormattedMessage } from 'react-intl';\n\nimport ImmutablePropTypes from 'react-immutable-proptypes';\n\nimport { PERMISSION_MANAGE_USERS, PERMISSION_MANAGE_REPORTS } from 'mastodon/permissions';\n\nimport ClearColumnButton from './clear_column_button';\nimport GrantPermissionButton from './grant_permission_button';\nimport SettingToggle from './setting_toggle';\n\nexport default class ColumnSettings extends PureComponent {\n\n  static contextTypes = {\n    identity: PropTypes.object,\n  };\n\n  static propTypes = {\n    settings: ImmutablePropTypes.map.isRequired,\n    pushSettings: ImmutablePropTypes.map.isRequired,\n    onChange: PropTypes.func.isRequired,\n    onClear: PropTypes.func.isRequired,\n    onRequestNotificationPermission: PropTypes.func,\n    alertsEnabled: PropTypes.bool,\n    browserSupport: PropTypes.bool,\n    browserPermission: PropTypes.string,\n  };\n\n  onPushChange = (path, checked) => {\n    this.props.onChange(['push', ...path], checked);\n  };\n\n  render () {\n    const { settings, pushSettings, onChange, onClear, alertsEnabled, browserSupport, browserPermission, onRequestNotificationPermission } = this.props;\n\n    const unreadMarkersShowStr = <FormattedMessage id='notifications.column_settings.unread_notifications.highlight' defaultMessage='Highlight unread notifications' />;\n    const filterBarShowStr = <FormattedMessage id='notifications.column_settings.filter_bar.show_bar' defaultMessage='Show filter bar' />;\n    const filterAdvancedStr = <FormattedMessage id='notifications.column_settings.filter_bar.advanced' defaultMessage='Display all categories' />;\n    const alertStr = <FormattedMessage id='notifications.column_settings.alert' defaultMessage='Desktop notifications' />;\n    const showStr = <FormattedMessage id='notifications.column_settings.show' defaultMessage='Show in column' />;\n    const soundStr = <FormattedMessage id='notifications.column_settings.sound' defaultMessage='Play sound' />;\n\n    const showPushSettings = pushSettings.get('browserSupport') && pushSettings.get('isSubscribed');\n    const pushStr = showPushSettings && <FormattedMessage id='notifications.column_settings.push' defaultMessage='Push notifications' />;\n\n    return (\n      <div>\n        {alertsEnabled && browserSupport && browserPermission === 'denied' && (\n          <div className='column-settings__row column-settings__row--with-margin'>\n            <span className='warning-hint'><FormattedMessage id='notifications.permission_denied' defaultMessage='Desktop notifications are unavailable due to previously denied browser permissions request' /></span>\n          </div>\n        )}\n\n        {alertsEnabled && browserSupport && browserPermission === 'default' && (\n          <div className='column-settings__row column-settings__row--with-margin'>\n            <span className='warning-hint'>\n              <FormattedMessage id='notifications.permission_required' defaultMessage='Desktop notifications are unavailable because the required permission has not been granted.' /> <GrantPermissionButton onClick={onRequestNotificationPermission} />\n            </span>\n          </div>\n        )}\n\n        <div className='column-settings__row'>\n          <ClearColumnButton onClick={onClear} />\n        </div>\n\n        <div role='group' aria-labelledby='notifications-unread-markers'>\n          <span id='notifications-unread-markers' className='column-settings__section'>\n            <FormattedMessage id='notifications.column_settings.unread_notifications.category' defaultMessage='Unread notifications' />\n          </span>\n\n          <div className='column-settings__row'>\n            <SettingToggle id='unread-notification-markers' prefix='notifications' settings={settings} settingPath={['showUnread']} onChange={onChange} label={unreadMarkersShowStr} />\n          </div>\n        </div>\n\n        <div role='group' aria-labelledby='notifications-filter-bar'>\n          <span id='notifications-filter-bar' className='column-settings__section'>\n            <FormattedMessage id='notifications.column_settings.filter_bar.category' defaultMessage='Quick filter bar' />\n          </span>\n\n          <div className='column-settings__row'>\n            <SettingToggle id='show-filter-bar' prefix='notifications' settings={settings} settingPath={['quickFilter', 'show']} onChange={onChange} label={filterBarShowStr} />\n            <SettingToggle id='show-filter-bar' prefix='notifications' settings={settings} settingPath={['quickFilter', 'advanced']} onChange={onChange} label={filterAdvancedStr} />\n          </div>\n        </div>\n\n        <div role='group' aria-labelledby='notifications-follow'>\n          <span id='notifications-follow' className='column-settings__section'><FormattedMessage id='notifications.column_settings.follow' defaultMessage='New followers:' /></span>\n\n          <div className='column-settings__row'>\n            <SettingToggle disabled={browserPermission === 'denied'} prefix='notifications_desktop' settings={settings} settingPath={['alerts', 'follow']} onChange={onChange} label={alertStr} />\n            {showPushSettings && <SettingToggle prefix='notifications_push' settings={pushSettings} settingPath={['alerts', 'follow']} onChange={this.onPushChange} label={pushStr} />}\n            <SettingToggle prefix='notifications' settings={settings} settingPath={['shows', 'follow']} onChange={onChange} label={showStr} />\n            <SettingToggle prefix='notifications' settings={settings} settingPath={['sounds', 'follow']} onChange={onChange} label={soundStr} />\n          </div>\n        </div>\n\n        <div role='group' aria-labelledby='notifications-follow-request'>\n          <span id='notifications-follow-request' className='column-settings__section'><FormattedMessage id='notifications.column_settings.follow_request' defaultMessage='New follow requests:' /></span>\n\n          <div className='column-settings__row'>\n            <SettingToggle disabled={browserPermission === 'denied'} prefix='notifications_desktop' settings={settings} settingPath={['alerts', 'follow_request']} onChange={onChange} label={alertStr} />\n            {showPushSettings && <SettingToggle prefix='notifications_push' settings={pushSettings} settingPath={['alerts', 'follow_request']} onChange={this.onPushChange} label={pushStr} />}\n            <SettingToggle prefix='notifications' settings={settings} settingPath={['shows', 'follow_request']} onChange={onChange} label={showStr} />\n            <SettingToggle prefix='notifications' settings={settings} settingPath={['sounds', 'follow_request']} onChange={onChange} label={soundStr} />\n          </div>\n        </div>\n\n        <div role='group' aria-labelledby='notifications-favourite'>\n          <span id='notifications-favourite' className='column-settings__section'><FormattedMessage id='notifications.column_settings.favourite' defaultMessage='Favorites:' /></span>\n\n          <div className='column-settings__row'>\n            <SettingToggle disabled={browserPermission === 'denied'} prefix='notifications_desktop' settings={settings} settingPath={['alerts', 'favourite']} onChange={onChange} label={alertStr} />\n            {showPushSettings && <SettingToggle prefix='notifications_push' settings={pushSettings} settingPath={['alerts', 'favourite']} onChange={this.onPushChange} label={pushStr} />}\n            <SettingToggle prefix='notifications' settings={settings} settingPath={['shows', 'favourite']} onChange={onChange} label={showStr} />\n            <SettingToggle prefix='notifications' settings={settings} settingPath={['sounds', 'favourite']} onChange={onChange} label={soundStr} />\n          </div>\n        </div>\n\n        <div role='group' aria-labelledby='notifications-mention'>\n          <span id='notifications-mention' className='column-settings__section'><FormattedMessage id='notifications.column_settings.mention' defaultMessage='Mentions:' /></span>\n\n          <div className='column-settings__row'>\n            <SettingToggle disabled={browserPermission === 'denied'} prefix='notifications_desktop' settings={settings} settingPath={['alerts', 'mention']} onChange={onChange} label={alertStr} />\n            {showPushSettings && <SettingToggle prefix='notifications_push' settings={pushSettings} settingPath={['alerts', 'mention']} onChange={this.onPushChange} label={pushStr} />}\n            <SettingToggle prefix='notifications' settings={settings} settingPath={['shows', 'mention']} onChange={onChange} label={showStr} />\n            <SettingToggle prefix='notifications' settings={settings} settingPath={['sounds', 'mention']} onChange={onChange} label={soundStr} />\n          </div>\n        </div>\n\n        <div role='group' aria-labelledby='notifications-reblog'>\n          <span id='notifications-reblog' className='column-settings__section'><FormattedMessage id='notifications.column_settings.reblog' defaultMessage='Boosts:' /></span>\n\n          <div className='column-settings__row'>\n            <SettingToggle disabled={browserPermission === 'denied'} prefix='notifications_desktop' settings={settings} settingPath={['alerts', 'reblog']} onChange={onChange} label={alertStr} />\n            {showPushSettings && <SettingToggle prefix='notifications_push' settings={pushSettings} settingPath={['alerts', 'reblog']} onChange={this.onPushChange} label={pushStr} />}\n            <SettingToggle prefix='notifications' settings={settings} settingPath={['shows', 'reblog']} onChange={onChange} label={showStr} />\n            <SettingToggle prefix='notifications' settings={settings} settingPath={['sounds', 'reblog']} onChange={onChange} label={soundStr} />\n          </div>\n        </div>\n\n        <div role='group' aria-labelledby='notifications-poll'>\n          <span id='notifications-poll' className='column-settings__section'><FormattedMessage id='notifications.column_settings.poll' defaultMessage='Poll results:' /></span>\n\n          <div className='column-settings__row'>\n            <SettingToggle disabled={browserPermission === 'denied'} prefix='notifications_desktop' settings={settings} settingPath={['alerts', 'poll']} onChange={onChange} label={alertStr} />\n            {showPushSettings && <SettingToggle prefix='notifications_push' settings={pushSettings} settingPath={['alerts', 'poll']} onChange={this.onPushChange} label={pushStr} />}\n            <SettingToggle prefix='notifications' settings={settings} settingPath={['shows', 'poll']} onChange={onChange} label={showStr} />\n            <SettingToggle prefix='notifications' settings={settings} settingPath={['sounds', 'poll']} onChange={onChange} label={soundStr} />\n          </div>\n        </div>\n\n        <div role='group' aria-labelledby='notifications-status'>\n          <span id='notifications-status' className='column-settings__section'><FormattedMessage id='notifications.column_settings.status' defaultMessage='New posts:' /></span>\n\n          <div className='column-settings__row'>\n            <SettingToggle disabled={browserPermission === 'denied'} prefix='notifications_desktop' settings={settings} settingPath={['alerts', 'status']} onChange={onChange} label={alertStr} />\n            {showPushSettings && <SettingToggle prefix='notifications_push' settings={pushSettings} settingPath={['alerts', 'status']} onChange={this.onPushChange} label={pushStr} />}\n            <SettingToggle prefix='notifications' settings={settings} settingPath={['shows', 'status']} onChange={onChange} label={showStr} />\n            <SettingToggle prefix='notifications' settings={settings} settingPath={['sounds', 'status']} onChange={onChange} label={soundStr} />\n          </div>\n        </div>\n\n        <div role='group' aria-labelledby='notifications-update'>\n          <span id='notifications-update' className='column-settings__section'><FormattedMessage id='notifications.column_settings.update' defaultMessage='Edits:' /></span>\n\n          <div className='column-settings__row'>\n            <SettingToggle disabled={browserPermission === 'denied'} prefix='notifications_desktop' settings={settings} settingPath={['alerts', 'update']} onChange={onChange} label={alertStr} />\n            {showPushSettings && <SettingToggle prefix='notifications_push' settings={pushSettings} settingPath={['alerts', 'update']} onChange={this.onPushChange} label={pushStr} />}\n            <SettingToggle prefix='notifications' settings={settings} settingPath={['shows', 'update']} onChange={onChange} label={showStr} />\n            <SettingToggle prefix='notifications' settings={settings} settingPath={['sounds', 'update']} onChange={onChange} label={soundStr} />\n          </div>\n        </div>\n\n        {((this.context.identity.permissions & PERMISSION_MANAGE_USERS) === PERMISSION_MANAGE_USERS) && (\n          <div role='group' aria-labelledby='notifications-admin-sign-up'>\n            <span id='notifications-status' className='column-settings__section'><FormattedMessage id='notifications.column_settings.admin.sign_up' defaultMessage='New sign-ups:' /></span>\n\n            <div className='column-settings__row'>\n              <SettingToggle disabled={browserPermission === 'denied'} prefix='notifications_desktop' settings={settings} settingPath={['alerts', 'admin.sign_up']} onChange={onChange} label={alertStr} />\n              {showPushSettings && <SettingToggle prefix='notifications_push' settings={pushSettings} settingPath={['alerts', 'admin.sign_up']} onChange={this.onPushChange} label={pushStr} />}\n              <SettingToggle prefix='notifications' settings={settings} settingPath={['shows', 'admin.sign_up']} onChange={onChange} label={showStr} />\n              <SettingToggle prefix='notifications' settings={settings} settingPath={['sounds', 'admin.sign_up']} onChange={onChange} label={soundStr} />\n            </div>\n          </div>\n        )}\n\n        {((this.context.identity.permissions & PERMISSION_MANAGE_REPORTS) === PERMISSION_MANAGE_REPORTS) && (\n          <div role='group' aria-labelledby='notifications-admin-report'>\n            <span id='notifications-status' className='column-settings__section'><FormattedMessage id='notifications.column_settings.admin.report' defaultMessage='New reports:' /></span>\n\n            <div className='column-settings__row'>\n              <SettingToggle disabled={browserPermission === 'denied'} prefix='notifications_desktop' settings={settings} settingPath={['alerts', 'admin.report']} onChange={onChange} label={alertStr} />\n              {showPushSettings && <SettingToggle prefix='notifications_push' settings={pushSettings} settingPath={['alerts', 'admin.report']} onChange={this.onPushChange} label={pushStr} />}\n              <SettingToggle prefix='notifications' settings={settings} settingPath={['shows', 'admin.report']} onChange={onChange} label={showStr} />\n              <SettingToggle prefix='notifications' settings={settings} settingPath={['sounds', 'admin.report']} onChange={onChange} label={soundStr} />\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n}\n","import { defineMessages, injectIntl } from 'react-intl';\n\nimport { connect } from 'react-redux';\n\nimport { showAlert } from '../../../actions/alerts';\nimport { openModal } from '../../../actions/modal';\nimport { setFilter, clearNotifications, requestBrowserPermission } from '../../../actions/notifications';\nimport { changeAlerts as changePushNotifications } from '../../../actions/push_notifications';\nimport { changeSetting } from '../../../actions/settings';\nimport ColumnSettings from '../components/column_settings';\n\nconst messages = defineMessages({\n  clearMessage: { id: 'notifications.clear_confirmation', defaultMessage: 'Are you sure you want to permanently clear all your notifications?' },\n  clearConfirm: { id: 'notifications.clear', defaultMessage: 'Clear notifications' },\n  permissionDenied: { id: 'notifications.permission_denied_alert', defaultMessage: 'Desktop notifications can\\'t be enabled, as browser permission has been denied before' },\n});\n\nconst mapStateToProps = state => ({\n  settings: state.getIn(['settings', 'notifications']),\n  pushSettings: state.get('push_notifications'),\n  alertsEnabled: state.getIn(['settings', 'notifications', 'alerts']).includes(true),\n  browserSupport: state.getIn(['notifications', 'browserSupport']),\n  browserPermission: state.getIn(['notifications', 'browserPermission']),\n});\n\nconst mapDispatchToProps = (dispatch, { intl }) => ({\n\n  onChange (path, checked) {\n    if (path[0] === 'push') {\n      if (checked && typeof window.Notification !== 'undefined' && Notification.permission !== 'granted') {\n        dispatch(requestBrowserPermission((permission) => {\n          if (permission === 'granted') {\n            dispatch(changePushNotifications(path.slice(1), checked));\n          } else {\n            dispatch(showAlert({ message: messages.permissionDenied }));\n          }\n        }));\n      } else {\n        dispatch(changePushNotifications(path.slice(1), checked));\n      }\n    } else if (path[0] === 'quickFilter') {\n      dispatch(changeSetting(['notifications', ...path], checked));\n      dispatch(setFilter('all'));\n    } else if (path[0] === 'alerts' && checked && typeof window.Notification !== 'undefined' && Notification.permission !== 'granted') {\n      if (checked && typeof window.Notification !== 'undefined' && Notification.permission !== 'granted') {\n        dispatch(requestBrowserPermission((permission) => {\n          if (permission === 'granted') {\n            dispatch(changeSetting(['notifications', ...path], checked));\n          } else {\n            dispatch(showAlert({ message: messages.permissionDenied }));\n          }\n        }));\n      } else {\n        dispatch(changeSetting(['notifications', ...path], checked));\n      }\n    } else {\n      dispatch(changeSetting(['notifications', ...path], checked));\n    }\n  },\n\n  onClear () {\n    dispatch(openModal({\n      modalType: 'CONFIRM',\n      modalProps: {\n        message: intl.formatMessage(messages.clearMessage),\n        confirm: intl.formatMessage(messages.clearConfirm),\n        onConfirm: () => dispatch(clearNotifications()),\n      },\n    }));\n  },\n\n  onRequestNotificationPermission () {\n    dispatch(requestBrowserPermission());\n  },\n\n});\n\nexport default injectIntl(connect(mapStateToProps, mapDispatchToProps)(ColumnSettings));\n","import PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport { defineMessages, injectIntl, FormattedMessage } from 'react-intl';\n\nimport { ReactComponent as HomeIcon } from '@material-symbols/svg-600/outlined/home-fill.svg';\nimport { ReactComponent as InsertChartIcon } from '@material-symbols/svg-600/outlined/insert_chart.svg';\nimport { ReactComponent as PersonAddIcon } from '@material-symbols/svg-600/outlined/person_add.svg';\nimport { ReactComponent as RepeatIcon } from '@material-symbols/svg-600/outlined/repeat.svg';\nimport { ReactComponent as ReplyAllIcon } from '@material-symbols/svg-600/outlined/reply_all.svg';\nimport { ReactComponent as StarIcon } from '@material-symbols/svg-600/outlined/star.svg';\n\nimport { Icon }  from 'mastodon/components/icon';\n\nconst tooltips = defineMessages({\n  mentions: { id: 'notifications.filter.mentions', defaultMessage: 'Mentions' },\n  favourites: { id: 'notifications.filter.favourites', defaultMessage: 'Favorites' },\n  boosts: { id: 'notifications.filter.boosts', defaultMessage: 'Boosts' },\n  polls: { id: 'notifications.filter.polls', defaultMessage: 'Poll results' },\n  follows: { id: 'notifications.filter.follows', defaultMessage: 'Follows' },\n  statuses: { id: 'notifications.filter.statuses', defaultMessage: 'Updates from people you follow' },\n});\n\nclass FilterBar extends PureComponent {\n\n  static propTypes = {\n    selectFilter: PropTypes.func.isRequired,\n    selectedFilter: PropTypes.string.isRequired,\n    advancedMode: PropTypes.bool.isRequired,\n    intl: PropTypes.object.isRequired,\n  };\n\n  onClick (notificationType) {\n    return () => this.props.selectFilter(notificationType);\n  }\n\n  render () {\n    const { selectedFilter, advancedMode, intl } = this.props;\n    const renderedElement = !advancedMode ? (\n      <div className='notification__filter-bar'>\n        <button\n          className={selectedFilter === 'all' ? 'active' : ''}\n          onClick={this.onClick('all')}\n        >\n          <FormattedMessage\n            id='notifications.filter.all'\n            defaultMessage='All'\n          />\n        </button>\n        <button\n          className={selectedFilter === 'mention' ? 'active' : ''}\n          onClick={this.onClick('mention')}\n        >\n          <FormattedMessage\n            id='notifications.filter.mentions'\n            defaultMessage='Mentions'\n          />\n        </button>\n      </div>\n    ) : (\n      <div className='notification__filter-bar'>\n        <button\n          className={selectedFilter === 'all' ? 'active' : ''}\n          onClick={this.onClick('all')}\n        >\n          <FormattedMessage\n            id='notifications.filter.all'\n            defaultMessage='All'\n          />\n        </button>\n        <button\n          className={selectedFilter === 'mention' ? 'active' : ''}\n          onClick={this.onClick('mention')}\n          title={intl.formatMessage(tooltips.mentions)}\n        >\n          <Icon id='reply-all' icon={ReplyAllIcon} />\n        </button>\n        <button\n          className={selectedFilter === 'favourite' ? 'active' : ''}\n          onClick={this.onClick('favourite')}\n          title={intl.formatMessage(tooltips.favourites)}\n        >\n          <Icon id='star' icon={StarIcon} />\n        </button>\n        <button\n          className={selectedFilter === 'reblog' ? 'active' : ''}\n          onClick={this.onClick('reblog')}\n          title={intl.formatMessage(tooltips.boosts)}\n        >\n          <Icon id='retweet' icon={RepeatIcon} />\n        </button>\n        <button\n          className={selectedFilter === 'poll' ? 'active' : ''}\n          onClick={this.onClick('poll')}\n          title={intl.formatMessage(tooltips.polls)}\n        >\n          <Icon id='tasks' icon={InsertChartIcon} />\n        </button>\n        <button\n          className={selectedFilter === 'status' ? 'active' : ''}\n          onClick={this.onClick('status')}\n          title={intl.formatMessage(tooltips.statuses)}\n        >\n          <Icon id='home' icon={HomeIcon} />\n        </button>\n        <button\n          className={selectedFilter === 'follow' ? 'active' : ''}\n          onClick={this.onClick('follow')}\n          title={intl.formatMessage(tooltips.follows)}\n        >\n          <Icon id='user-plus' icon={PersonAddIcon} />\n        </button>\n      </div>\n    );\n    return renderedElement;\n  }\n\n}\n\nexport default injectIntl(FilterBar);\n","import { connect } from 'react-redux';\n\nimport { setFilter } from '../../../actions/notifications';\nimport FilterBar from '../components/filter_bar';\n\nconst makeMapStateToProps = state => ({\n  selectedFilter: state.getIn(['settings', 'notifications', 'quickFilter', 'active']),\n  advancedMode: state.getIn(['settings', 'notifications', 'quickFilter', 'advanced']),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  selectFilter (newActiveFilter) {\n    dispatch(setFilter(newActiveFilter));\n  },\n});\n\nexport default connect(makeMapStateToProps, mapDispatchToProps)(FilterBar);\n","var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgFlagFill(_ref) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 48,\n    height: 48,\n    viewBox: \"0 -960 960 960\",\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M185.869-105.869v-708.827H554.87l19.189 86h240.637v398.827H532.13l-19-85H265.087v309h-79.218Z\"\n  })));\n}\nexport default __webpack_public_path__ + \"media/outlined/flag-fill-ea35a6f2.svg\";\nexport { SvgFlagFill as ReactComponent };","var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgPersonFill(_ref) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 48,\n    height: 48,\n    viewBox: \"0 -960 960 960\",\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M479.885-488.348q-72.333 0-118.174-45.842-45.842-45.842-45.842-118.174 0-72.333 45.842-118.29 45.841-45.957 118.174-45.957t118.572 45.957q46.239 45.957 46.239 118.29 0 72.332-46.239 118.174-46.239 45.842-118.572 45.842ZM145.869-138.521v-109.145q0-41.678 21.164-72.191 21.164-30.512 54.749-46.361 68.131-30.565 131.303-45.848 63.173-15.282 126.763-15.282 64.674 0 127.239 15.782 62.565 15.783 130.131 45.348 34.736 15.107 56.107 45.793 21.371 30.686 21.371 72.612v109.292H145.869Z\"\n  })));\n}\nexport default __webpack_public_path__ + \"media/outlined/person-fill-27d3fad5.svg\";\nexport { SvgPersonFill as ReactComponent };","var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgPersonAddFill(_ref) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 48,\n    height: 48,\n    viewBox: \"0 -960 960 960\",\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M737.913-418.088v-126.608H611.305v-66.783h126.608v-126.609h66.783v126.609h126.609v66.783H804.696v126.608h-66.783Zm-376.898-70.26q-72.332 0-118.174-45.842-45.842-45.842-45.842-118.174 0-72.333 45.842-118.29 45.842-45.957 118.174-45.957 72.333 0 118.573 45.957 46.239 45.957 46.239 118.29 0 72.332-46.239 118.174-46.24 45.842-118.573 45.842ZM26.999-138.521v-109.261q0-39.128 19.872-70.622 19.871-31.494 56.042-47.814 76.13-33.565 136.02-47.348 59.89-13.782 121.915-13.782 63.109 0 122.804 13.782 59.696 13.783 135.261 47.348 36.171 16.672 56.543 47.654 20.371 30.981 20.371 70.653v109.39H26.999Z\"\n  })));\n}\nexport default __webpack_public_path__ + \"media/outlined/person_add-fill-cabbf3e3.svg\";\nexport { SvgPersonAddFill as ReactComponent };","import PropTypes from 'prop-types';\n\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport { Link } from 'react-router-dom';\n\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\n\nimport { ReactComponent as CheckIcon } from '@material-symbols/svg-600/outlined/check.svg';\nimport { ReactComponent as CloseIcon } from '@material-symbols/svg-600/outlined/close.svg';\n\nimport { Avatar } from 'mastodon/components/avatar';\nimport { DisplayName } from 'mastodon/components/display_name';\nimport { IconButton } from 'mastodon/components/icon_button';\n\nconst messages = defineMessages({\n  authorize: { id: 'follow_request.authorize', defaultMessage: 'Authorize' },\n  reject: { id: 'follow_request.reject', defaultMessage: 'Reject' },\n});\n\nclass FollowRequest extends ImmutablePureComponent {\n\n  static propTypes = {\n    account: ImmutablePropTypes.record.isRequired,\n    onAuthorize: PropTypes.func.isRequired,\n    onReject: PropTypes.func.isRequired,\n    intl: PropTypes.object.isRequired,\n  };\n\n  render () {\n    const { intl, hidden, account, onAuthorize, onReject } = this.props;\n\n    if (!account) {\n      return <div />;\n    }\n\n    if (hidden) {\n      return (\n        <>\n          {account.get('display_name')}\n          {account.get('username')}\n        </>\n      );\n    }\n\n    return (\n      <div className='account'>\n        <div className='account__wrapper'>\n          <Link key={account.get('id')} className='account__display-name' title={account.get('acct')} to={`/@${account.get('acct')}`}>\n            <div className='account__avatar-wrapper'><Avatar account={account} size={36} /></div>\n            <DisplayName account={account} />\n          </Link>\n\n          <div className='account__relationship'>\n            <IconButton title={intl.formatMessage(messages.authorize)} icon='check' iconComponent={CheckIcon} onClick={onAuthorize} />\n            <IconButton title={intl.formatMessage(messages.reject)} icon='times' iconComponent={CloseIcon} onClick={onReject} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n}\n\nexport default injectIntl(FollowRequest);\n","import { connect } from 'react-redux';\n\nimport { authorizeFollowRequest, rejectFollowRequest } from 'mastodon/actions/accounts';\nimport { makeGetAccount } from 'mastodon/selectors';\n\nimport FollowRequest from '../components/follow_request';\n\nconst makeMapStateToProps = () => {\n  const getAccount = makeGetAccount();\n\n  const mapStateToProps = (state, props) => ({\n    account: getAccount(state, props.id),\n  });\n\n  return mapStateToProps;\n};\n\nconst mapDispatchToProps = (dispatch, { id }) => ({\n  onAuthorize () {\n    dispatch(authorizeFollowRequest(id));\n  },\n\n  onReject () {\n    dispatch(rejectFollowRequest(id));\n  },\n});\n\nexport default connect(makeMapStateToProps, mapDispatchToProps)(FollowRequest);\n","import PropTypes from 'prop-types';\n\nimport { defineMessages, FormattedMessage, injectIntl } from 'react-intl';\n\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\n\nimport { AvatarOverlay } from 'mastodon/components/avatar_overlay';\nimport { RelativeTimestamp } from 'mastodon/components/relative_timestamp';\n\n// This needs to be kept in sync with app/models/report.rb\nconst messages = defineMessages({\n  openReport: { id: 'report_notification.open', defaultMessage: 'Open report' },\n  other: { id: 'report_notification.categories.other', defaultMessage: 'Other' },\n  spam: { id: 'report_notification.categories.spam', defaultMessage: 'Spam' },\n  legal: { id: 'report_notification.categories.legal', defaultMessage: 'Legal' },\n  violation: { id: 'report_notification.categories.violation', defaultMessage: 'Rule violation' },\n});\n\nclass Report extends ImmutablePureComponent {\n\n  static propTypes = {\n    account: ImmutablePropTypes.record.isRequired,\n    report: ImmutablePropTypes.map.isRequired,\n    hidden: PropTypes.bool,\n    intl: PropTypes.object.isRequired,\n  };\n\n  render () {\n    const { intl, hidden, report, account } = this.props;\n\n    if (!report) {\n      return null;\n    }\n\n    if (hidden) {\n      return (\n        <>\n          {report.get('id')}\n        </>\n      );\n    }\n\n    return (\n      <div className='notification__report'>\n        <div className='notification__report__avatar'>\n          <AvatarOverlay account={report.get('target_account')} friend={account} />\n        </div>\n\n        <div className='notification__report__details'>\n          <div>\n            <RelativeTimestamp timestamp={report.get('created_at')} short={false} /> · <FormattedMessage id='report_notification.attached_statuses' defaultMessage='{count, plural, one {# post} other {# posts}} attached' values={{ count: report.get('status_ids').size }} />\n            <br />\n            <strong>{intl.formatMessage(messages[report.get('category')])}</strong>\n          </div>\n\n          <div className='notification__report__actions'>\n            <a href={`/admin/reports/${report.get('id')}`} className='button' target='_blank' rel='noopener noreferrer'>{intl.formatMessage(messages.openReport)}</a>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n}\n\nexport default injectIntl(Report);\n","import PropTypes from 'prop-types';\n\nimport { injectIntl, FormattedMessage, defineMessages } from 'react-intl';\n\nimport classNames from 'classnames';\nimport { Link, withRouter } from 'react-router-dom';\n\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\n\nimport { ReactComponent as EditIcon } from '@material-symbols/svg-600/outlined/edit.svg';\nimport { ReactComponent as FlagIcon } from '@material-symbols/svg-600/outlined/flag-fill.svg';\nimport { ReactComponent as HomeIcon } from '@material-symbols/svg-600/outlined/home-fill.svg';\nimport { ReactComponent as InsertChartIcon } from '@material-symbols/svg-600/outlined/insert_chart.svg';\nimport { ReactComponent as PersonIcon } from '@material-symbols/svg-600/outlined/person-fill.svg';\nimport { ReactComponent as PersonAddIcon } from '@material-symbols/svg-600/outlined/person_add-fill.svg';\nimport { ReactComponent as RepeatIcon } from '@material-symbols/svg-600/outlined/repeat.svg';\nimport { ReactComponent as StarIcon } from '@material-symbols/svg-600/outlined/star-fill.svg';\nimport { HotKeys } from 'react-hotkeys';\n\nimport { Icon }  from 'mastodon/components/icon';\nimport AccountContainer from 'mastodon/containers/account_container';\nimport StatusContainer from 'mastodon/containers/status_container';\nimport { me } from 'mastodon/initial_state';\nimport { WithRouterPropTypes } from 'mastodon/utils/react_router';\n\nimport FollowRequestContainer from '../containers/follow_request_container';\n\nimport Report from './report';\n\nconst messages = defineMessages({\n  favourite: { id: 'notification.favourite', defaultMessage: '{name} favorited your status' },\n  follow: { id: 'notification.follow', defaultMessage: '{name} followed you' },\n  ownPoll: { id: 'notification.own_poll', defaultMessage: 'Your poll has ended' },\n  poll: { id: 'notification.poll', defaultMessage: 'A poll you have voted in has ended' },\n  reblog: { id: 'notification.reblog', defaultMessage: '{name} boosted your status' },\n  status: { id: 'notification.status', defaultMessage: '{name} just posted' },\n  update: { id: 'notification.update', defaultMessage: '{name} edited a post' },\n  adminSignUp: { id: 'notification.admin.sign_up', defaultMessage: '{name} signed up' },\n  adminReport: { id: 'notification.admin.report', defaultMessage: '{name} reported {target}' },\n});\n\nconst notificationForScreenReader = (intl, message, timestamp) => {\n  const output = [message];\n\n  output.push(intl.formatDate(timestamp, { hour: '2-digit', minute: '2-digit', month: 'short', day: 'numeric' }));\n\n  return output.join(', ');\n};\n\nclass Notification extends ImmutablePureComponent {\n  static propTypes = {\n    notification: ImmutablePropTypes.map.isRequired,\n    hidden: PropTypes.bool,\n    onMoveUp: PropTypes.func.isRequired,\n    onMoveDown: PropTypes.func.isRequired,\n    onMention: PropTypes.func.isRequired,\n    onFavourite: PropTypes.func.isRequired,\n    onReblog: PropTypes.func.isRequired,\n    onToggleHidden: PropTypes.func.isRequired,\n    status: ImmutablePropTypes.map,\n    intl: PropTypes.object.isRequired,\n    getScrollPosition: PropTypes.func,\n    updateScrollBottom: PropTypes.func,\n    cacheMediaWidth: PropTypes.func,\n    cachedMediaWidth: PropTypes.number,\n    unread: PropTypes.bool,\n    ...WithRouterPropTypes,\n  };\n\n  handleMoveUp = () => {\n    const { notification, onMoveUp } = this.props;\n    onMoveUp(notification.get('id'));\n  };\n\n  handleMoveDown = () => {\n    const { notification, onMoveDown } = this.props;\n    onMoveDown(notification.get('id'));\n  };\n\n  handleOpen = () => {\n    const { notification } = this.props;\n\n    if (notification.get('status')) {\n      this.props.history.push(`/@${notification.getIn(['status', 'account', 'acct'])}/${notification.get('status')}`);\n    } else {\n      this.handleOpenProfile();\n    }\n  };\n\n  handleOpenProfile = () => {\n    const { notification } = this.props;\n    this.props.history.push(`/@${notification.getIn(['account', 'acct'])}`);\n  };\n\n  handleMention = e => {\n    e.preventDefault();\n\n    const { notification, onMention } = this.props;\n    onMention(notification.get('account'), this.props.history);\n  };\n\n  handleHotkeyFavourite = () => {\n    const { status } = this.props;\n    if (status) this.props.onFavourite(status);\n  };\n\n  handleHotkeyBoost = e => {\n    const { status } = this.props;\n    if (status) this.props.onReblog(status, e);\n  };\n\n  handleHotkeyToggleHidden = () => {\n    const { status } = this.props;\n    if (status) this.props.onToggleHidden(status);\n  };\n\n  getHandlers () {\n    return {\n      reply: this.handleMention,\n      favourite: this.handleHotkeyFavourite,\n      boost: this.handleHotkeyBoost,\n      mention: this.handleMention,\n      open: this.handleOpen,\n      openProfile: this.handleOpenProfile,\n      moveUp: this.handleMoveUp,\n      moveDown: this.handleMoveDown,\n      toggleHidden: this.handleHotkeyToggleHidden,\n    };\n  }\n\n  renderFollow (notification, account, link) {\n    const { intl, unread } = this.props;\n\n    return (\n      <HotKeys handlers={this.getHandlers()}>\n        <div className={classNames('notification notification-follow focusable', { unread })} tabIndex={0} aria-label={notificationForScreenReader(intl, intl.formatMessage(messages.follow, { name: account.get('acct') }), notification.get('created_at'))}>\n          <div className='notification__message'>\n            <Icon id='user-plus' icon={PersonAddIcon} />\n\n            <span title={notification.get('created_at')}>\n              <FormattedMessage id='notification.follow' defaultMessage='{name} followed you' values={{ name: link }} />\n            </span>\n          </div>\n\n          <AccountContainer id={account.get('id')} hidden={this.props.hidden} />\n        </div>\n      </HotKeys>\n    );\n  }\n\n  renderFollowRequest (notification, account, link) {\n    const { intl, unread } = this.props;\n\n    return (\n      <HotKeys handlers={this.getHandlers()}>\n        <div className={classNames('notification notification-follow-request focusable', { unread })} tabIndex={0} aria-label={notificationForScreenReader(intl, intl.formatMessage({ id: 'notification.follow_request', defaultMessage: '{name} has requested to follow you' }, { name: account.get('acct') }), notification.get('created_at'))}>\n          <div className='notification__message'>\n            <Icon id='user' icon={PersonIcon} />\n\n            <span title={notification.get('created_at')}>\n              <FormattedMessage id='notification.follow_request' defaultMessage='{name} has requested to follow you' values={{ name: link }} />\n            </span>\n          </div>\n\n          <FollowRequestContainer id={account.get('id')} withNote={false} hidden={this.props.hidden} />\n        </div>\n      </HotKeys>\n    );\n  }\n\n  renderMention (notification) {\n    return (\n      <StatusContainer\n        id={notification.get('status')}\n        withDismiss\n        hidden={this.props.hidden}\n        onMoveDown={this.handleMoveDown}\n        onMoveUp={this.handleMoveUp}\n        contextType='notifications'\n        getScrollPosition={this.props.getScrollPosition}\n        updateScrollBottom={this.props.updateScrollBottom}\n        cachedMediaWidth={this.props.cachedMediaWidth}\n        cacheMediaWidth={this.props.cacheMediaWidth}\n        unread={this.props.unread}\n      />\n    );\n  }\n\n  renderFavourite (notification, link) {\n    const { intl, unread } = this.props;\n\n    return (\n      <HotKeys handlers={this.getHandlers()}>\n        <div className={classNames('notification notification-favourite focusable', { unread })} tabIndex={0} aria-label={notificationForScreenReader(intl, intl.formatMessage(messages.favourite, { name: notification.getIn(['account', 'acct']) }), notification.get('created_at'))}>\n          <div className='notification__message'>\n            <Icon id='star' icon={StarIcon} className='star-icon' />\n\n            <span title={notification.get('created_at')}>\n              <FormattedMessage id='notification.favourite' defaultMessage='{name} favorited your status' values={{ name: link }} />\n            </span>\n          </div>\n\n          <StatusContainer\n            id={notification.get('status')}\n            account={notification.get('account')}\n            muted\n            withDismiss\n            hidden={!!this.props.hidden}\n            getScrollPosition={this.props.getScrollPosition}\n            updateScrollBottom={this.props.updateScrollBottom}\n            cachedMediaWidth={this.props.cachedMediaWidth}\n            cacheMediaWidth={this.props.cacheMediaWidth}\n          />\n        </div>\n      </HotKeys>\n    );\n  }\n\n  renderReblog (notification, link) {\n    const { intl, unread } = this.props;\n\n    return (\n      <HotKeys handlers={this.getHandlers()}>\n        <div className={classNames('notification notification-reblog focusable', { unread })} tabIndex={0} aria-label={notificationForScreenReader(intl, intl.formatMessage(messages.reblog, { name: notification.getIn(['account', 'acct']) }), notification.get('created_at'))}>\n          <div className='notification__message'>\n            <Icon id='retweet' icon={RepeatIcon} />\n\n            <span title={notification.get('created_at')}>\n              <FormattedMessage id='notification.reblog' defaultMessage='{name} boosted your status' values={{ name: link }} />\n            </span>\n          </div>\n\n          <StatusContainer\n            id={notification.get('status')}\n            account={notification.get('account')}\n            muted\n            withDismiss\n            hidden={this.props.hidden}\n            getScrollPosition={this.props.getScrollPosition}\n            updateScrollBottom={this.props.updateScrollBottom}\n            cachedMediaWidth={this.props.cachedMediaWidth}\n            cacheMediaWidth={this.props.cacheMediaWidth}\n          />\n        </div>\n      </HotKeys>\n    );\n  }\n\n  renderStatus (notification, link) {\n    const { intl, unread, status } = this.props;\n\n    if (!status) {\n      return null;\n    }\n\n    return (\n      <HotKeys handlers={this.getHandlers()}>\n        <div className={classNames('notification notification-status focusable', { unread })} tabIndex={0} aria-label={notificationForScreenReader(intl, intl.formatMessage(messages.status, { name: notification.getIn(['account', 'acct']) }), notification.get('created_at'))}>\n          <div className='notification__message'>\n            <Icon id='home' icon={HomeIcon} />\n\n            <span title={notification.get('created_at')}>\n              <FormattedMessage id='notification.status' defaultMessage='{name} just posted' values={{ name: link }} />\n            </span>\n          </div>\n\n          <StatusContainer\n            id={notification.get('status')}\n            account={notification.get('account')}\n            contextType='notifications'\n            muted\n            withDismiss\n            hidden={this.props.hidden}\n            getScrollPosition={this.props.getScrollPosition}\n            updateScrollBottom={this.props.updateScrollBottom}\n            cachedMediaWidth={this.props.cachedMediaWidth}\n            cacheMediaWidth={this.props.cacheMediaWidth}\n          />\n        </div>\n      </HotKeys>\n    );\n  }\n\n  renderUpdate (notification, link) {\n    const { intl, unread, status } = this.props;\n\n    if (!status) {\n      return null;\n    }\n\n    return (\n      <HotKeys handlers={this.getHandlers()}>\n        <div className={classNames('notification notification-update focusable', { unread })} tabIndex={0} aria-label={notificationForScreenReader(intl, intl.formatMessage(messages.update, { name: notification.getIn(['account', 'acct']) }), notification.get('created_at'))}>\n          <div className='notification__message'>\n            <Icon id='pencil' icon={EditIcon} />\n\n            <span title={notification.get('created_at')}>\n              <FormattedMessage id='notification.update' defaultMessage='{name} edited a post' values={{ name: link }} />\n            </span>\n          </div>\n\n          <StatusContainer\n            id={notification.get('status')}\n            account={notification.get('account')}\n            contextType='notifications'\n            muted\n            withDismiss\n            hidden={this.props.hidden}\n            getScrollPosition={this.props.getScrollPosition}\n            updateScrollBottom={this.props.updateScrollBottom}\n            cachedMediaWidth={this.props.cachedMediaWidth}\n            cacheMediaWidth={this.props.cacheMediaWidth}\n          />\n        </div>\n      </HotKeys>\n    );\n  }\n\n  renderPoll (notification, account) {\n    const { intl, unread, status } = this.props;\n    const ownPoll  = me === account.get('id');\n    const message  = ownPoll ? intl.formatMessage(messages.ownPoll) : intl.formatMessage(messages.poll);\n\n    if (!status) {\n      return null;\n    }\n\n    return (\n      <HotKeys handlers={this.getHandlers()}>\n        <div className={classNames('notification notification-poll focusable', { unread })} tabIndex={0} aria-label={notificationForScreenReader(intl, message, notification.get('created_at'))}>\n          <div className='notification__message'>\n            <Icon id='tasks' icon={InsertChartIcon} />\n\n            <span title={notification.get('created_at')}>\n              {ownPoll ? (\n                <FormattedMessage id='notification.own_poll' defaultMessage='Your poll has ended' />\n              ) : (\n                <FormattedMessage id='notification.poll' defaultMessage='A poll you have voted in has ended' />\n              )}\n            </span>\n          </div>\n\n          <StatusContainer\n            id={notification.get('status')}\n            account={account}\n            contextType='notifications'\n            muted\n            withDismiss\n            hidden={this.props.hidden}\n            getScrollPosition={this.props.getScrollPosition}\n            updateScrollBottom={this.props.updateScrollBottom}\n            cachedMediaWidth={this.props.cachedMediaWidth}\n            cacheMediaWidth={this.props.cacheMediaWidth}\n          />\n        </div>\n      </HotKeys>\n    );\n  }\n\n  renderAdminSignUp (notification, account, link) {\n    const { intl, unread } = this.props;\n\n    return (\n      <HotKeys handlers={this.getHandlers()}>\n        <div className={classNames('notification notification-admin-sign-up focusable', { unread })} tabIndex={0} aria-label={notificationForScreenReader(intl, intl.formatMessage(messages.adminSignUp, { name: account.get('acct') }), notification.get('created_at'))}>\n          <div className='notification__message'>\n            <Icon id='user-plus' icon={PersonAddIcon} />\n\n            <span title={notification.get('created_at')}>\n              <FormattedMessage id='notification.admin.sign_up' defaultMessage='{name} signed up' values={{ name: link }} />\n            </span>\n          </div>\n\n          <AccountContainer id={account.get('id')} hidden={this.props.hidden} />\n        </div>\n      </HotKeys>\n    );\n  }\n\n  renderAdminReport (notification, account, link) {\n    const { intl, unread, report } = this.props;\n\n    if (!report) {\n      return null;\n    }\n\n    const targetAccount = report.get('target_account');\n    const targetDisplayNameHtml = { __html: targetAccount.get('display_name_html') };\n    const targetLink = <bdi><Link className='notification__display-name' title={targetAccount.get('acct')} to={`/@${targetAccount.get('acct')}`} dangerouslySetInnerHTML={targetDisplayNameHtml} /></bdi>;\n\n    return (\n      <HotKeys handlers={this.getHandlers()}>\n        <div className={classNames('notification notification-admin-report focusable', { unread })} tabIndex={0} aria-label={notificationForScreenReader(intl, intl.formatMessage(messages.adminReport, { name: account.get('acct'), target: notification.getIn(['report', 'target_account', 'acct']) }), notification.get('created_at'))}>\n          <div className='notification__message'>\n            <Icon id='flag' icon={FlagIcon} />\n\n            <span title={notification.get('created_at')}>\n              <FormattedMessage id='notification.admin.report' defaultMessage='{name} reported {target}' values={{ name: link, target: targetLink }} />\n            </span>\n          </div>\n\n          <Report account={account} report={notification.get('report')} hidden={this.props.hidden} />\n        </div>\n      </HotKeys>\n    );\n  }\n\n  render () {\n    const { notification } = this.props;\n    const account          = notification.get('account');\n    const displayNameHtml  = { __html: account.get('display_name_html') };\n    const link             = <bdi><Link className='notification__display-name' href={`/@${account.get('acct')}`} title={account.get('acct')} to={`/@${account.get('acct')}`} dangerouslySetInnerHTML={displayNameHtml} /></bdi>;\n\n    switch(notification.get('type')) {\n    case 'follow':\n      return this.renderFollow(notification, account, link);\n    case 'follow_request':\n      return this.renderFollowRequest(notification, account, link);\n    case 'mention':\n      return this.renderMention(notification);\n    case 'favourite':\n      return this.renderFavourite(notification, link);\n    case 'reblog':\n      return this.renderReblog(notification, link);\n    case 'status':\n      return this.renderStatus(notification, link);\n    case 'update':\n      return this.renderUpdate(notification, link);\n    case 'poll':\n      return this.renderPoll(notification, account);\n    case 'admin.sign_up':\n      return this.renderAdminSignUp(notification, account, link);\n    case 'admin.report':\n      return this.renderAdminReport(notification, account, link);\n    }\n\n    return null;\n  }\n\n}\n\nexport default withRouter(injectIntl(Notification));\n","import { connect } from 'react-redux';\n\nimport { initBoostModal } from '../../../actions/boosts';\nimport { mentionCompose } from '../../../actions/compose';\nimport {\n  reblog,\n  favourite,\n  unreblog,\n  unfavourite,\n} from '../../../actions/interactions';\nimport {\n  hideStatus,\n  revealStatus,\n} from '../../../actions/statuses';\nimport { boostModal } from '../../../initial_state';\nimport { makeGetNotification, makeGetStatus, makeGetReport } from '../../../selectors';\nimport Notification from '../components/notification';\n\nconst makeMapStateToProps = () => {\n  const getNotification = makeGetNotification();\n  const getStatus = makeGetStatus();\n  const getReport = makeGetReport();\n\n  const mapStateToProps = (state, props) => {\n    const notification = getNotification(state, props.notification, props.accountId);\n    return {\n      notification: notification,\n      status: notification.get('status') ? getStatus(state, { id: notification.get('status'), contextType: 'notifications' }) : null,\n      report: notification.get('report') ? getReport(state, notification.get('report'), notification.getIn(['report', 'target_account', 'id'])) : null,\n    };\n  };\n\n  return mapStateToProps;\n};\n\nconst mapDispatchToProps = dispatch => ({\n  onMention: (account, router) => {\n    dispatch(mentionCompose(account, router));\n  },\n\n  onModalReblog (status, privacy) {\n    dispatch(reblog(status, privacy));\n  },\n\n  onReblog (status, e) {\n    if (status.get('reblogged')) {\n      dispatch(unreblog(status));\n    } else {\n      if (e.shiftKey || !boostModal) {\n        this.onModalReblog(status);\n      } else {\n        dispatch(initBoostModal({ status, onReblog: this.onModalReblog }));\n      }\n    }\n  },\n\n  onFavourite (status) {\n    if (status.get('favourited')) {\n      dispatch(unfavourite(status));\n    } else {\n      dispatch(favourite(status));\n    }\n  },\n\n  onToggleHidden (status) {\n    if (status.get('hidden')) {\n      dispatch(revealStatus(status.get('id')));\n    } else {\n      dispatch(hideStatus(status.get('id')));\n    }\n  },\n});\n\nexport default connect(makeMapStateToProps, mapDispatchToProps)(Notification);\n","import PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport { defineMessages, injectIntl, FormattedMessage } from 'react-intl';\n\nimport { Helmet } from 'react-helmet';\n\nimport { List as ImmutableList } from 'immutable';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport { connect } from 'react-redux';\nimport { createSelector } from 'reselect';\n\nimport { ReactComponent as DoneAllIcon } from '@material-symbols/svg-600/outlined/done_all.svg';\nimport { ReactComponent as NotificationsIcon } from '@material-symbols/svg-600/outlined/notifications-fill.svg';\nimport { debounce } from 'lodash';\n\nimport { compareId } from 'mastodon/compare_id';\nimport { Icon }  from 'mastodon/components/icon';\nimport { NotSignedInIndicator } from 'mastodon/components/not_signed_in_indicator';\n\nimport { addColumn, removeColumn, moveColumn } from '../../actions/columns';\nimport { submitMarkers } from '../../actions/markers';\nimport {\n  expandNotifications,\n  scrollTopNotifications,\n  loadPending,\n  mountNotifications,\n  unmountNotifications,\n  markNotificationsAsRead,\n} from '../../actions/notifications';\nimport Column from '../../components/column';\nimport ColumnHeader from '../../components/column_header';\nimport { LoadGap } from '../../components/load_gap';\nimport ScrollableList from '../../components/scrollable_list';\n\nimport NotificationsPermissionBanner from './components/notifications_permission_banner';\nimport ColumnSettingsContainer from './containers/column_settings_container';\nimport FilterBarContainer from './containers/filter_bar_container';\nimport NotificationContainer from './containers/notification_container';\n\nconst messages = defineMessages({\n  title: { id: 'column.notifications', defaultMessage: 'Notifications' },\n  markAsRead : { id: 'notifications.mark_as_read', defaultMessage: 'Mark every notification as read' },\n});\n\nconst getExcludedTypes = createSelector([\n  state => state.getIn(['settings', 'notifications', 'shows']),\n], (shows) => {\n  return ImmutableList(shows.filter(item => !item).keys());\n});\n\nconst getNotifications = createSelector([\n  state => state.getIn(['settings', 'notifications', 'quickFilter', 'show']),\n  state => state.getIn(['settings', 'notifications', 'quickFilter', 'active']),\n  getExcludedTypes,\n  state => state.getIn(['notifications', 'items']),\n], (showFilterBar, allowedType, excludedTypes, notifications) => {\n  if (!showFilterBar || allowedType === 'all') {\n    // used if user changed the notification settings after loading the notifications from the server\n    // otherwise a list of notifications will come pre-filtered from the backend\n    // we need to turn it off for FilterBar in order not to block ourselves from seeing a specific category\n    return notifications.filterNot(item => item !== null && excludedTypes.includes(item.get('type')));\n  }\n  return notifications.filter(item => item === null || allowedType === item.get('type'));\n});\n\nconst mapStateToProps = state => ({\n  showFilterBar: state.getIn(['settings', 'notifications', 'quickFilter', 'show']),\n  notifications: getNotifications(state),\n  isLoading: state.getIn(['notifications', 'isLoading'], 0) > 0,\n  isUnread: state.getIn(['notifications', 'unread']) > 0 || state.getIn(['notifications', 'pendingItems']).size > 0,\n  hasMore: state.getIn(['notifications', 'hasMore']),\n  numPending: state.getIn(['notifications', 'pendingItems'], ImmutableList()).size,\n  lastReadId: state.getIn(['settings', 'notifications', 'showUnread']) ? state.getIn(['notifications', 'readMarkerId']) : '0',\n  canMarkAsRead: state.getIn(['settings', 'notifications', 'showUnread']) && state.getIn(['notifications', 'readMarkerId']) !== '0' && getNotifications(state).some(item => item !== null && compareId(item.get('id'), state.getIn(['notifications', 'readMarkerId'])) > 0),\n  needsNotificationPermission: state.getIn(['settings', 'notifications', 'alerts']).includes(true) && state.getIn(['notifications', 'browserSupport']) && state.getIn(['notifications', 'browserPermission']) === 'default' && !state.getIn(['settings', 'notifications', 'dismissPermissionBanner']),\n});\n\nclass Notifications extends PureComponent {\n\n  static contextTypes = {\n    identity: PropTypes.object,\n  };\n\n  static propTypes = {\n    columnId: PropTypes.string,\n    notifications: ImmutablePropTypes.list.isRequired,\n    showFilterBar: PropTypes.bool.isRequired,\n    dispatch: PropTypes.func.isRequired,\n    intl: PropTypes.object.isRequired,\n    isLoading: PropTypes.bool,\n    isUnread: PropTypes.bool,\n    multiColumn: PropTypes.bool,\n    hasMore: PropTypes.bool,\n    numPending: PropTypes.number,\n    lastReadId: PropTypes.string,\n    canMarkAsRead: PropTypes.bool,\n    needsNotificationPermission: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    trackScroll: true,\n  };\n\n  UNSAFE_componentWillMount() {\n    this.props.dispatch(mountNotifications());\n  }\n\n  componentWillUnmount () {\n    this.handleLoadOlder.cancel();\n    this.handleScrollToTop.cancel();\n    this.handleScroll.cancel();\n    this.props.dispatch(scrollTopNotifications(false));\n    this.props.dispatch(unmountNotifications());\n  }\n\n  handleLoadGap = (maxId) => {\n    this.props.dispatch(expandNotifications({ maxId }));\n  };\n\n  handleLoadOlder = debounce(() => {\n    const last = this.props.notifications.last();\n    this.props.dispatch(expandNotifications({ maxId: last && last.get('id') }));\n  }, 300, { leading: true });\n\n  handleLoadPending = () => {\n    this.props.dispatch(loadPending());\n  };\n\n  handleScrollToTop = debounce(() => {\n    this.props.dispatch(scrollTopNotifications(true));\n  }, 100);\n\n  handleScroll = debounce(() => {\n    this.props.dispatch(scrollTopNotifications(false));\n  }, 100);\n\n  handlePin = () => {\n    const { columnId, dispatch } = this.props;\n\n    if (columnId) {\n      dispatch(removeColumn(columnId));\n    } else {\n      dispatch(addColumn('NOTIFICATIONS', {}));\n    }\n  };\n\n  handleMove = (dir) => {\n    const { columnId, dispatch } = this.props;\n    dispatch(moveColumn(columnId, dir));\n  };\n\n  handleHeaderClick = () => {\n    this.column.scrollTop();\n  };\n\n  setColumnRef = c => {\n    this.column = c;\n  };\n\n  handleMoveUp = id => {\n    const elementIndex = this.props.notifications.findIndex(item => item !== null && item.get('id') === id) - 1;\n    this._selectChild(elementIndex, true);\n  };\n\n  handleMoveDown = id => {\n    const elementIndex = this.props.notifications.findIndex(item => item !== null && item.get('id') === id) + 1;\n    this._selectChild(elementIndex, false);\n  };\n\n  _selectChild (index, align_top) {\n    const container = this.column.node;\n    const element = container.querySelector(`article:nth-of-type(${index + 1}) .focusable`);\n\n    if (element) {\n      if (align_top && container.scrollTop > element.offsetTop) {\n        element.scrollIntoView(true);\n      } else if (!align_top && container.scrollTop + container.clientHeight < element.offsetTop + element.offsetHeight) {\n        element.scrollIntoView(false);\n      }\n      element.focus();\n    }\n  }\n\n  handleMarkAsRead = () => {\n    this.props.dispatch(markNotificationsAsRead());\n    this.props.dispatch(submitMarkers({ immediate: true }));\n  };\n\n  render () {\n    const { intl, notifications, isLoading, isUnread, columnId, multiColumn, hasMore, numPending, showFilterBar, lastReadId, canMarkAsRead, needsNotificationPermission } = this.props;\n    const pinned = !!columnId;\n    const emptyMessage = <FormattedMessage id='empty_column.notifications' defaultMessage=\"You don't have any notifications yet. When other people interact with you, you will see it here.\" />;\n    const { signedIn } = this.context.identity;\n\n    let scrollableContent = null;\n\n    const filterBarContainer = (signedIn && showFilterBar)\n      ? (<FilterBarContainer />)\n      : null;\n\n    if (isLoading && this.scrollableContent) {\n      scrollableContent = this.scrollableContent;\n    } else if (notifications.size > 0 || hasMore) {\n      scrollableContent = notifications.map((item, index) => item === null ? (\n        <LoadGap\n          key={'gap:' + notifications.getIn([index + 1, 'id'])}\n          disabled={isLoading}\n          maxId={index > 0 ? notifications.getIn([index - 1, 'id']) : null}\n          onClick={this.handleLoadGap}\n        />\n      ) : (\n        <NotificationContainer\n          key={item.get('id')}\n          notification={item}\n          accountId={item.get('account')}\n          onMoveUp={this.handleMoveUp}\n          onMoveDown={this.handleMoveDown}\n          unread={lastReadId !== '0' && compareId(item.get('id'), lastReadId) > 0}\n        />\n      ));\n    } else {\n      scrollableContent = null;\n    }\n\n    this.scrollableContent = scrollableContent;\n\n    let scrollContainer;\n\n    if (signedIn) {\n      scrollContainer = (\n        <ScrollableList\n          scrollKey={`notifications-${columnId}`}\n          trackScroll={!pinned}\n          isLoading={isLoading}\n          showLoading={isLoading && notifications.size === 0}\n          hasMore={hasMore}\n          numPending={numPending}\n          prepend={needsNotificationPermission && <NotificationsPermissionBanner />}\n          alwaysPrepend\n          emptyMessage={emptyMessage}\n          onLoadMore={this.handleLoadOlder}\n          onLoadPending={this.handleLoadPending}\n          onScrollToTop={this.handleScrollToTop}\n          onScroll={this.handleScroll}\n          bindToDocument={!multiColumn}\n        >\n          {scrollableContent}\n        </ScrollableList>\n      );\n    } else {\n      scrollContainer = <NotSignedInIndicator />;\n    }\n\n    let extraButton = null;\n\n    if (canMarkAsRead) {\n      extraButton = (\n        <button\n          aria-label={intl.formatMessage(messages.markAsRead)}\n          title={intl.formatMessage(messages.markAsRead)}\n          onClick={this.handleMarkAsRead}\n          className='column-header__button'\n        >\n          <Icon id='done-all' icon={DoneAllIcon} />\n        </button>\n      );\n    }\n\n    return (\n      <Column bindToDocument={!multiColumn} ref={this.setColumnRef} label={intl.formatMessage(messages.title)}>\n        <ColumnHeader\n          icon='bell'\n          iconComponent={NotificationsIcon}\n          active={isUnread}\n          title={intl.formatMessage(messages.title)}\n          onPin={this.handlePin}\n          onMove={this.handleMove}\n          onClick={this.handleHeaderClick}\n          pinned={pinned}\n          multiColumn={multiColumn}\n          extraButton={extraButton}\n        >\n          <ColumnSettingsContainer />\n        </ColumnHeader>\n\n        {filterBarContainer}\n        {scrollContainer}\n\n        <Helmet>\n          <title>{intl.formatMessage(messages.title)}</title>\n          <meta name='robots' content='noindex' />\n        </Helmet>\n      </Column>\n    );\n  }\n\n}\n\nexport default connect(mapStateToProps)(injectIntl(Notifications));\n"],"sourceRoot":""}