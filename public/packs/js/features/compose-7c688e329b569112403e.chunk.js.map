{"version":3,"sources":["webpack:///./node_modules/@material-symbols/svg-600/outlined/logout.svg","webpack:///./app/javascript/mastodon/features/compose/components/search_results.jsx","webpack:///./app/javascript/mastodon/features/compose/containers/search_results_container.js","webpack:///./app/javascript/mastodon/features/compose/index.jsx"],"names":["_path","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","SvgLogout","_ref","title","titleId","props","xmlns","width","height","viewBox","id","d","INITIAL_PAGE_LIMIT","withoutLastResult","list","size","skipLast","SearchResults","ImmutablePureComponent","constructor","handleLoadMoreAccounts","expandSearch","handleLoadMoreStatuses","handleLoadMoreHashtags","render","results","accounts","statuses","hashtags","get","_jsx","SearchSection","_jsxs","_Fragment","children","Icon","icon","PeopleIcon","FormattedMessage","defaultMessage","map","accountId","AccountContainer","LoadMore","visible","onClick","TagIcon","hashtag","Hashtag","FindInPageIcon","statusId","StatusContainer","className","SearchIcon","propTypes","ImmutablePropTypes","isRequired","PropTypes","func","searchTerm","string","connect","state","getIn","suggestions","dispatch","fetchSuggestions","type","dismissSuggestion","account","messages","defineMessages","start","home_timeline","notifications","public","community","preferences","logout","compose","logoutMessage","logoutConfirm","Compose","PureComponent","handleLogoutClick","e","intl","preventDefault","stopPropagation","openModal","modalType","modalProps","message","formatMessage","confirm","closeWhenConfirm","onConfirm","logOut","onFocus","changeComposing","onBlur","componentDidMount","mountCompose","componentWillUnmount","unmountCompose","multiColumn","showSearch","columns","role","Link","to","MenuIcon","some","column","HomeIcon","NotificationsIcon","PublicIcon","href","SettingsIcon","LogoutIcon","SearchContainer","NavigationContainer","onClose","ComposeFormContainer","autoFocus","isMobile","window","innerWidth","alt","draggable","src","mascot","elephantUIPlane","Motion","defaultStyle","x","style","spring","stiffness","damping","transform","visibility","SearchResultsContainer","Column","Helmet","name","content","mapStateToProps","ownProps","injectIntl"],"mappings":"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","file":"js/features/compose-7c688e329b569112403e.chunk.js","sourcesContent":["var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgLogout(_ref) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 48,\n    height: 48,\n    viewBox: \"0 -960 960 960\",\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M185.087-105.869q-32.507 0-55.862-23.356-23.356-23.355-23.356-55.862v-589.826q0-32.74 23.356-56.262 23.355-23.521 55.862-23.521h297.304v79.783H185.087v589.826h297.304v79.218H185.087Zm475.261-178.782-56.566-56.001 99.173-99.739H356.609v-79.218h344.346l-99.173-99.739 56.566-56.001L854.696-479 660.348-284.651Z\"\n  })));\n}\nexport default __webpack_public_path__ + \"media/outlined/logout-541d9b35.svg\";\nexport { SvgLogout as ReactComponent };","import PropTypes from 'prop-types';\n\nimport { FormattedMessage } from 'react-intl';\n\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\n\nimport { ReactComponent as FindInPageIcon } from '@material-symbols/svg-600/outlined/find_in_page.svg';\nimport { ReactComponent as PeopleIcon } from '@material-symbols/svg-600/outlined/group.svg';\nimport { ReactComponent as SearchIcon } from '@material-symbols/svg-600/outlined/search.svg';\nimport { ReactComponent as TagIcon } from '@material-symbols/svg-600/outlined/tag.svg';\n\nimport { Icon }  from 'mastodon/components/icon';\nimport { LoadMore } from 'mastodon/components/load_more';\nimport { SearchSection } from 'mastodon/features/explore/components/search_section';\n\nimport { ImmutableHashtag as Hashtag } from '../../../components/hashtag';\nimport AccountContainer from '../../../containers/account_container';\nimport StatusContainer from '../../../containers/status_container';\n\nconst INITIAL_PAGE_LIMIT = 10;\n\nconst withoutLastResult = list => {\n  if (list.size > INITIAL_PAGE_LIMIT && list.size % INITIAL_PAGE_LIMIT === 1) {\n    return list.skipLast(1);\n  } else {\n    return list;\n  }\n};\n\nclass SearchResults extends ImmutablePureComponent {\n\n  static propTypes = {\n    results: ImmutablePropTypes.map.isRequired,\n    expandSearch: PropTypes.func.isRequired,\n    searchTerm: PropTypes.string,\n  };\n\n  handleLoadMoreAccounts = () => this.props.expandSearch('accounts');\n\n  handleLoadMoreStatuses = () => this.props.expandSearch('statuses');\n\n  handleLoadMoreHashtags = () => this.props.expandSearch('hashtags');\n\n  render () {\n    const { results } = this.props;\n\n    let accounts, statuses, hashtags;\n\n    if (results.get('accounts') && results.get('accounts').size > 0) {\n      accounts = (\n        <SearchSection title={<><Icon id='users' icon={PeopleIcon} /><FormattedMessage id='search_results.accounts' defaultMessage='Profiles' /></>}>\n          {withoutLastResult(results.get('accounts')).map(accountId => <AccountContainer key={accountId} id={accountId} />)}\n          {(results.get('accounts').size > INITIAL_PAGE_LIMIT && results.get('accounts').size % INITIAL_PAGE_LIMIT === 1) && <LoadMore visible onClick={this.handleLoadMoreAccounts} />}\n        </SearchSection>\n      );\n    }\n\n    if (results.get('hashtags') && results.get('hashtags').size > 0) {\n      hashtags = (\n        <SearchSection title={<><Icon id='hashtag' icon={TagIcon} /><FormattedMessage id='search_results.hashtags' defaultMessage='Hashtags' /></>}>\n          {withoutLastResult(results.get('hashtags')).map(hashtag => <Hashtag key={hashtag.get('name')} hashtag={hashtag} />)}\n          {(results.get('hashtags').size > INITIAL_PAGE_LIMIT && results.get('hashtags').size % INITIAL_PAGE_LIMIT === 1) && <LoadMore visible onClick={this.handleLoadMoreHashtags} />}\n        </SearchSection>\n      );\n    }\n\n    if (results.get('statuses') && results.get('statuses').size > 0) {\n      statuses = (\n        <SearchSection title={<><Icon id='quote-right' icon={FindInPageIcon} /><FormattedMessage id='search_results.statuses' defaultMessage='Posts' /></>}>\n          {withoutLastResult(results.get('statuses')).map(statusId => <StatusContainer key={statusId} id={statusId} />)}\n          {(results.get('statuses').size > INITIAL_PAGE_LIMIT && results.get('statuses').size % INITIAL_PAGE_LIMIT === 1) && <LoadMore visible onClick={this.handleLoadMoreStatuses} />}\n        </SearchSection>\n      );\n    }\n\n\n    return (\n      <div className='search-results'>\n        <div className='search-results__header'>\n          <Icon id='search' icon={SearchIcon} />\n          <FormattedMessage id='explore.search_results' defaultMessage='Search results' />\n        </div>\n\n        {accounts}\n        {hashtags}\n        {statuses}\n      </div>\n    );\n  }\n\n}\n\nexport default SearchResults;\n","import { connect } from 'react-redux';\n\nimport { expandSearch } from 'mastodon/actions/search';\nimport { fetchSuggestions, dismissSuggestion } from 'mastodon/actions/suggestions';\n\nimport SearchResults from '../components/search_results';\n\nconst mapStateToProps = state => ({\n  results: state.getIn(['search', 'results']),\n  suggestions: state.getIn(['suggestions', 'items']),\n  searchTerm: state.getIn(['search', 'searchTerm']),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchSuggestions: () => dispatch(fetchSuggestions()),\n  expandSearch: type => dispatch(expandSearch(type)),\n  dismissSuggestion: account => dispatch(dismissSuggestion(account.get('id'))),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchResults);\n","import PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport { injectIntl, defineMessages } from 'react-intl';\n\nimport { Helmet } from 'react-helmet';\nimport { Link } from 'react-router-dom';\n\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport { connect } from 'react-redux';\n\nimport { ReactComponent as PeopleIcon } from '@material-symbols/svg-600/outlined/group.svg';\nimport { ReactComponent as HomeIcon } from '@material-symbols/svg-600/outlined/home-fill.svg';\nimport { ReactComponent as LogoutIcon } from '@material-symbols/svg-600/outlined/logout.svg';\nimport { ReactComponent as MenuIcon } from '@material-symbols/svg-600/outlined/menu.svg';\nimport { ReactComponent as NotificationsIcon } from '@material-symbols/svg-600/outlined/notifications-fill.svg';\nimport { ReactComponent as PublicIcon } from '@material-symbols/svg-600/outlined/public.svg';\nimport { ReactComponent as SettingsIcon } from '@material-symbols/svg-600/outlined/settings-fill.svg';\nimport spring from 'react-motion/lib/spring';\n\nimport { openModal } from 'mastodon/actions/modal';\nimport Column from 'mastodon/components/column';\nimport { Icon }  from 'mastodon/components/icon';\nimport { logOut } from 'mastodon/utils/log_out';\n\nimport elephantUIPlane from '../../../images/elephant_ui_plane.svg';\nimport { changeComposing, mountCompose, unmountCompose } from '../../actions/compose';\nimport { mascot } from '../../initial_state';\nimport { isMobile } from '../../is_mobile';\nimport Motion from '../ui/util/optional_motion';\n\nimport ComposeFormContainer from './containers/compose_form_container';\nimport NavigationContainer from './containers/navigation_container';\nimport SearchContainer from './containers/search_container';\nimport SearchResultsContainer from './containers/search_results_container';\n\nconst messages = defineMessages({\n  start: { id: 'getting_started.heading', defaultMessage: 'Getting started' },\n  home_timeline: { id: 'tabs_bar.home', defaultMessage: 'Home' },\n  notifications: { id: 'tabs_bar.notifications', defaultMessage: 'Notifications' },\n  public: { id: 'navigation_bar.public_timeline', defaultMessage: 'Federated timeline' },\n  community: { id: 'navigation_bar.community_timeline', defaultMessage: 'Local timeline' },\n  preferences: { id: 'navigation_bar.preferences', defaultMessage: 'Preferences' },\n  logout: { id: 'navigation_bar.logout', defaultMessage: 'Logout' },\n  compose: { id: 'navigation_bar.compose', defaultMessage: 'Compose new post' },\n  logoutMessage: { id: 'confirmations.logout.message', defaultMessage: 'Are you sure you want to log out?' },\n  logoutConfirm: { id: 'confirmations.logout.confirm', defaultMessage: 'Log out' },\n});\n\nconst mapStateToProps = (state, ownProps) => ({\n  columns: state.getIn(['settings', 'columns']),\n  showSearch: ownProps.multiColumn ? state.getIn(['search', 'submitted']) && !state.getIn(['search', 'hidden']) : false,\n});\n\nclass Compose extends PureComponent {\n\n  static propTypes = {\n    dispatch: PropTypes.func.isRequired,\n    columns: ImmutablePropTypes.list.isRequired,\n    multiColumn: PropTypes.bool,\n    showSearch: PropTypes.bool,\n    intl: PropTypes.object.isRequired,\n  };\n\n  componentDidMount () {\n    const { dispatch } = this.props;\n    dispatch(mountCompose());\n  }\n\n  componentWillUnmount () {\n    const { dispatch } = this.props;\n    dispatch(unmountCompose());\n  }\n\n  handleLogoutClick = e => {\n    const { dispatch, intl } = this.props;\n\n    e.preventDefault();\n    e.stopPropagation();\n\n    dispatch(openModal({\n      modalType: 'CONFIRM',\n      modalProps: {\n        message: intl.formatMessage(messages.logoutMessage),\n        confirm: intl.formatMessage(messages.logoutConfirm),\n        closeWhenConfirm: false,\n        onConfirm: () => logOut(),\n      },\n    }));\n\n    return false;\n  };\n\n  onFocus = () => {\n    this.props.dispatch(changeComposing(true));\n  };\n\n  onBlur = () => {\n    this.props.dispatch(changeComposing(false));\n  };\n\n  render () {\n    const { multiColumn, showSearch, intl } = this.props;\n\n    if (multiColumn) {\n      const { columns } = this.props;\n\n      return (\n        <div className='drawer' role='region' aria-label={intl.formatMessage(messages.compose)}>\n          <nav className='drawer__header'>\n            <Link to='/getting-started' className='drawer__tab' title={intl.formatMessage(messages.start)} aria-label={intl.formatMessage(messages.start)}><Icon id='bars' icon={MenuIcon} /></Link>\n            {!columns.some(column => column.get('id') === 'HOME') && (\n              <Link to='/home' className='drawer__tab' title={intl.formatMessage(messages.home_timeline)} aria-label={intl.formatMessage(messages.home_timeline)}><Icon id='home' icon={HomeIcon} /></Link>\n            )}\n            {!columns.some(column => column.get('id') === 'NOTIFICATIONS') && (\n              <Link to='/notifications' className='drawer__tab' title={intl.formatMessage(messages.notifications)} aria-label={intl.formatMessage(messages.notifications)}><Icon id='bell' icon={NotificationsIcon} /></Link>\n            )}\n            {!columns.some(column => column.get('id') === 'COMMUNITY') && (\n              <Link to='/public/local' className='drawer__tab' title={intl.formatMessage(messages.community)} aria-label={intl.formatMessage(messages.community)}><Icon id='users' icon={PeopleIcon} /></Link>\n            )}\n            {!columns.some(column => column.get('id') === 'PUBLIC') && (\n              <Link to='/public' className='drawer__tab' title={intl.formatMessage(messages.public)} aria-label={intl.formatMessage(messages.public)}><Icon id='globe' icon={PublicIcon} /></Link>\n            )}\n            <a href='/settings/preferences' className='drawer__tab' title={intl.formatMessage(messages.preferences)} aria-label={intl.formatMessage(messages.preferences)}><Icon id='cog' icon={SettingsIcon} /></a>\n            <a href='/auth/sign_out' className='drawer__tab' title={intl.formatMessage(messages.logout)} aria-label={intl.formatMessage(messages.logout)} onClick={this.handleLogoutClick}><Icon id='sign-out' icon={LogoutIcon} /></a>\n          </nav>\n\n          {multiColumn && <SearchContainer /> }\n\n          <div className='drawer__pager'>\n            <div className='drawer__inner' onFocus={this.onFocus}>\n              <NavigationContainer onClose={this.onBlur} />\n\n              <ComposeFormContainer autoFocus={!isMobile(window.innerWidth)} />\n\n              <div className='drawer__inner__mastodon'>\n                <img alt='' draggable='false' src={mascot || elephantUIPlane} />\n              </div>\n            </div>\n\n            <Motion defaultStyle={{ x: -100 }} style={{ x: spring(showSearch ? 0 : -100, { stiffness: 210, damping: 20 }) }}>\n              {({ x }) => (\n                <div className='drawer__inner darker' style={{ transform: `translateX(${x}%)`, visibility: x === -100 ? 'hidden' : 'visible' }}>\n                  <SearchResultsContainer />\n                </div>\n              )}\n            </Motion>\n          </div>\n        </div>\n      );\n    }\n\n    return (\n      <Column onFocus={this.onFocus}>\n        <NavigationContainer onClose={this.onBlur} />\n        <ComposeFormContainer />\n\n        <Helmet>\n          <meta name='robots' content='noindex' />\n        </Helmet>\n      </Column>\n    );\n  }\n\n}\n\nexport default connect(mapStateToProps)(injectIntl(Compose));\n"],"sourceRoot":""}