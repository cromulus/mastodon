{"version":3,"sources":["webpack:///./node_modules/@material-symbols/svg-600/outlined/account_circle.svg","webpack:///./node_modules/@material-symbols/svg-600/outlined/arrow_right_alt.svg","webpack:///./node_modules/@material-symbols/svg-600/outlined/content_copy.svg","webpack:///./node_modules/@material-symbols/svg-600/outlined/edit_note.svg","webpack:///./app/javascript/mastodon/features/onboarding/components/step.jsx","webpack:///./app/javascript/mastodon/features/onboarding/follows.jsx","webpack:///./app/javascript/mastodon/features/onboarding/share.jsx","webpack:///./app/javascript/mastodon/features/onboarding/index.jsx"],"names":["_path","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","SvgAccountCircle","_ref","title","titleId","props","xmlns","width","height","viewBox","id","d","SvgArrowRightAlt","SvgContentCopy","SvgEditNote","Step","label","description","icon","iconComponent","completed","onClick","href","content","_jsxs","_Fragment","children","_jsx","className","Icon","CheckIcon","ArrowRightAltIcon","rel","Follows","PureComponent","componentDidMount","dispatch","fetchSuggestions","componentWillUnmount","markAsPartial","render","onBack","isLoading","suggestions","multiColumn","loadedContent","Array","fill","map","_","EmptyAccount","isEmpty","FormattedMessage","defaultMessage","suggestion","Account","get","withBio","Column","ColumnBackButton","values","strong","chunks","connect","state","getIn","messages","defineMessages","shareableMessage","CopyPasteText","constructor","copied","focused","setRef","c","input","handleInputClick","setState","focus","select","setSelectionRange","value","handleButtonClick","e","stopPropagation","navigator","clipboard","writeText","blur","timeout","setTimeout","handleFocus","handleBlur","clearTimeout","_jsx2","classNames","tabIndex","role","readOnly","ref","onFocus","onBlur","ContentCopyIcon","TipCarousel","index","handleSwipe","handleChangeIndex","Number","currentTarget","getAttribute","handleKeyDown","preventDefault","_ref2","Math","abs","_ref3","_ref4","onKeyDown","SwipeableViews","onChangeIndex","enableMouseEvents","active","Share","account","intl","url","URL","document","baseURI","formatMessage","username","domain","Link","to","me","injectIntl","template","Onboarding","ImmutablePureComponent","step","profileClicked","shareClicked","handleClose","history","closeOnboarding","push","handleProfileClick","handleFollowClick","handleComposeClick","focusCompose","handleShareClick","handleBackClick","handleWindowFocus","_debounce","fetchAccount","trailing","window","addEventListener","removeEventListener","src","illustration","alt","endsWith","AccountCircleIcon","PersonAddIcon","count","EditNoteIcon","emoji","assetHost","Helmet","name","propTypes","PropTypes","func","isRequired","ImmutablePropTypes","bool","WithRouterPropTypes","withRouter","mapStateToProps","getAccount","makeGetAccount"],"mappings":"wGAAIA,E,+HACJ,SAASC,IAAiS,OAApRA,EAAWC,OAAOC,OAASD,OAAOC,OAAOC,OAAS,SAAUC,GAAU,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAAE,IAAIG,EAASF,UAAUD,GAAI,IAAK,IAAII,KAAOD,EAAcP,OAAOS,UAAUC,eAAeC,KAAKJ,EAAQC,KAAQL,EAAOK,GAAOD,EAAOC,GAAU,CAAE,OAAOL,CAAQ,EAAUJ,EAASa,MAAMC,KAAMR,UAAY,CAElV,SAASS,EAAiBC,GACxB,IAAI,MACFC,EAAK,QACLC,KACGC,GACDH,EACJ,OAAoB,gBAAoB,MAAOhB,EAAS,CACtDoB,MAAO,6BACPC,MAAO,GACPC,OAAQ,GACRC,QAAS,iBACT,kBAAmBL,GAClBC,GAAQF,EAAqB,gBAAoB,QAAS,CAC3DO,GAAIN,GACHD,GAAS,KAAMlB,IAAUA,EAAqB,gBAAoB,OAAQ,CAC3E0B,EAAG,43CAEP,CACe,ICrBX,EDqBW,ICpBf,SAAS,IAAiS,OAApR,EAAWxB,OAAOC,OAASD,OAAOC,OAAOC,OAAS,SAAUC,GAAU,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAAE,IAAIG,EAASF,UAAUD,GAAI,IAAK,IAAII,KAAOD,EAAcP,OAAOS,UAAUC,eAAeC,KAAKJ,EAAQC,KAAQL,EAAOK,GAAOD,EAAOC,GAAU,CAAE,OAAOL,CAAQ,EAAU,EAASS,MAAMC,KAAMR,UAAY,CAElV,SAASoB,EAAiBV,GACxB,IAAI,MACFC,EAAK,QACLC,KACGC,GACDH,EACJ,OAAoB,gBAAoB,MAAO,EAAS,CACtDI,MAAO,6BACPC,MAAO,GACPC,OAAQ,GACRC,QAAS,iBACT,kBAAmBL,GAClBC,GAAQF,EAAqB,gBAAoB,QAAS,CAC3DO,GAAIN,GACHD,GAAS,KAAM,IAAU,EAAqB,gBAAoB,OAAQ,CAC3EQ,EAAG,sIAEP,CACe,ICrBX,EDqBW,ICpBf,SAAS,IAAiS,OAApR,EAAWxB,OAAOC,OAASD,OAAOC,OAAOC,OAAS,SAAUC,GAAU,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAAE,IAAIG,EAASF,UAAUD,GAAI,IAAK,IAAII,KAAOD,EAAcP,OAAOS,UAAUC,eAAeC,KAAKJ,EAAQC,KAAQL,EAAOK,GAAOD,EAAOC,GAAU,CAAE,OAAOL,CAAQ,EAAU,EAASS,MAAMC,KAAMR,UAAY,CAElV,SAASqB,EAAeX,GACtB,IAAI,MACFC,EAAK,QACLC,KACGC,GACDH,EACJ,OAAoB,gBAAoB,MAAO,EAAS,CACtDI,MAAO,6BACPC,MAAO,GACPC,OAAQ,GACRC,QAAS,iBACT,kBAAmBL,GAClBC,GAAQF,EAAqB,gBAAoB,QAAS,CAC3DO,GAAIN,GACHD,GAAS,KAAM,IAAU,EAAqB,gBAAoB,OAAQ,CAC3EQ,EAAG,uaAEP,CACe,ICrBX,EDqBW,ICpBf,SAAS,IAAiS,OAApR,EAAWxB,OAAOC,OAASD,OAAOC,OAAOC,OAAS,SAAUC,GAAU,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAAE,IAAIG,EAASF,UAAUD,GAAI,IAAK,IAAII,KAAOD,EAAcP,OAAOS,UAAUC,eAAeC,KAAKJ,EAAQC,KAAQL,EAAOK,GAAOD,EAAOC,GAAU,CAAE,OAAOL,CAAQ,EAAU,EAASS,MAAMC,KAAMR,UAAY,CAElV,SAASsB,EAAYZ,GACnB,IAAI,MACFC,EAAK,QACLC,KACGC,GACDH,EACJ,OAAoB,gBAAoB,MAAO,EAAS,CACtDI,MAAO,6BACPC,MAAO,GACPC,OAAQ,GACRC,QAAS,iBACT,kBAAmBL,GAClBC,GAAQF,EAAqB,gBAAoB,QAAS,CAC3DO,GAAIN,GACHD,GAAS,KAAM,IAAU,EAAqB,gBAAoB,OAAQ,CAC3EQ,EAAG,4gBAEP,CACe,Q,2GC6BAI,MA3CFb,IAA4E,IAA3E,MAAEc,EAAK,YAAEC,EAAW,KAAEC,EAAI,cAAEC,EAAa,UAAEC,EAAS,QAAEC,EAAO,KAAEC,GAAMpB,EACjF,MAAMqB,EACJC,eAAAC,WAAA,CAAAC,SAAA,CACEC,YAAA,OAAKC,UAAU,sCAA+B,EAC5CD,YAACE,IAAI,CAACnB,GAAIQ,EAAMA,KAAMC,KAGxBQ,YAAA,OAAKC,UAAU,6CAAsC,EACnDD,YAAA,eAAKX,GACLW,YAAA,cAAIV,IAGNU,YAAA,OAAKC,UAAWR,EAAY,oCAAsC,oCAA8B,EAC7FA,EAAYO,YAACE,IAAI,CAACX,KAAMY,MAAgBH,YAACE,IAAI,CAACX,KAAMa,QAK3D,OAAIT,EAEAK,YAAA,KAAGL,KAAMA,EAAMD,QAASA,EAAS/B,OAAO,SAAS0C,IAAI,WAAWJ,UAAU,gCAAyB,EAChGL,GAMLI,YAAA,UAAQN,QAASA,EAASO,UAAU,gCAAyB,EAC1DL,EACM,E,qDChBb,MAAMU,UAAgBC,gBAUpBC,oBACE,MAAM,SAAEC,GAAapC,KAAKK,MAC1B+B,EAASC,aAAiB,GAC5B,CAEAC,uBACE,MAAM,SAAEF,GAAapC,KAAKK,MAC1B+B,EAASG,YAAc,QACzB,CAEAC,SACE,MAAM,OAAEC,EAAM,UAAEC,EAAS,YAAEC,EAAW,YAAEC,GAAgB5C,KAAKK,MAE7D,IAAIwC,EAUJ,OAPEA,EADEH,EACe,IAAII,MAAM,GAAIC,OAAOC,KAAI,CAACC,EAAG1D,IAAMoC,YAACuB,IAAY,GAAM3D,KAC9DoD,EAAYQ,UACLxB,YAAA,OAAKC,UAAU,sCAA+B,EAACD,YAACyB,IAAgB,CAAC1C,GAAE,2BAA4B2C,eAAe,2JAE9GV,EAAYK,KAAIM,GAAc3B,YAAC4B,IAAO,CAAC7C,GAAI4C,EAAWE,IAAI,WAA4CC,SAAO,GAAlCH,EAAWE,IAAI,cAI1G7B,YAAC+B,IAAM,UACL/B,YAACgC,IAAgB,CAACf,YAAaA,EAAavB,QAASoB,IAErDd,YAAA,OAAKC,UAAU,kCAA2B,EACxCD,YAAA,OAAKC,UAAU,qBAAc,EAC3BD,YAAA,eAAIA,YAACyB,IAAgB,CAAC1C,GAAE,2BAA4B2C,eAAe,yBACnE1B,YAAA,cAAGA,YAACyB,IAAgB,CAAC1C,GAAE,0BAA2B2C,eAAe,6LAGnE1B,YAAA,OAAKC,UAAU,+BAAwB,EACpCiB,GAGHlB,YAAA,KAAGC,UAAU,yBAAkB,EAACD,YAACyB,IAAgB,CAAC1C,GAAE,8CAA+C2C,eAAe,iPAAiPO,OAAQ,CAAEC,OAAQC,GAAUnC,YAAA,mBAASmC,OAExYnC,YAAA,OAAKC,UAAU,2BAAoB,EACjCD,YAAA,UAAQC,UAAU,cAAcP,QAASoB,QAAO,EAACd,YAACyB,IAAgB,CAAC1C,GAAE,0BAA2B2C,eAAe,oBAKzH,EAIaU,yBAhESC,IAAK,CAC3BrB,YAAaqB,EAAMC,MAAM,CAAC,cAAe,UACzCvB,UAAWsB,EAAMC,MAAM,CAAC,cAAe,iBA8D1BF,CAAyB9B,G,uCC3DxC,MAAMiC,GAAWC,YAAe,CAC9BC,iBAAkB,CAAE1D,GAAG,2BAA6B2C,eAAe,0DAOrE,MAAMgB,WAAsBnC,gBAAcoC,cAAA,SAAA9E,WAAA,KAMxCwE,MAAQ,CACNO,QAAQ,EACRC,SAAS,GACT,KAEFC,OAASC,IACP1E,KAAK2E,MAAQD,CAAC,EACd,KAEFE,iBAAmB,KACjB5E,KAAK6E,SAAS,CAAEN,QAAQ,IACxBvE,KAAK2E,MAAMG,QACX9E,KAAK2E,MAAMI,SACX/E,KAAK2E,MAAMK,kBAAkB,EAAGhF,KAAKK,MAAM4E,MAAMxF,OAAO,EACxD,KAEFyF,kBAAoBC,IAClBA,EAAEC,kBAEF,MAAM,MAAEH,GAAUjF,KAAKK,MACvBgF,UAAUC,UAAUC,UAAUN,GAC9BjF,KAAK2E,MAAMa,OACXxF,KAAK6E,SAAS,CAAEN,QAAQ,IACxBvE,KAAKyF,QAAUC,YAAW,IAAM1F,KAAK6E,SAAS,CAAEN,QAAQ,KAAU,IAAI,EACtE,KAEFoB,YAAc,KACZ3F,KAAK6E,SAAS,CAAEL,SAAS,GAAO,EAChC,KAEFoB,WAAa,KACX5F,KAAK6E,SAAS,CAAEL,SAAS,GAAQ,CACjC,CAEFlC,uBACMtC,KAAKyF,SAASI,aAAa7F,KAAKyF,QACtC,CAEAjD,SACE,MAAM,MAAEyC,GAAUjF,KAAKK,OACjB,OAAEkE,EAAM,QAAEC,GAAYxE,KAAKgE,MAEjC,OACE8B,YAAA,OAAKlE,UAAWmE,KAAW,kBAAmB,CAAExB,SAAQC,YAAYwB,SAAS,IAAIC,KAAK,SAAS5E,QAASrB,KAAK4E,uBAAiB,EAC5HjD,cAAA,YAAUuE,UAAQ,EAACjB,MAAOA,EAAOkB,IAAKnG,KAAKyE,OAAQpD,QAASrB,KAAK4E,iBAAkBwB,QAASpG,KAAK2F,YAAaU,OAAQrG,KAAK4F,aAE3HE,YAAA,UAAQlE,UAAU,SAASP,QAASrB,KAAKkF,wBAAkB,EACzDY,YAACjE,IAAI,CAACnB,GAAG,OAAOQ,KAAMoF,IAAmB,IAAE/B,EAASuB,YAAC1C,IAAgB,CAAC1C,GAAE,mBAAoB2C,eAAe,WAAcyC,YAAC1C,IAAgB,CAAC1C,GAAE,8BAA+B2C,eAAe,uBAInM,EAIF,MAAMkD,WAAoBrE,gBAAcoC,cAAA,SAAA9E,WAAA,KAMtCwE,MAAQ,CACNwC,MAAO,GACP,KAEFC,YAAcD,IACZxG,KAAK6E,SAAS,CAAE2B,SAAQ,EACxB,KAEFE,kBAAoBvB,IAClBnF,KAAK6E,SAAS,CAAE2B,MAAOG,OAAOxB,EAAEyB,cAAcC,aAAa,gBAAiB,EAC5E,KAEFC,cAAgB3B,IACd,OAAOA,EAAExF,KACT,IAAK,YACHwF,EAAE4B,iBACF/G,KAAK6E,UAAS,CAAA3E,EAAA8G,KAAA,IAAC,MAAER,GAAOtG,GAAE,SAAEwB,GAAUsF,EAAA,MAAM,CAAER,MAAOS,KAAKC,IAAIV,EAAQ,GAAK9E,EAASjC,OAAQ,IAC5F,MACF,IAAK,aACH0F,EAAE4B,iBACF/G,KAAK6E,UAAS,CAAAsC,EAAAC,KAAA,IAAC,MAAEZ,GAAOW,GAAE,SAAEzF,GAAU0F,EAAA,MAAM,CAAEZ,OAAQA,EAAQ,GAAK9E,EAASjC,OAAQ,IAEtF,CACA,CAEF+C,SACE,MAAM,SAAEd,GAAa1B,KAAKK,OACpB,MAAEmG,GAAUxG,KAAKgE,MAEvB,OACE8B,YAAA,OAAKlE,UAAU,eAAeoE,SAAS,IAAIqB,UAAWrH,KAAK8G,oBAAc,EACvEhB,YAACwB,KAAc,CAACC,cAAevH,KAAKyG,YAAaD,MAAOA,EAAOgB,mBAAiB,EAACxB,SAAS,WAAI,EAC3FtE,GAGHoE,YAAA,OAAKlE,UAAU,gCAAyB,EACrCF,EAASsB,KAAI,CAACC,EAAG1D,IAChBuG,YAAA,UAAgBlE,UAAWmE,KAAW,wBAAyB,CAAE0B,OAAQlI,IAAMiH,IAAU,aAAYjH,EAAG8B,QAASrB,KAAK0G,mBAAzGnH,EACVA,EAAI,MAMjB,EAIF,MAAMmI,WAAcxF,gBASlBM,SACE,MAAM,OAAEC,EAAM,QAAEkF,EAAO,YAAE/E,EAAW,KAAEgF,GAAS5H,KAAKK,MAE9CwH,EAAO,IAAIC,IAAK,KAAIH,EAAQnE,IAAI,cAAeuE,SAASC,SAAU1G,KAExE,OACEwE,YAACpC,IAAM,UACLoC,YAACnC,IAAgB,CAACf,YAAaA,EAAavB,QAASoB,IAErDqD,YAAA,OAAKlE,UAAU,kCAA2B,EACxCkE,YAAA,OAAKlE,UAAU,qBAAc,EAC3BkE,YAAA,eAAIA,YAAC1C,IAAgB,CAAC1C,GAAE,yBAA0B2C,eAAe,wBACjEyC,YAAA,cAAGA,YAAC1C,IAAgB,CAAC1C,GAAE,wBAAyB2C,eAAe,yDAGjEyC,YAACzB,GAAa,CAACY,MAAO2C,EAAKK,cAAc/D,GAASE,iBAAkB,CAAE8D,SAAW,IAAGP,EAAQnE,IAAI,eAAe2E,MAAUN,UAEzH/B,YAACS,GAAW,UACVT,YAAA,gBAAKA,YAAA,KAAGlE,UAAU,yBAAkB,EAACkE,YAAC1C,IAAgB,CAAC1C,GAAE,+BAAgC2C,eAAe,oMAAqMO,OAAQ,CAAEC,OAAQC,GAAUgC,YAAA,mBAAShC,QAClVgC,YAAA,gBAAKA,YAAA,KAAGlE,UAAU,yBAAkB,EAACkE,YAAC1C,IAAgB,CAAC1C,GAAE,4BAA6B2C,eAAe,yNAAyNO,OAAQ,CAAEuE,WAAQtE,OAAQC,GAAUgC,YAAA,mBAAShC,QAC3WgC,YAAA,gBAAKA,YAAA,KAAGlE,UAAU,yBAAkB,EAACkE,YAAC1C,IAAgB,CAAC1C,GAAE,sBAAuB2C,eAAe,qMAAsMO,OAAQ,CAAEC,OAAQC,GAAUgC,YAAA,mBAAShC,SAG5UgC,YAAA,KAAGlE,UAAU,yBAAkB,EAACkE,YAAC1C,IAAgB,CAAC1C,GAAE,8BAA+B2C,eAAe,0BAElGyC,YAAA,OAAKlE,UAAU,0BAAmB,EAChCkE,YAACsC,IAAI,CAACC,GAAG,QAAQzG,UAAU,yBAAkB,EAC3CkE,YAAC1C,IAAgB,CAAC1C,GAAE,gCAAiC2C,eAAe,4BACpEyC,YAACjE,IAAI,CAACX,KAAMa,KAGd+D,YAACsC,IAAI,CAACC,GAAG,WAAWzG,UAAU,yBAAkB,EAC9CkE,YAAC1C,IAAgB,CAAC1C,GAAE,mCAAoC2C,eAAe,wBACvEyC,YAACjE,IAAI,CAACX,KAAMa,MAIhB+D,YAAA,OAAKlE,UAAU,2BAAoB,EACjCkE,YAAA,UAAQlE,UAAU,cAAcP,QAASoB,QAAO,EAACqD,YAAC1C,IAAgB,CAAC1C,GAAE,yBAA0B2C,eAAe,oBAKxH,EAIaU,0BA/KSC,IAAK,CAC3B2D,QAAS3D,EAAMC,MAAM,CAAC,WAAYqE,SA8KrBvE,CAAyBwE,YAAWb,KCtKnD,MAAMxD,GAAWC,YAAe,CAC9BqE,SAAU,CAAE9H,GAAG,8BAAgC2C,eAAe,sBAWhE,MAAMoF,WAAmBC,IAAuBpE,cAAA,SAAA9E,WAAA,KAQ9CwE,MAAQ,CACN2E,KAAM,KACNC,gBAAgB,EAChBC,cAAc,GACd,KAEFC,YAAc,KACZ,MAAM,SAAE1G,EAAQ,QAAE2G,GAAY/I,KAAKK,MAEnC+B,EAAS4G,eACTD,EAAQE,KAAK,QAAQ,EACrB,KAEFC,mBAAqB,KACnBlJ,KAAK6E,SAAS,CAAE+D,gBAAgB,GAAO,EACvC,KAEFO,kBAAoB,KAClBnJ,KAAK6E,SAAS,CAAE8D,KAAM,WAAY,EAClC,KAEFS,mBAAqB,KACnB,MAAM,SAAEhH,EAAQ,KAAEwF,EAAI,QAAEmB,GAAY/I,KAAKK,MAEzC+B,EAASiH,aAAaN,EAASnB,EAAKK,cAAc/D,GAASsE,WAAW,EACtE,KAEFc,iBAAmB,KACjBtJ,KAAK6E,SAAS,CAAE8D,KAAM,QAASE,cAAc,GAAO,EACpD,KAEFU,gBAAkB,KAChBvJ,KAAK6E,SAAS,CAAE8D,KAAM,MAAO,EAC7B,KAEFa,kBAAoBC,KAAS,KAC3B,MAAM,SAAErH,EAAQ,QAAEuF,GAAY3H,KAAKK,MACnC+B,EAASsH,YAAa/B,EAAQnE,IAAI,OAAO,GACxC,IAAM,CAAEmG,UAAU,GAAQ,CAE7BxH,oBACEyH,OAAOC,iBAAiB,QAAS7J,KAAKwJ,mBAAmB,EAC3D,CAEAlH,uBACEsH,OAAOE,oBAAoB,QAAS9J,KAAKwJ,kBAC3C,CAEAhH,SACE,MAAM,QAAEmF,EAAO,YAAE/E,GAAgB5C,KAAKK,OAChC,KAAEsI,EAAI,aAAEE,GAAiB7I,KAAKgE,MAEpC,OAAO2E,GACP,IAAK,UACH,OAAOhH,YAACM,EAAO,CAACQ,OAAQzC,KAAKuJ,gBAAiB3G,YAAaA,IAC7D,IAAK,QACH,OAAOjB,YAAC+F,GAAK,CAACjF,OAAQzC,KAAKuJ,gBAAiB3G,YAAaA,IAG3D,OACEjB,YAAC+B,IAAM,UACL/B,YAAA,OAAKC,UAAU,kCAA2B,EACxCD,YAAA,OAAKC,UAAU,qBAAc,EAC3BD,YAAA,OAAKoI,IAAKC,UAAcC,IAAI,GAAGrI,UAAU,6BACzCD,YAAA,eAAIA,YAACyB,IAAgB,CAAC1C,GAAE,yBAA0B2C,eAAe,qBACjE1B,YAAA,cAAGA,YAACyB,IAAgB,CAAC1C,GAAE,wBAAyB2C,eAAe,wFAGjE1B,YAAA,OAAKC,UAAU,0BAAmB,EAChCD,YAACZ,EAAI,CAACM,QAASrB,KAAKkJ,mBAAoB5H,KAAK,oBAAoBF,WAAauG,EAAQnE,IAAI,UAAU0G,SAAS,gBAAoBvC,EAAQnE,IAAI,gBAAgB/D,OAAS,GAAKkI,EAAQnE,IAAI,QAAQ/D,OAAS,EAAIyB,KAAK,iBAAiBC,cAAegJ,EAAmBnJ,MAAOW,YAACyB,IAAgB,CAAC1C,GAAE,uCAAwC2C,eAAe,2BAA6BpC,YAAaU,YAACyB,IAAgB,CAAC1C,GAAE,sCAAuC2C,eAAe,6EAC1c1B,YAACZ,EAAI,CAACM,QAASrB,KAAKmJ,kBAAmB/H,UAA6C,EAAjCuG,EAAQnE,IAAI,oBAA2B,EAAGtC,KAAK,YAAYC,cAAeiJ,IAAepJ,MAAOW,YAACyB,IAAgB,CAAC1C,GAAE,uCAAwC2C,eAAe,6EAA6EO,OAAQ,CAAEyG,MAAO,KAASpJ,YAAaU,YAACyB,IAAgB,CAAC1C,GAAE,sCAAuC2C,eAAe,4EAC5Z1B,YAACZ,EAAI,CAACM,QAASrB,KAAKoJ,mBAAoBhI,UAA4C,EAAhCuG,EAAQnE,IAAI,mBAA0B,EAAGtC,KAAK,kBAAkBC,cAAemJ,EAActJ,MAAOW,YAACyB,IAAgB,CAAC1C,GAAE,wCAAyC2C,eAAe,yBAA2BpC,YAAaU,YAACyB,IAAgB,CAAC1C,GAAE,uCAAwC2C,eAAe,0BAA0BO,OAAQ,CAAE2G,MAAO5I,YAAA,OAAKC,UAAU,WAAWqI,IAAI,KAAKF,IAAM,GAAES,6BAC7a7I,YAACZ,EAAI,CAACM,QAASrB,KAAKsJ,iBAAkBlI,UAAWyH,EAAc3H,KAAK,OAAOC,cAAemF,EAAiBtF,MAAOW,YAACyB,IAAgB,CAAC1C,GAAE,uCAAwC2C,eAAe,uBAAyBpC,YAAaU,YAACyB,IAAgB,CAAC1C,GAAE,sCAAuC2C,eAAe,0DAG/S1B,YAAA,KAAGC,UAAU,yBAAkB,EAACD,YAACyB,IAAgB,CAAC1C,GAAE,wBAAyB2C,eAAe,sCAE5F1B,YAAA,OAAKC,UAAU,0BAAmB,EAChCD,YAACyG,IAAI,CAACC,GAAG,WAAWzG,UAAU,yBAAkB,EAC9CD,YAACyB,IAAgB,CAAC1C,GAAE,mCAAoC2C,eAAe,wBACvE1B,YAACE,IAAI,CAACX,KAAMa,KAGdJ,YAACyG,IAAI,CAACC,GAAG,QAAQzG,UAAU,yBAAkB,EAC3CD,YAACyB,IAAgB,CAAC1C,GAAE,gCAAiC2C,eAAe,4BACpE1B,YAACE,IAAI,CAACX,KAAMa,OAKlBJ,YAAC8I,IAAM,UACL9I,YAAA,QAAM+I,KAAK,SAASnJ,QAAQ,aAIpC,EAvGIkH,GACGkC,UAAY,CACjBvI,SAAUwI,IAAUC,KAAKC,WACzBnD,QAASoD,IAAmB/H,IAC5BJ,YAAagI,IAAUI,QACpBC,KAsGQC,sBAAWnH,mBAnHFoH,KACtB,MAAMC,EAAaC,cAEnB,OAAOrH,IAAK,CACV2D,QAASyD,EAAWpH,EAAOsE,MAC3B,GA8GsBvE,CAAyBwE,YAAWE,K","file":"js/features/onboarding-fb308ea23ab7fb052113.chunk.js","sourcesContent":["var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgAccountCircle(_ref) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 48,\n    height: 48,\n    viewBox: \"0 -960 960 960\",\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M224.261-261.218q62.435-42.869 123.869-65.804 61.435-22.935 132.116-22.935 70.68 0 132.889 23.369 62.208 23.369 123.604 65.37 42.87-54.565 60.522-106.997T814.913-480q0-142.313-96.271-238.613-96.271-96.3-238.543-96.3-142.273 0-238.642 96.3-96.37 96.3-96.37 238.613 0 59.304 17.885 111.601 17.885 52.296 61.289 107.181Zm255.553-184.825q-59.599 0-99.902-40.534-40.303-40.534-40.303-99.761t40.489-99.858q40.489-40.63 100.088-40.63t99.902 40.816q40.303 40.817 40.303 100.044t-40.489 99.575q-40.489 40.348-100.088 40.348Zm.324 380.174q-84.964 0-160.445-32.512-75.48-32.513-132.132-89.152-56.652-56.64-89.172-131.916-32.52-75.276-32.52-160.864 0-84.948 32.63-160.274 32.631-75.326 89.109-131.805 56.479-56.478 131.782-89.391 75.304-32.913 160.923-32.913 84.948 0 160.274 32.913 75.326 32.913 131.805 89.391 56.478 56.479 89.391 131.884 32.913 75.405 32.913 160.37 0 84.964-32.913 160.508-32.913 75.543-89.391 132.022-56.479 56.478-131.884 89.109-75.405 32.63-160.37 32.63ZM480-145.087q53.304 0 102.978-14.87 49.674-14.869 100.674-53.173-51.565-35.435-101.174-53.022Q532.87-283.739 480-283.739t-102.195 17.587q-49.326 17.587-100.892 53.022 51 38.304 100.392 53.173 49.391 14.87 102.695 14.87Zm0-367.739q32.229 0 52.919-20.37 20.69-20.369 20.69-52.956t-20.69-53.239q-20.69-20.652-52.919-20.652t-52.919 20.652q-20.69 20.652-20.69 53.239 0 32.587 20.69 52.956 20.69 20.37 52.919 20.37Zm0-73.609Zm.565 372.305Z\"\n  })));\n}\nexport default __webpack_public_path__ + \"media/outlined/account_circle-3f693acc.svg\";\nexport { SvgAccountCircle as ReactComponent };","var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgArrowRightAlt(_ref) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 48,\n    height: 48,\n    viewBox: \"0 -960 960 960\",\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m560.565-228.434-56.566-55.001 158.956-158.956H145.869v-79.218h517.086L502.999-682.13l56.566-54.436L814.696-482 560.565-228.434Z\"\n  })));\n}\nexport default __webpack_public_path__ + \"media/outlined/arrow_right_alt-b17b2f08.svg\";\nexport { SvgArrowRightAlt as ReactComponent };","var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgContentCopy(_ref) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 48,\n    height: 48,\n    viewBox: \"0 -960 960 960\",\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M314.696-195.478q-32.507 0-55.862-23.356-23.356-23.355-23.356-55.862v-549.826q0-32.74 23.356-56.262 23.355-23.522 55.862-23.522h429.826q32.74 0 56.262 23.522t23.522 56.262v549.826q0 32.507-23.522 55.862-23.522 23.356-56.262 23.356H314.696Zm0-79.218h429.826v-549.826H314.696v549.826ZM175.478-55.694q-32.74 0-56.262-23.522t-23.522-56.262v-629.044h79.784v629.044h509.044v79.784H175.478Zm139.218-219.002v-549.826 549.826Z\"\n  })));\n}\nexport default __webpack_public_path__ + \"media/outlined/content_copy-13886811.svg\";\nexport { SvgContentCopy as ReactComponent };","var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgEditNote(_ref) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 48,\n    height: 48,\n    viewBox: \"0 -960 960 960\",\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M145.869-378.911v-79.219h325.436v79.219H145.869Zm0-178.001v-79.218h489.218v79.218H145.869Zm0-178.001v-79.783h489.218v79.783H145.869Zm371.87 589.044v-134.87L741-503q10.203-10.496 22.674-15.161 12.471-4.665 25.544-4.665 13.13 0 25.853 5.348T837.87-502l37 37q10.031 10.13 14.929 22.638 4.897 12.507 4.897 25.014 0 13.261-5.347 26.175-5.348 12.913-15.389 23.043L652.609-145.869h-134.87Zm308.479-271.479-37-37 37 37Zm-240 203h38L743.522-334.52l-18-19.068-19-18.064-120.304 119.169v38.135Zm139.304-139.304-19-18 37 37-18-19Z\"\n  })));\n}\nexport default __webpack_public_path__ + \"media/outlined/edit_note-4b34f11e.svg\";\nexport { SvgEditNote as ReactComponent };","import PropTypes from 'prop-types';\n\nimport { ReactComponent as ArrowRightAltIcon } from '@material-symbols/svg-600/outlined/arrow_right_alt.svg';\nimport { ReactComponent as CheckIcon } from '@material-symbols/svg-600/outlined/done.svg';\n\nimport { Icon }  from 'mastodon/components/icon';\n\nconst Step = ({ label, description, icon, iconComponent, completed, onClick, href }) => {\n  const content = (\n    <>\n      <div className='onboarding__steps__item__icon'>\n        <Icon id={icon} icon={iconComponent} />\n      </div>\n\n      <div className='onboarding__steps__item__description'>\n        <h6>{label}</h6>\n        <p>{description}</p>\n      </div>\n\n      <div className={completed ? 'onboarding__steps__item__progress' : 'onboarding__steps__item__go'}>\n        {completed ? <Icon icon={CheckIcon} /> : <Icon icon={ArrowRightAltIcon} />}\n      </div>\n    </>\n  );\n\n  if (href) {\n    return (\n      <a href={href} onClick={onClick} target='_blank' rel='noopener' className='onboarding__steps__item'>\n        {content}\n      </a>\n    );\n  }\n\n  return (\n    <button onClick={onClick} className='onboarding__steps__item'>\n      {content}\n    </button>\n  );\n};\n\nStep.propTypes = {\n  label: PropTypes.node,\n  description: PropTypes.node,\n  icon: PropTypes.string,\n  iconComponent: PropTypes.func,\n  completed: PropTypes.bool,\n  href: PropTypes.string,\n  onClick: PropTypes.func,\n};\n\nexport default Step;\n","import PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport { FormattedMessage } from 'react-intl';\n\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport { connect } from 'react-redux';\n\nimport { fetchSuggestions } from 'mastodon/actions/suggestions';\nimport { markAsPartial } from 'mastodon/actions/timelines';\nimport Column from 'mastodon/components/column';\nimport ColumnBackButton from 'mastodon/components/column_back_button';\nimport { EmptyAccount } from 'mastodon/components/empty_account';\nimport Account from 'mastodon/containers/account_container';\n\nconst mapStateToProps = state => ({\n  suggestions: state.getIn(['suggestions', 'items']),\n  isLoading: state.getIn(['suggestions', 'isLoading']),\n});\n\nclass Follows extends PureComponent {\n\n  static propTypes = {\n    onBack: PropTypes.func,\n    dispatch: PropTypes.func.isRequired,\n    suggestions: ImmutablePropTypes.list,\n    isLoading: PropTypes.bool,\n    multiColumn: PropTypes.bool,\n  };\n\n  componentDidMount () {\n    const { dispatch } = this.props;\n    dispatch(fetchSuggestions(true));\n  }\n\n  componentWillUnmount () {\n    const { dispatch } = this.props;\n    dispatch(markAsPartial('home'));\n  }\n\n  render () {\n    const { onBack, isLoading, suggestions, multiColumn } = this.props;\n\n    let loadedContent;\n\n    if (isLoading) {\n      loadedContent = (new Array(8)).fill().map((_, i) => <EmptyAccount key={i} />);\n    } else if (suggestions.isEmpty()) {\n      loadedContent = <div className='follow-recommendations__empty'><FormattedMessage id='onboarding.follows.empty' defaultMessage='Unfortunately, no results can be shown right now. You can try using search or browsing the explore page to find people to follow, or try again later.' /></div>;\n    } else {\n      loadedContent = suggestions.map(suggestion => <Account id={suggestion.get('account')} key={suggestion.get('account')} withBio />);\n    }\n\n    return (\n      <Column>\n        <ColumnBackButton multiColumn={multiColumn} onClick={onBack} />\n\n        <div className='scrollable privacy-policy'>\n          <div className='column-title'>\n            <h3><FormattedMessage id='onboarding.follows.title' defaultMessage='Popular on Mastodon' /></h3>\n            <p><FormattedMessage id='onboarding.follows.lead' defaultMessage='You curate your own home feed. The more people you follow, the more active and interesting it will be. These profiles may be a good starting point—you can always unfollow them later!' /></p>\n          </div>\n\n          <div className='follow-recommendations'>\n            {loadedContent}\n          </div>\n\n          <p className='onboarding__lead'><FormattedMessage id='onboarding.tips.accounts_from_other_servers' defaultMessage='<strong>Did you know?</strong> Since Mastodon is decentralized, some profiles you come across will be hosted on servers other than yours. And yet you can interact with them seamlessly! Their server is in the second half of their username!' values={{ strong: chunks => <strong>{chunks}</strong> }} /></p>\n\n          <div className='onboarding__footer'>\n            <button className='link-button' onClick={onBack}><FormattedMessage id='onboarding.actions.back' defaultMessage='Take me back' /></button>\n          </div>\n        </div>\n      </Column>\n    );\n  }\n\n}\n\nexport default connect(mapStateToProps)(Follows);\n","import PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport { defineMessages, injectIntl, FormattedMessage } from 'react-intl';\n\nimport classNames from 'classnames';\nimport { Link } from 'react-router-dom';\n\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport { connect } from 'react-redux';\n\nimport { ReactComponent as ArrowRightAltIcon } from '@material-symbols/svg-600/outlined/arrow_right_alt.svg';\nimport { ReactComponent as ContentCopyIcon } from '@material-symbols/svg-600/outlined/content_copy.svg';\nimport SwipeableViews from 'react-swipeable-views';\n\nimport Column from 'mastodon/components/column';\nimport ColumnBackButton from 'mastodon/components/column_back_button';\nimport { Icon }  from 'mastodon/components/icon';\nimport { me, domain } from 'mastodon/initial_state';\n\nconst messages = defineMessages({\n  shareableMessage: { id: 'onboarding.share.message', defaultMessage: 'I\\'m {username} on #Mastodon! Come follow me at {url}' },\n});\n\nconst mapStateToProps = state => ({\n  account: state.getIn(['accounts', me]),\n});\n\nclass CopyPasteText extends PureComponent {\n\n  static propTypes = {\n    value: PropTypes.string,\n  };\n\n  state = {\n    copied: false,\n    focused: false,\n  };\n\n  setRef = c => {\n    this.input = c;\n  };\n\n  handleInputClick = () => {\n    this.setState({ copied: false });\n    this.input.focus();\n    this.input.select();\n    this.input.setSelectionRange(0, this.props.value.length);\n  };\n\n  handleButtonClick = e => {\n    e.stopPropagation();\n\n    const { value } = this.props;\n    navigator.clipboard.writeText(value);\n    this.input.blur();\n    this.setState({ copied: true });\n    this.timeout = setTimeout(() => this.setState({ copied: false }), 700);\n  };\n\n  handleFocus = () => {\n    this.setState({ focused: true });\n  };\n\n  handleBlur = () => {\n    this.setState({ focused: false });\n  };\n\n  componentWillUnmount () {\n    if (this.timeout) clearTimeout(this.timeout);\n  }\n\n  render () {\n    const { value } = this.props;\n    const { copied, focused } = this.state;\n\n    return (\n      <div className={classNames('copy-paste-text', { copied, focused })} tabIndex='0' role='button' onClick={this.handleInputClick}>\n        <textarea readOnly value={value} ref={this.setRef} onClick={this.handleInputClick} onFocus={this.handleFocus} onBlur={this.handleBlur} />\n\n        <button className='button' onClick={this.handleButtonClick}>\n          <Icon id='copy' icon={ContentCopyIcon} /> {copied ? <FormattedMessage id='copypaste.copied' defaultMessage='Copied' /> : <FormattedMessage id='copypaste.copy_to_clipboard' defaultMessage='Copy to clipboard' />}\n        </button>\n      </div>\n    );\n  }\n\n}\n\nclass TipCarousel extends PureComponent {\n\n  static propTypes = {\n    children: PropTypes.node,\n  };\n\n  state = {\n    index: 0,\n  };\n\n  handleSwipe = index => {\n    this.setState({ index });\n  };\n\n  handleChangeIndex = e => {\n    this.setState({ index: Number(e.currentTarget.getAttribute('data-index')) });\n  };\n\n  handleKeyDown = e => {\n    switch(e.key) {\n    case 'ArrowLeft':\n      e.preventDefault();\n      this.setState(({ index }, { children }) => ({ index: Math.abs(index - 1) % children.length }));\n      break;\n    case 'ArrowRight':\n      e.preventDefault();\n      this.setState(({ index }, { children }) => ({ index: (index + 1) % children.length }));\n      break;\n    }\n  };\n\n  render () {\n    const { children } = this.props;\n    const { index } = this.state;\n\n    return (\n      <div className='tip-carousel' tabIndex='0' onKeyDown={this.handleKeyDown}>\n        <SwipeableViews onChangeIndex={this.handleSwipe} index={index} enableMouseEvents tabIndex='-1'>\n          {children}\n        </SwipeableViews>\n\n        <div className='media-modal__pagination'>\n          {children.map((_, i) => (\n            <button key={i} className={classNames('media-modal__page-dot', { active: i === index })} data-index={i} onClick={this.handleChangeIndex}>\n              {i + 1}\n            </button>\n          ))}\n        </div>\n      </div>\n    );\n  }\n\n}\n\nclass Share extends PureComponent {\n\n  static propTypes = {\n    onBack: PropTypes.func,\n    account: ImmutablePropTypes.map,\n    multiColumn: PropTypes.bool,\n    intl: PropTypes.object,\n  };\n\n  render () {\n    const { onBack, account, multiColumn, intl } = this.props;\n\n    const url = (new URL(`/@${account.get('username')}`, document.baseURI)).href;\n\n    return (\n      <Column>\n        <ColumnBackButton multiColumn={multiColumn} onClick={onBack} />\n\n        <div className='scrollable privacy-policy'>\n          <div className='column-title'>\n            <h3><FormattedMessage id='onboarding.share.title' defaultMessage='Share your profile' /></h3>\n            <p><FormattedMessage id='onboarding.share.lead' defaultMessage='Let people know how they can find you on Mastodon!' /></p>\n          </div>\n\n          <CopyPasteText value={intl.formatMessage(messages.shareableMessage, { username: `@${account.get('username')}@${domain}`, url })} />\n\n          <TipCarousel>\n            <div><p className='onboarding__lead'><FormattedMessage id='onboarding.tips.verification' defaultMessage='<strong>Did you know?</strong> You can verify your account by putting a link to your Mastodon profile on your own website and adding the website to your profile. No fees or documents necessary!'  values={{ strong: chunks => <strong>{chunks}</strong> }}  /></p></div>\n            <div><p className='onboarding__lead'><FormattedMessage id='onboarding.tips.migration' defaultMessage='<strong>Did you know?</strong> If you feel like {domain} is not a great server choice for you in the future, you can move to another Mastodon server without losing your followers. You can even host your own server!' values={{ domain, strong: chunks => <strong>{chunks}</strong> }} /></p></div>\n            <div><p className='onboarding__lead'><FormattedMessage id='onboarding.tips.2fa' defaultMessage='<strong>Did you know?</strong> You can secure your account by setting up two-factor authentication in your account settings. It works with any TOTP app of your choice, no phone number necessary!'  values={{ strong: chunks => <strong>{chunks}</strong> }}  /></p></div>\n          </TipCarousel>\n\n          <p className='onboarding__lead'><FormattedMessage id='onboarding.share.next_steps' defaultMessage='Possible next steps:' /></p>\n\n          <div className='onboarding__links'>\n            <Link to='/home' className='onboarding__link'>\n              <FormattedMessage id='onboarding.actions.go_to_home' defaultMessage='Take me to my home feed' />\n              <Icon icon={ArrowRightAltIcon} />\n            </Link>\n\n            <Link to='/explore' className='onboarding__link'>\n              <FormattedMessage id='onboarding.actions.go_to_explore' defaultMessage='Take me to trending' />\n              <Icon icon={ArrowRightAltIcon} />\n            </Link>\n          </div>\n\n          <div className='onboarding__footer'>\n            <button className='link-button' onClick={onBack}><FormattedMessage id='onboarding.action.back' defaultMessage='Take me back' /></button>\n          </div>\n        </div>\n      </Column>\n    );\n  }\n\n}\n\nexport default connect(mapStateToProps)(injectIntl(Share));\n","import PropTypes from 'prop-types';\n\nimport { FormattedMessage, injectIntl, defineMessages } from 'react-intl';\n\nimport { Helmet } from 'react-helmet';\nimport { Link, withRouter } from 'react-router-dom';\n\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport { connect } from 'react-redux';\n\nimport { ReactComponent as AccountCircleIcon } from '@material-symbols/svg-600/outlined/account_circle.svg';\nimport { ReactComponent as ArrowRightAltIcon } from '@material-symbols/svg-600/outlined/arrow_right_alt.svg';\nimport { ReactComponent as ContentCopyIcon } from '@material-symbols/svg-600/outlined/content_copy.svg';\nimport { ReactComponent as EditNoteIcon } from '@material-symbols/svg-600/outlined/edit_note.svg';\nimport { ReactComponent as PersonAddIcon } from '@material-symbols/svg-600/outlined/person_add.svg';\nimport { debounce } from 'lodash';\n\nimport illustration from 'mastodon/../images/elephant_ui_conversation.svg';\nimport { fetchAccount } from 'mastodon/actions/accounts';\nimport { focusCompose } from 'mastodon/actions/compose';\nimport { closeOnboarding } from 'mastodon/actions/onboarding';\nimport { Icon }  from 'mastodon/components/icon';\nimport Column from 'mastodon/features/ui/components/column';\nimport { me } from 'mastodon/initial_state';\nimport { makeGetAccount } from 'mastodon/selectors';\nimport { assetHost } from 'mastodon/utils/config';\nimport { WithRouterPropTypes } from 'mastodon/utils/react_router';\n\nimport Step from './components/step';\nimport Follows from './follows';\nimport Share from './share';\n\nconst messages = defineMessages({\n  template: { id: 'onboarding.compose.template', defaultMessage: 'Hello #Mastodon!' },\n});\n\nconst mapStateToProps = () => {\n  const getAccount = makeGetAccount();\n\n  return state => ({\n    account: getAccount(state, me),\n  });\n};\n\nclass Onboarding extends ImmutablePureComponent {\n  static propTypes = {\n    dispatch: PropTypes.func.isRequired,\n    account: ImmutablePropTypes.map,\n    multiColumn: PropTypes.bool,\n    ...WithRouterPropTypes,\n  };\n\n  state = {\n    step: null,\n    profileClicked: false,\n    shareClicked: false,\n  };\n\n  handleClose = () => {\n    const { dispatch, history } = this.props;\n\n    dispatch(closeOnboarding());\n    history.push('/home');\n  };\n\n  handleProfileClick = () => {\n    this.setState({ profileClicked: true });\n  };\n\n  handleFollowClick = () => {\n    this.setState({ step: 'follows' });\n  };\n\n  handleComposeClick = () => {\n    const { dispatch, intl, history } = this.props;\n\n    dispatch(focusCompose(history, intl.formatMessage(messages.template)));\n  };\n\n  handleShareClick = () => {\n    this.setState({ step: 'share', shareClicked: true });\n  };\n\n  handleBackClick = () => {\n    this.setState({ step: null });\n  };\n\n  handleWindowFocus = debounce(() => {\n    const { dispatch, account } = this.props;\n    dispatch(fetchAccount(account.get('id')));\n  }, 1000, { trailing: true });\n\n  componentDidMount () {\n    window.addEventListener('focus', this.handleWindowFocus, false);\n  }\n\n  componentWillUnmount () {\n    window.removeEventListener('focus', this.handleWindowFocus);\n  }\n\n  render () {\n    const { account, multiColumn } = this.props;\n    const { step, shareClicked } = this.state;\n\n    switch(step) {\n    case 'follows':\n      return <Follows onBack={this.handleBackClick} multiColumn={multiColumn} />;\n    case 'share':\n      return <Share onBack={this.handleBackClick} multiColumn={multiColumn} />;\n    }\n\n    return (\n      <Column>\n        <div className='scrollable privacy-policy'>\n          <div className='column-title'>\n            <img src={illustration} alt='' className='onboarding__illustration' />\n            <h3><FormattedMessage id='onboarding.start.title' defaultMessage=\"You've made it!\" /></h3>\n            <p><FormattedMessage id='onboarding.start.lead' defaultMessage=\"Your new Mastodon account is ready to go. Here's how you can make the most of it:\" /></p>\n          </div>\n\n          <div className='onboarding__steps'>\n            <Step onClick={this.handleProfileClick} href='/settings/profile' completed={(!account.get('avatar').endsWith('missing.png')) || (account.get('display_name').length > 0 && account.get('note').length > 0)} icon='address-book-o' iconComponent={AccountCircleIcon} label={<FormattedMessage id='onboarding.steps.setup_profile.title' defaultMessage='Customize your profile' />} description={<FormattedMessage id='onboarding.steps.setup_profile.body' defaultMessage='Others are more likely to interact with you with a filled out profile.' />} />\n            <Step onClick={this.handleFollowClick} completed={(account.get('following_count') * 1) >= 7} icon='user-plus' iconComponent={PersonAddIcon} label={<FormattedMessage id='onboarding.steps.follow_people.title' defaultMessage='Find at least {count, plural, one {one person} other {# people}} to follow' values={{ count: 7 }} />} description={<FormattedMessage id='onboarding.steps.follow_people.body' defaultMessage=\"You curate your own home feed. Let's fill it with interesting people.\" />} />\n            <Step onClick={this.handleComposeClick} completed={(account.get('statuses_count') * 1) >= 1} icon='pencil-square-o' iconComponent={EditNoteIcon} label={<FormattedMessage id='onboarding.steps.publish_status.title' defaultMessage='Make your first post' />} description={<FormattedMessage id='onboarding.steps.publish_status.body' defaultMessage='Say hello to the world.' values={{ emoji: <img className='emojione' alt='🐘' src={`${assetHost}/emoji/1f418.svg`} /> }} />} />\n            <Step onClick={this.handleShareClick} completed={shareClicked} icon='copy' iconComponent={ContentCopyIcon} label={<FormattedMessage id='onboarding.steps.share_profile.title' defaultMessage='Share your profile' />} description={<FormattedMessage id='onboarding.steps.share_profile.body' defaultMessage='Let your friends know how to find you on Mastodon!' />} />\n          </div>\n\n          <p className='onboarding__lead'><FormattedMessage id='onboarding.start.skip' defaultMessage=\"Don't need help getting started?\" /></p>\n\n          <div className='onboarding__links'>\n            <Link to='/explore' className='onboarding__link'>\n              <FormattedMessage id='onboarding.actions.go_to_explore' defaultMessage='Take me to trending' />\n              <Icon icon={ArrowRightAltIcon} />\n            </Link>\n\n            <Link to='/home' className='onboarding__link'>\n              <FormattedMessage id='onboarding.actions.go_to_home' defaultMessage='Take me to my home feed' />\n              <Icon icon={ArrowRightAltIcon} />\n            </Link>\n          </div>\n        </div>\n\n        <Helmet>\n          <meta name='robots' content='noindex' />\n        </Helmet>\n      </Column>\n    );\n  }\n\n}\n\nexport default withRouter(connect(mapStateToProps)(injectIntl(Onboarding)));\n"],"sourceRoot":""}