{"version":3,"sources":["webpack:///./node_modules/@material-symbols/svg-600/outlined/delete.svg","webpack:///./app/javascript/mastodon/features/list_timeline/index.jsx"],"names":["_path","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","SvgDelete","_ref","title","titleId","props","xmlns","width","height","viewBox","id","d","messages","defineMessages","deleteMessage","defaultMessage","deleteConfirm","followed","none","list","ListTimeline","PureComponent","constructor","handlePin","columnId","dispatch","removeColumn","addColumn","params","history","push","handleMove","dir","moveColumn","handleHeaderClick","column","scrollTop","setRef","c","handleLoadMore","maxId","expandListTimeline","handleEditClick","openModal","modalType","modalProps","listId","handleDeleteClick","intl","message","formatMessage","confirm","onConfirm","deleteList","handleRepliesPolicyChange","updateList","undefined","value","onExclusiveToggle","_ref2","checked","componentDidMount","fetchList","disconnect","connectListStream","UNSAFE_componentWillReceiveProps","nextProps","componentWillUnmount","render","hasUnread","multiColumn","pinned","get","replies_policy","isExclusive","_jsx","Column","className","LoadingIndicator","BundleColumnError","errorType","_jsxs","bindToDocument","ref","label","children","ColumnHeader","icon","iconComponent","ListAltIcon","active","onPin","onMove","onClick","type","tabIndex","Icon","EditIcon","FormattedMessage","DeleteIcon","Toggle","defaultChecked","onChange","htmlFor","role","map","policy","RadioButton","name","StatusListContainer","trackScroll","scrollKey","timelineId","onLoadMore","emptyMessage","Helmet","content","withRouter","connect","mapStateToProps","state","getIn","injectIntl"],"mappings":"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","file":"js/features/list_timeline-d702f58d3d72369fab1b.chunk.js","sourcesContent":["var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgDelete(_ref) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 48,\n    height: 48,\n    viewBox: \"0 -960 960 960\",\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M256.478-105.869q-33.49 0-56.637-22.981-23.147-22.98-23.147-56.237v-560.391h-50.609v-79.218h212.306v-40.175h282.653v40.175h212.871v79.218h-50.609v560.391q0 32.507-23.522 55.862-23.522 23.356-56.262 23.356H256.478Zm447.044-639.609H256.478v560.391h447.044v-560.391Zm-343.87 478.913h69.609v-399h-69.609v399Zm171.087 0h70.174v-399h-70.174v399ZM256.478-745.478v560.391-560.391Z\"\n  })));\n}\nexport default __webpack_public_path__ + \"media/outlined/delete-3304c184.svg\";\nexport { SvgDelete as ReactComponent };","import PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport { Helmet } from 'react-helmet';\nimport { withRouter } from 'react-router-dom';\n\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport { connect } from 'react-redux';\n\nimport { ReactComponent as DeleteIcon } from '@material-symbols/svg-600/outlined/delete.svg';\nimport { ReactComponent as EditIcon } from '@material-symbols/svg-600/outlined/edit.svg';\nimport { ReactComponent as ListAltIcon } from '@material-symbols/svg-600/outlined/list_alt.svg';\nimport Toggle from 'react-toggle';\n\nimport { addColumn, removeColumn, moveColumn } from 'mastodon/actions/columns';\nimport { fetchList, deleteList, updateList } from 'mastodon/actions/lists';\nimport { openModal } from 'mastodon/actions/modal';\nimport { connectListStream } from 'mastodon/actions/streaming';\nimport { expandListTimeline } from 'mastodon/actions/timelines';\nimport Column from 'mastodon/components/column';\nimport ColumnHeader from 'mastodon/components/column_header';\nimport { Icon }  from 'mastodon/components/icon';\nimport { LoadingIndicator } from 'mastodon/components/loading_indicator';\nimport { RadioButton } from 'mastodon/components/radio_button';\nimport BundleColumnError from 'mastodon/features/ui/components/bundle_column_error';\nimport StatusListContainer from 'mastodon/features/ui/containers/status_list_container';\nimport { WithRouterPropTypes } from 'mastodon/utils/react_router';\n\nconst messages = defineMessages({\n  deleteMessage: { id: 'confirmations.delete_list.message', defaultMessage: 'Are you sure you want to permanently delete this list?' },\n  deleteConfirm: { id: 'confirmations.delete_list.confirm', defaultMessage: 'Delete' },\n  followed:   { id: 'lists.replies_policy.followed', defaultMessage: 'Any followed user' },\n  none:    { id: 'lists.replies_policy.none', defaultMessage: 'No one' },\n  list:  { id: 'lists.replies_policy.list', defaultMessage: 'Members of the list' },\n});\n\nconst mapStateToProps = (state, props) => ({\n  list: state.getIn(['lists', props.params.id]),\n  hasUnread: state.getIn(['timelines', `list:${props.params.id}`, 'unread']) > 0,\n});\n\nclass ListTimeline extends PureComponent {\n\n  static propTypes = {\n    params: PropTypes.object.isRequired,\n    dispatch: PropTypes.func.isRequired,\n    columnId: PropTypes.string,\n    hasUnread: PropTypes.bool,\n    multiColumn: PropTypes.bool,\n    list: PropTypes.oneOfType([ImmutablePropTypes.map, PropTypes.bool]),\n    intl: PropTypes.object.isRequired,\n    ...WithRouterPropTypes,\n  };\n\n  handlePin = () => {\n    const { columnId, dispatch } = this.props;\n\n    if (columnId) {\n      dispatch(removeColumn(columnId));\n    } else {\n      dispatch(addColumn('LIST', { id: this.props.params.id }));\n      this.props.history.push('/');\n    }\n  };\n\n  handleMove = (dir) => {\n    const { columnId, dispatch } = this.props;\n    dispatch(moveColumn(columnId, dir));\n  };\n\n  handleHeaderClick = () => {\n    this.column.scrollTop();\n  };\n\n  componentDidMount () {\n    const { dispatch } = this.props;\n    const { id } = this.props.params;\n\n    dispatch(fetchList(id));\n    dispatch(expandListTimeline(id));\n\n    this.disconnect = dispatch(connectListStream(id));\n  }\n\n  UNSAFE_componentWillReceiveProps (nextProps) {\n    const { dispatch } = this.props;\n    const { id } = nextProps.params;\n\n    if (id !== this.props.params.id) {\n      if (this.disconnect) {\n        this.disconnect();\n        this.disconnect = null;\n      }\n\n      dispatch(fetchList(id));\n      dispatch(expandListTimeline(id));\n\n      this.disconnect = dispatch(connectListStream(id));\n    }\n  }\n\n  componentWillUnmount () {\n    if (this.disconnect) {\n      this.disconnect();\n      this.disconnect = null;\n    }\n  }\n\n  setRef = c => {\n    this.column = c;\n  };\n\n  handleLoadMore = maxId => {\n    const { id } = this.props.params;\n    this.props.dispatch(expandListTimeline(id, { maxId }));\n  };\n\n  handleEditClick = () => {\n    this.props.dispatch(openModal({\n      modalType: 'LIST_EDITOR',\n      modalProps: { listId: this.props.params.id },\n    }));\n  };\n\n  handleDeleteClick = () => {\n    const { dispatch, columnId, intl } = this.props;\n    const { id } = this.props.params;\n\n    dispatch(openModal({\n      modalType: 'CONFIRM',\n      modalProps: {\n        message: intl.formatMessage(messages.deleteMessage),\n        confirm: intl.formatMessage(messages.deleteConfirm),\n        onConfirm: () => {\n          dispatch(deleteList(id));\n\n          if (columnId) {\n            dispatch(removeColumn(columnId));\n          } else {\n            this.props.history.push('/lists');\n          }\n        },\n      },\n    }));\n  };\n\n  handleRepliesPolicyChange = ({ target }) => {\n    const { dispatch } = this.props;\n    const { id } = this.props.params;\n    dispatch(updateList(id, undefined, false, undefined, target.value));\n  };\n\n  onExclusiveToggle = ({ target }) => {\n    const { dispatch } = this.props;\n    const { id } = this.props.params;\n    dispatch(updateList(id, undefined, false, target.checked, undefined));\n  };\n\n  render () {\n    const { hasUnread, columnId, multiColumn, list, intl } = this.props;\n    const { id } = this.props.params;\n    const pinned = !!columnId;\n    const title  = list ? list.get('title') : id;\n    const replies_policy = list ? list.get('replies_policy') : undefined;\n    const isExclusive = list ? list.get('exclusive') : undefined;\n\n    if (typeof list === 'undefined') {\n      return (\n        <Column>\n          <div className='scrollable'>\n            <LoadingIndicator />\n          </div>\n        </Column>\n      );\n    } else if (list === false) {\n      return (\n        <BundleColumnError multiColumn={multiColumn} errorType='routing' />\n      );\n    }\n\n    return (\n      <Column bindToDocument={!multiColumn} ref={this.setRef} label={title}>\n        <ColumnHeader\n          icon='list-ul'\n          iconComponent={ListAltIcon}\n          active={hasUnread}\n          title={title}\n          onPin={this.handlePin}\n          onMove={this.handleMove}\n          onClick={this.handleHeaderClick}\n          pinned={pinned}\n          multiColumn={multiColumn}\n        >\n          <div className='column-settings__row column-header__links'>\n            <button type='button' className='text-btn column-header__setting-btn' tabIndex={0} onClick={this.handleEditClick}>\n              <Icon id='pencil' icon={EditIcon} /> <FormattedMessage id='lists.edit' defaultMessage='Edit list' />\n            </button>\n\n            <button type='button' className='text-btn column-header__setting-btn' tabIndex={0} onClick={this.handleDeleteClick}>\n              <Icon id='trash' icon={DeleteIcon} /> <FormattedMessage id='lists.delete' defaultMessage='Delete list' />\n            </button>\n          </div>\n\n          <div className='setting-toggle'>\n            <Toggle id={`list-${id}-exclusive`} defaultChecked={isExclusive} onChange={this.onExclusiveToggle} />\n            <label htmlFor={`list-${id}-exclusive`} className='setting-toggle__label'>\n              <FormattedMessage id='lists.exclusive' defaultMessage='Hide these posts from home' />\n            </label>\n          </div>\n\n          { replies_policy !== undefined && (\n            <div role='group' aria-labelledby={`list-${id}-replies-policy`}>\n              <span id={`list-${id}-replies-policy`} className='column-settings__section'>\n                <FormattedMessage id='lists.replies_policy.title' defaultMessage='Show replies to:' />\n              </span>\n              <div className='column-settings__row'>\n                { ['none', 'list', 'followed'].map(policy => (\n                  <RadioButton name='order' key={policy} value={policy} label={intl.formatMessage(messages[policy])} checked={replies_policy === policy} onChange={this.handleRepliesPolicyChange} />\n                ))}\n              </div>\n            </div>\n          )}\n        </ColumnHeader>\n\n        <StatusListContainer\n          trackScroll={!pinned}\n          scrollKey={`list_timeline-${columnId}`}\n          timelineId={`list:${id}`}\n          onLoadMore={this.handleLoadMore}\n          emptyMessage={<FormattedMessage id='empty_column.list' defaultMessage='There is nothing in this list yet. When members of this list post new statuses, they will appear here.' />}\n          bindToDocument={!multiColumn}\n        />\n\n        <Helmet>\n          <title>{title}</title>\n          <meta name='robots' content='noindex' />\n        </Helmet>\n      </Column>\n    );\n  }\n\n}\n\nexport default withRouter(connect(mapStateToProps)(injectIntl(ListTimeline)));\n"],"sourceRoot":""}