{"version":3,"sources":["webpack:///./node_modules/@material-symbols/svg-600/outlined/campaign.svg","webpack:///./app/javascript/mastodon/features/getting_started/components/announcements.jsx","webpack:///./app/javascript/mastodon/features/getting_started/containers/announcements_container.js","webpack:///./app/javascript/mastodon/features/home_timeline/components/column_settings.tsx","webpack:///./app/javascript/mastodon/features/home_timeline/components/critical_update_banner.tsx","webpack:///./app/javascript/mastodon/features/home_timeline/components/explore_prompt.tsx","webpack:///./app/javascript/mastodon/features/home_timeline/index.jsx"],"names":["_path","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","SvgCampaign","_ref","title","titleId","props","xmlns","width","height","viewBox","id","d","messages","defineMessages","close","defaultMessage","previous","next","ContentWithRouter","ImmutablePureComponent","constructor","_defineProperty","c","node","mention","e","history","button","ctrlKey","metaKey","preventDefault","push","get","hashtag","replace","status","getIn","currentTarget","autoPlayGif","emojis","querySelectorAll","emoji","src","getAttribute","_ref2","componentDidMount","_updateLinks","componentDidUpdate","links","link","classList","contains","add","announcement","find","item","href","addEventListener","onMentionClick","setAttribute","textContent","previousSibling","onHashtagClick","text","onStatusClick","render","_jsx","className","ref","setRef","dangerouslySetInnerHTML","__html","onMouseEnter","handleMouseEnter","onMouseLeave","handleMouseLeave","ImmutablePropTypes","map","isRequired","WithRouterPropTypes","Content","withRouter","Emoji","PureComponent","emojiMap","hovered","unicodeMapping","filename","shortCode","_jsx2","draggable","alt","assetHost","Reaction","reaction","announcementId","addReaction","removeReaction","setState","classNames","active","onClick","handleClick","style","state","AnimatedNumber","value","PropTypes","string","func","object","ReactionsBar","data","native","willEnter","scale","reduceMotion","willLeave","spring","stiffness","damping","reactions","visibleReactions","filter","x","styles","toArray","TransitionMotion","items","isEmpty","_ref3","transform","position","size","EmojiPickerDropdown","onPickEmoji","handleEmojiPick","Icon","icon","AddIcon","list","Announcement","unread","selected","startsAt","Date","endsAt","now","hasTimeRange","skipYear","getFullYear","skipEndDate","getDate","getMonth","skipTime","FormattedMessage","FormattedDate","hour12","year","undefined","month","day","hour","minute","intl","bool","Announcements","index","announcements","getDerivedStateFromProps","_markAnnouncementAsRead","dismissAnnouncement","mascot","elephantUIPlane","ReactSwipeableViews","animateHeight","animateTransitions","onChangeIndex","handleChangeIndex","idx","disabled","disableSwiping","reverse","IconButton","formatMessage","iconComponent","ChevronLeftIcon","handlePrevClick","ChevronRightIcon","handleNextClick","injectIntl","customEmojiMap","createSelector","reduce","set","ImmutableMap","connect","dispatch","name","ColumnSettings","settings","useAppSelector","useAppDispatch","onChange","useCallback","checked","changeSetting","SettingToggle","prefix","settingPath","label","CriticalUpdateBanner","ExplorePrompt","DismissableBanner","background","Link","to","show_announcements","hide_announcements","getHomeFeedSpeed","ImmutableList","statusIds","pendingStatusIds","statusMap","statuses","concat","me","take","gap","newest","datetimes","oldest","min","max","homeTooSlow","isLoading","isPartial","speed","HomeTimeline","columnId","removeColumn","addColumn","dir","moveColumn","column","scrollTop","maxId","expandHomeTimeline","stopPropagation","toggleShowAnnouncements","setTimeout","fetchAnnouncements","_checkIfReloadNeeded","prevProps","componentWillUnmount","_stopPolling","wasPartial","polling","setInterval","clearInterval","hasUnread","multiColumn","tooSlow","hasAnnouncements","unreadAnnouncements","showAnnouncements","pinned","signedIn","context","identity","banners","announcementsButton","type","handleToggleAnnouncementsClick","IconWithBadge","CampaignIcon","count","criticalUpdatesPending","_jsxs","Column","bindToDocument","children","ColumnHeader","HomeIcon","onPin","handlePin","onMove","handleMove","handleHeaderClick","extraButton","appendContent","AnnouncementsContainer","StatusListContainer","prepend","alwaysPrepend","trackScroll","scrollKey","onLoadMore","handleLoadMore","timelineId","emptyMessage","NotSignedInIndicator","Helmet","content"],"mappings":"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","file":"js/features/home_timeline-cea967bedc3587fae6bb.chunk.js","sourcesContent":["var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgCampaign(_ref) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 48,\n    height: 48,\n    viewBox: \"0 -960 960 960\",\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M736.218-443.782v-72.436h169.783v72.436H736.218Zm63.566 296.783L662.957-248.87l43.913-58.174 136.262 101.305-43.348 58.74ZM709.87-653.956l-43.913-58.174 133.827-100.871 43.348 58.175-133.262 100.87ZM183.999-185.869v-160h-57q-30.967-2.261-51.984-25.291Q54-394.19 54-425.087v-109.826q0-32.91 23.436-56.347 23.437-23.436 56.347-23.436h170.391l218.653-130.74v530.872L304.173-345.869h-38.13v160h-82.044Zm259.044-168.61v-251.042L324.13-534.913H133.782v109.826H324.13l118.913 70.608Zm119.783 22.61v-296.827q33.218 25.695 53.109 64.435 19.892 38.739 19.892 84.261t-19.779 84.207q-19.778 38.684-53.222 63.924ZM288.695-480Z\"\n  })));\n}\nexport default __webpack_public_path__ + \"media/outlined/campaign-c40e8583.svg\";\nexport { SvgCampaign as ReactComponent };","import PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport { defineMessages, injectIntl, FormattedMessage, FormattedDate } from 'react-intl';\n\nimport classNames from 'classnames';\nimport { withRouter } from 'react-router-dom';\n\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\n\nimport { ReactComponent as AddIcon } from '@material-symbols/svg-600/outlined/add.svg';\nimport { ReactComponent as ChevronLeftIcon } from '@material-symbols/svg-600/outlined/chevron_left.svg';\nimport { ReactComponent as ChevronRightIcon } from '@material-symbols/svg-600/outlined/chevron_right.svg';\nimport TransitionMotion from 'react-motion/lib/TransitionMotion';\nimport spring from 'react-motion/lib/spring';\nimport ReactSwipeableViews from 'react-swipeable-views';\n\nimport elephantUIPlane from 'mastodon/../images/elephant_ui_plane.svg';\nimport { AnimatedNumber } from 'mastodon/components/animated_number';\nimport { Icon }  from 'mastodon/components/icon';\nimport { IconButton } from 'mastodon/components/icon_button';\nimport EmojiPickerDropdown from 'mastodon/features/compose/containers/emoji_picker_dropdown_container';\nimport { unicodeMapping } from 'mastodon/features/emoji/emoji_unicode_mapping_light';\nimport { autoPlayGif, reduceMotion, disableSwiping, mascot } from 'mastodon/initial_state';\nimport { assetHost } from 'mastodon/utils/config';\nimport { WithRouterPropTypes } from 'mastodon/utils/react_router';\n\nconst messages = defineMessages({\n  close: { id: 'lightbox.close', defaultMessage: 'Close' },\n  previous: { id: 'lightbox.previous', defaultMessage: 'Previous' },\n  next: { id: 'lightbox.next', defaultMessage: 'Next' },\n});\n\nclass ContentWithRouter extends ImmutablePureComponent {\n  static propTypes = {\n    announcement: ImmutablePropTypes.map.isRequired,\n    ...WithRouterPropTypes,\n  };\n\n  setRef = c => {\n    this.node = c;\n  };\n\n  componentDidMount () {\n    this._updateLinks();\n  }\n\n  componentDidUpdate () {\n    this._updateLinks();\n  }\n\n  _updateLinks () {\n    const node = this.node;\n\n    if (!node) {\n      return;\n    }\n\n    const links = node.querySelectorAll('a');\n\n    for (var i = 0; i < links.length; ++i) {\n      let link = links[i];\n\n      if (link.classList.contains('status-link')) {\n        continue;\n      }\n\n      link.classList.add('status-link');\n\n      let mention = this.props.announcement.get('mentions').find(item => link.href === item.get('url'));\n\n      if (mention) {\n        link.addEventListener('click', this.onMentionClick.bind(this, mention), false);\n        link.setAttribute('title', mention.get('acct'));\n      } else if (link.textContent[0] === '#' || (link.previousSibling && link.previousSibling.textContent && link.previousSibling.textContent[link.previousSibling.textContent.length - 1] === '#')) {\n        link.addEventListener('click', this.onHashtagClick.bind(this, link.text), false);\n      } else {\n        let status = this.props.announcement.get('statuses').find(item => link.href === item.get('url'));\n        if (status) {\n          link.addEventListener('click', this.onStatusClick.bind(this, status), false);\n        }\n        link.setAttribute('title', link.href);\n        link.classList.add('unhandled-link');\n      }\n\n      link.setAttribute('target', '_blank');\n      link.setAttribute('rel', 'noopener noreferrer');\n    }\n  }\n\n  onMentionClick = (mention, e) => {\n    if (this.props.history && e.button === 0 && !(e.ctrlKey || e.metaKey)) {\n      e.preventDefault();\n      this.props.history.push(`/@${mention.get('acct')}`);\n    }\n  };\n\n  onHashtagClick = (hashtag, e) => {\n    hashtag = hashtag.replace(/^#/, '');\n\n    if (this.props.history&& e.button === 0 && !(e.ctrlKey || e.metaKey)) {\n      e.preventDefault();\n      this.props.history.push(`/tags/${hashtag}`);\n    }\n  };\n\n  onStatusClick = (status, e) => {\n    if (this.props.history && e.button === 0 && !(e.ctrlKey || e.metaKey)) {\n      e.preventDefault();\n      this.props.history.push(`/@${status.getIn(['account', 'acct'])}/${status.get('id')}`);\n    }\n  };\n\n  handleMouseEnter = ({ currentTarget }) => {\n    if (autoPlayGif) {\n      return;\n    }\n\n    const emojis = currentTarget.querySelectorAll('.custom-emoji');\n\n    for (var i = 0; i < emojis.length; i++) {\n      let emoji = emojis[i];\n      emoji.src = emoji.getAttribute('data-original');\n    }\n  };\n\n  handleMouseLeave = ({ currentTarget }) => {\n    if (autoPlayGif) {\n      return;\n    }\n\n    const emojis = currentTarget.querySelectorAll('.custom-emoji');\n\n    for (var i = 0; i < emojis.length; i++) {\n      let emoji = emojis[i];\n      emoji.src = emoji.getAttribute('data-static');\n    }\n  };\n\n  render () {\n    const { announcement } = this.props;\n\n    return (\n      <div\n        className='announcements__item__content translate'\n        ref={this.setRef}\n        dangerouslySetInnerHTML={{ __html: announcement.get('contentHtml') }}\n        onMouseEnter={this.handleMouseEnter}\n        onMouseLeave={this.handleMouseLeave}\n      />\n    );\n  }\n\n}\n\nconst Content = withRouter(ContentWithRouter);\n\nclass Emoji extends PureComponent {\n\n  static propTypes = {\n    emoji: PropTypes.string.isRequired,\n    emojiMap: ImmutablePropTypes.map.isRequired,\n    hovered: PropTypes.bool.isRequired,\n  };\n\n  render () {\n    const { emoji, emojiMap, hovered } = this.props;\n\n    if (unicodeMapping[emoji]) {\n      const { filename, shortCode } = unicodeMapping[this.props.emoji];\n      const title = shortCode ? `:${shortCode}:` : '';\n\n      return (\n        <img\n          draggable='false'\n          className='emojione'\n          alt={emoji}\n          title={title}\n          src={`${assetHost}/emoji/${filename}.svg`}\n        />\n      );\n    } else if (emojiMap.get(emoji)) {\n      const filename  = (autoPlayGif || hovered) ? emojiMap.getIn([emoji, 'url']) : emojiMap.getIn([emoji, 'static_url']);\n      const shortCode = `:${emoji}:`;\n\n      return (\n        <img\n          draggable='false'\n          className='emojione custom-emoji'\n          alt={shortCode}\n          title={shortCode}\n          src={filename}\n        />\n      );\n    } else {\n      return null;\n    }\n  }\n\n}\n\nclass Reaction extends ImmutablePureComponent {\n\n  static propTypes = {\n    announcementId: PropTypes.string.isRequired,\n    reaction: ImmutablePropTypes.map.isRequired,\n    addReaction: PropTypes.func.isRequired,\n    removeReaction: PropTypes.func.isRequired,\n    emojiMap: ImmutablePropTypes.map.isRequired,\n    style: PropTypes.object,\n  };\n\n  state = {\n    hovered: false,\n  };\n\n  handleClick = () => {\n    const { reaction, announcementId, addReaction, removeReaction } = this.props;\n\n    if (reaction.get('me')) {\n      removeReaction(announcementId, reaction.get('name'));\n    } else {\n      addReaction(announcementId, reaction.get('name'));\n    }\n  };\n\n  handleMouseEnter = () => this.setState({ hovered: true });\n\n  handleMouseLeave = () => this.setState({ hovered: false });\n\n  render () {\n    const { reaction } = this.props;\n\n    let shortCode = reaction.get('name');\n\n    if (unicodeMapping[shortCode]) {\n      shortCode = unicodeMapping[shortCode].shortCode;\n    }\n\n    return (\n      <button className={classNames('reactions-bar__item', { active: reaction.get('me') })} onClick={this.handleClick} onMouseEnter={this.handleMouseEnter} onMouseLeave={this.handleMouseLeave} title={`:${shortCode}:`} style={this.props.style}>\n        <span className='reactions-bar__item__emoji'><Emoji hovered={this.state.hovered} emoji={reaction.get('name')} emojiMap={this.props.emojiMap} /></span>\n        <span className='reactions-bar__item__count'><AnimatedNumber value={reaction.get('count')} /></span>\n      </button>\n    );\n  }\n\n}\n\nclass ReactionsBar extends ImmutablePureComponent {\n\n  static propTypes = {\n    announcementId: PropTypes.string.isRequired,\n    reactions: ImmutablePropTypes.list.isRequired,\n    addReaction: PropTypes.func.isRequired,\n    removeReaction: PropTypes.func.isRequired,\n    emojiMap: ImmutablePropTypes.map.isRequired,\n  };\n\n  handleEmojiPick = data => {\n    const { addReaction, announcementId } = this.props;\n    addReaction(announcementId, data.native.replace(/:/g, ''));\n  };\n\n  willEnter () {\n    return { scale: reduceMotion ? 1 : 0 };\n  }\n\n  willLeave () {\n    return { scale: reduceMotion ? 0 : spring(0, { stiffness: 170, damping: 26 }) };\n  }\n\n  render () {\n    const { reactions } = this.props;\n    const visibleReactions = reactions.filter(x => x.get('count') > 0);\n\n    const styles = visibleReactions.map(reaction => ({\n      key: reaction.get('name'),\n      data: reaction,\n      style: { scale: reduceMotion ? 1 : spring(1, { stiffness: 150, damping: 13 }) },\n    })).toArray();\n\n    return (\n      <TransitionMotion styles={styles} willEnter={this.willEnter} willLeave={this.willLeave}>\n        {items => (\n          <div className={classNames('reactions-bar', { 'reactions-bar--empty': visibleReactions.isEmpty() })}>\n            {items.map(({ key, data, style }) => (\n              <Reaction\n                key={key}\n                reaction={data}\n                style={{ transform: `scale(${style.scale})`, position: style.scale < 0.5 ? 'absolute' : 'static' }}\n                announcementId={this.props.announcementId}\n                addReaction={this.props.addReaction}\n                removeReaction={this.props.removeReaction}\n                emojiMap={this.props.emojiMap}\n              />\n            ))}\n\n            {visibleReactions.size < 8 && <EmojiPickerDropdown onPickEmoji={this.handleEmojiPick} button={<Icon id='plus' icon={AddIcon} />} />}\n          </div>\n        )}\n      </TransitionMotion>\n    );\n  }\n\n}\n\nclass Announcement extends ImmutablePureComponent {\n\n  static propTypes = {\n    announcement: ImmutablePropTypes.map.isRequired,\n    emojiMap: ImmutablePropTypes.map.isRequired,\n    addReaction: PropTypes.func.isRequired,\n    removeReaction: PropTypes.func.isRequired,\n    intl: PropTypes.object.isRequired,\n    selected: PropTypes.bool,\n  };\n\n  state = {\n    unread: !this.props.announcement.get('read'),\n  };\n\n  componentDidUpdate () {\n    const { selected, announcement } = this.props;\n    if (!selected && this.state.unread !== !announcement.get('read')) {\n      this.setState({ unread: !announcement.get('read') });\n    }\n  }\n\n  render () {\n    const { announcement } = this.props;\n    const { unread } = this.state;\n    const startsAt = announcement.get('starts_at') && new Date(announcement.get('starts_at'));\n    const endsAt = announcement.get('ends_at') && new Date(announcement.get('ends_at'));\n    const now = new Date();\n    const hasTimeRange = startsAt && endsAt;\n    const skipYear = hasTimeRange && startsAt.getFullYear() === endsAt.getFullYear() && endsAt.getFullYear() === now.getFullYear();\n    const skipEndDate = hasTimeRange && startsAt.getDate() === endsAt.getDate() && startsAt.getMonth() === endsAt.getMonth() && startsAt.getFullYear() === endsAt.getFullYear();\n    const skipTime = announcement.get('all_day');\n\n    return (\n      <div className='announcements__item'>\n        <strong className='announcements__item__range'>\n          <FormattedMessage id='announcement.announcement' defaultMessage='Announcement' />\n          {hasTimeRange && <span> · <FormattedDate value={startsAt} hour12={false} year={(skipYear || startsAt.getFullYear() === now.getFullYear()) ? undefined : 'numeric'} month='short' day='2-digit' hour={skipTime ? undefined : '2-digit'} minute={skipTime ? undefined : '2-digit'} /> - <FormattedDate value={endsAt} hour12={false} year={(skipYear || endsAt.getFullYear() === now.getFullYear()) ? undefined : 'numeric'} month={skipEndDate ? undefined : 'short'} day={skipEndDate ? undefined : '2-digit'} hour={skipTime ? undefined : '2-digit'} minute={skipTime ? undefined : '2-digit'} /></span>}\n        </strong>\n\n        <Content announcement={announcement} />\n\n        <ReactionsBar\n          reactions={announcement.get('reactions')}\n          announcementId={announcement.get('id')}\n          addReaction={this.props.addReaction}\n          removeReaction={this.props.removeReaction}\n          emojiMap={this.props.emojiMap}\n        />\n\n        {unread && <span className='announcements__item__unread' />}\n      </div>\n    );\n  }\n\n}\n\nclass Announcements extends ImmutablePureComponent {\n\n  static propTypes = {\n    announcements: ImmutablePropTypes.list,\n    emojiMap: ImmutablePropTypes.map.isRequired,\n    dismissAnnouncement: PropTypes.func.isRequired,\n    addReaction: PropTypes.func.isRequired,\n    removeReaction: PropTypes.func.isRequired,\n    intl: PropTypes.object.isRequired,\n  };\n\n  state = {\n    index: 0,\n  };\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.announcements.size > 0 && state.index >= props.announcements.size) {\n      return { index: props.announcements.size - 1 };\n    } else {\n      return null;\n    }\n  }\n\n  componentDidMount () {\n    this._markAnnouncementAsRead();\n  }\n\n  componentDidUpdate () {\n    this._markAnnouncementAsRead();\n  }\n\n  _markAnnouncementAsRead () {\n    const { dismissAnnouncement, announcements } = this.props;\n    const { index } = this.state;\n    const announcement = announcements.get(announcements.size - 1 - index);\n    if (!announcement.get('read')) dismissAnnouncement(announcement.get('id'));\n  }\n\n  handleChangeIndex = index => {\n    this.setState({ index: index % this.props.announcements.size });\n  };\n\n  handleNextClick = () => {\n    this.setState({ index: (this.state.index + 1) % this.props.announcements.size });\n  };\n\n  handlePrevClick = () => {\n    this.setState({ index: (this.props.announcements.size + this.state.index - 1) % this.props.announcements.size });\n  };\n\n  render () {\n    const { announcements, intl } = this.props;\n    const { index } = this.state;\n\n    if (announcements.isEmpty()) {\n      return null;\n    }\n\n    return (\n      <div className='announcements'>\n        <img className='announcements__mastodon' alt='' draggable='false' src={mascot || elephantUIPlane} />\n\n        <div className='announcements__container'>\n          <ReactSwipeableViews animateHeight animateTransitions={!reduceMotion} index={index} onChangeIndex={this.handleChangeIndex}>\n            {announcements.map((announcement, idx) => (\n              <Announcement\n                key={announcement.get('id')}\n                announcement={announcement}\n                emojiMap={this.props.emojiMap}\n                addReaction={this.props.addReaction}\n                removeReaction={this.props.removeReaction}\n                intl={intl}\n                selected={index === idx}\n                disabled={disableSwiping}\n              />\n            )).reverse()}\n          </ReactSwipeableViews>\n\n          {announcements.size > 1 && (\n            <div className='announcements__pagination'>\n              <IconButton disabled={announcements.size === 1} title={intl.formatMessage(messages.previous)} icon='chevron-left' iconComponent={ChevronLeftIcon} onClick={this.handlePrevClick} size={13} />\n              <span>{index + 1} / {announcements.size}</span>\n              <IconButton disabled={announcements.size === 1} title={intl.formatMessage(messages.next)} icon='chevron-right' iconComponent={ChevronRightIcon} onClick={this.handleNextClick} size={13} />\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n\n}\n\nexport default injectIntl(Announcements);\n","import { Map as ImmutableMap } from 'immutable';\nimport { connect } from 'react-redux';\nimport { createSelector } from 'reselect';\n\nimport { addReaction, removeReaction, dismissAnnouncement } from 'mastodon/actions/announcements';\n\nimport Announcements from '../components/announcements';\n\nconst customEmojiMap = createSelector([state => state.get('custom_emojis')], items => items.reduce((map, emoji) => map.set(emoji.get('shortcode'), emoji), ImmutableMap()));\n\nconst mapStateToProps = state => ({\n  announcements: state.getIn(['announcements', 'items']),\n  emojiMap: customEmojiMap(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  dismissAnnouncement: id => dispatch(dismissAnnouncement(id)),\n  addReaction: (id, name) => dispatch(addReaction(id, name)),\n  removeReaction: (id, name) => dispatch(removeReaction(id, name)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Announcements);\n","/* eslint-disable @typescript-eslint/no-unsafe-call,\n                  @typescript-eslint/no-unsafe-return,\n                  @typescript-eslint/no-unsafe-assignment,\n                  @typescript-eslint/no-unsafe-member-access\n                  -- the settings store is not yet typed */\nimport { useCallback } from 'react';\n\nimport { FormattedMessage } from 'react-intl';\n\nimport { useAppSelector, useAppDispatch } from 'mastodon/store';\n\nimport { changeSetting } from '../../../actions/settings';\nimport SettingToggle from '../../notifications/components/setting_toggle';\n\nexport const ColumnSettings: React.FC = () => {\n  const settings = useAppSelector((state) => state.settings.get('home'));\n\n  const dispatch = useAppDispatch();\n  const onChange = useCallback(\n    (key: string, checked: boolean) => {\n      dispatch(changeSetting(['home', ...key], checked));\n    },\n    [dispatch],\n  );\n\n  return (\n    <div>\n      <span className='column-settings__section'>\n        <FormattedMessage\n          id='home.column_settings.basic'\n          defaultMessage='Basic'\n        />\n      </span>\n\n      <div className='column-settings__row'>\n        <SettingToggle\n          prefix='home_timeline'\n          settings={settings}\n          settingPath={['shows', 'reblog']}\n          onChange={onChange}\n          label={\n            <FormattedMessage\n              id='home.column_settings.show_reblogs'\n              defaultMessage='Show boosts'\n            />\n          }\n        />\n      </div>\n\n      <div className='column-settings__row'>\n        <SettingToggle\n          prefix='home_timeline'\n          settings={settings}\n          settingPath={['shows', 'reply']}\n          onChange={onChange}\n          label={\n            <FormattedMessage\n              id='home.column_settings.show_replies'\n              defaultMessage='Show replies'\n            />\n          }\n        />\n      </div>\n    </div>\n  );\n};\n","import { FormattedMessage } from 'react-intl';\n\nexport const CriticalUpdateBanner = () => (\n  <div className='warning-banner'>\n    <div className='warning-banner__message'>\n      <h1>\n        <FormattedMessage\n          id='home.pending_critical_update.title'\n          defaultMessage='Critical security update available!'\n        />\n      </h1>\n      <p>\n        <FormattedMessage\n          id='home.pending_critical_update.body'\n          defaultMessage='Please update your Mastodon server as soon as possible!'\n        />{' '}\n        <a href='/admin/software_updates'>\n          <FormattedMessage\n            id='home.pending_critical_update.link'\n            defaultMessage='See updates'\n          />\n        </a>\n      </p>\n    </div>\n  </div>\n);\n","import { FormattedMessage } from 'react-intl';\n\nimport { Link } from 'react-router-dom';\n\nimport background from 'mastodon/../images/friends-cropped.png';\nimport { DismissableBanner } from 'mastodon/components/dismissable_banner';\n\nexport const ExplorePrompt = () => (\n  <DismissableBanner id='home.explore_prompt'>\n    <img\n      src={background}\n      alt=''\n      className='dismissable-banner__background-image'\n    />\n\n    <h1>\n      <FormattedMessage\n        id='home.explore_prompt.title'\n        defaultMessage='This is your home base within Mastodon.'\n      />\n    </h1>\n    <p>\n      <FormattedMessage\n        id='home.explore_prompt.body'\n        defaultMessage=\"Your home feed will have a mix of posts from the hashtags you've chosen to follow, the people you've chosen to follow, and the posts they boost. If that feels too quiet, you may want to:\"\n      />\n    </p>\n\n    <div className='dismissable-banner__message__wrapper'>\n      <div className='dismissable-banner__message__actions'>\n        <Link to='/explore' className='button'>\n          <FormattedMessage\n            id='home.actions.go_to_explore'\n            defaultMessage=\"See what's trending\"\n          />\n        </Link>\n        <Link to='/explore/suggestions' className='button button-tertiary'>\n          <FormattedMessage\n            id='home.actions.go_to_suggestions'\n            defaultMessage='Find people to follow'\n          />\n        </Link>\n      </div>\n    </div>\n  </DismissableBanner>\n);\n","import PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport { defineMessages, injectIntl, FormattedMessage } from 'react-intl';\n\nimport classNames from 'classnames';\nimport { Helmet } from 'react-helmet';\n\nimport { List as ImmutableList } from 'immutable';\nimport { connect } from 'react-redux';\nimport { createSelector } from 'reselect';\n\nimport { ReactComponent as CampaignIcon } from '@material-symbols/svg-600/outlined/campaign.svg';\nimport { ReactComponent as HomeIcon } from '@material-symbols/svg-600/outlined/home-fill.svg';\n\nimport { fetchAnnouncements, toggleShowAnnouncements } from 'mastodon/actions/announcements';\nimport { IconWithBadge } from 'mastodon/components/icon_with_badge';\nimport { NotSignedInIndicator } from 'mastodon/components/not_signed_in_indicator';\nimport AnnouncementsContainer from 'mastodon/features/getting_started/containers/announcements_container';\nimport { me, criticalUpdatesPending } from 'mastodon/initial_state';\n\nimport { addColumn, removeColumn, moveColumn } from '../../actions/columns';\nimport { expandHomeTimeline } from '../../actions/timelines';\nimport Column from '../../components/column';\nimport ColumnHeader from '../../components/column_header';\nimport StatusListContainer from '../ui/containers/status_list_container';\n\nimport { ColumnSettings } from './components/column_settings';\nimport { CriticalUpdateBanner } from './components/critical_update_banner';\nimport { ExplorePrompt } from './components/explore_prompt';\n\nconst messages = defineMessages({\n  title: { id: 'column.home', defaultMessage: 'Home' },\n  show_announcements: { id: 'home.show_announcements', defaultMessage: 'Show announcements' },\n  hide_announcements: { id: 'home.hide_announcements', defaultMessage: 'Hide announcements' },\n});\n\nconst getHomeFeedSpeed = createSelector([\n  state => state.getIn(['timelines', 'home', 'items'], ImmutableList()),\n  state => state.getIn(['timelines', 'home', 'pendingItems'], ImmutableList()),\n  state => state.get('statuses'),\n], (statusIds, pendingStatusIds, statusMap) => {\n  const recentStatusIds = pendingStatusIds.concat(statusIds);\n  const statuses = recentStatusIds.filter(id => id !== null).map(id => statusMap.get(id)).filter(status => status?.get('account') !== me).take(20);\n\n  if (statuses.isEmpty()) {\n    return {\n      gap: 0,\n      newest: new Date(0),\n    };\n  }\n\n  const datetimes = statuses.map(status => status.get('created_at', 0));\n  const oldest = new Date(datetimes.min());\n  const newest = new Date(datetimes.max());\n  const averageGap = (newest - oldest) / (1000 * (statuses.size + 1)); // Average gap between posts on first page in seconds\n\n  return {\n    gap: averageGap,\n    newest,\n  };\n});\n\nconst homeTooSlow = createSelector([\n  state => state.getIn(['timelines', 'home', 'isLoading']),\n  state => state.getIn(['timelines', 'home', 'isPartial']),\n  getHomeFeedSpeed,\n], (isLoading, isPartial, speed) =>\n  !isLoading && !isPartial // Only if the home feed has finished loading\n  && (\n    (speed.gap > (30 * 60) // If the average gap between posts is more than 30 minutes\n    || (Date.now() - speed.newest) > (1000 * 3600)) // If the most recent post is from over an hour ago\n  )\n);\n\nconst mapStateToProps = state => ({\n  hasUnread: state.getIn(['timelines', 'home', 'unread']) > 0,\n  isPartial: state.getIn(['timelines', 'home', 'isPartial']),\n  hasAnnouncements: !state.getIn(['announcements', 'items']).isEmpty(),\n  unreadAnnouncements: state.getIn(['announcements', 'items']).count(item => !item.get('read')),\n  showAnnouncements: state.getIn(['announcements', 'show']),\n  tooSlow: homeTooSlow(state),\n});\n\nclass HomeTimeline extends PureComponent {\n\n  static contextTypes = {\n    identity: PropTypes.object,\n  };\n\n  static propTypes = {\n    dispatch: PropTypes.func.isRequired,\n    intl: PropTypes.object.isRequired,\n    hasUnread: PropTypes.bool,\n    isPartial: PropTypes.bool,\n    columnId: PropTypes.string,\n    multiColumn: PropTypes.bool,\n    hasAnnouncements: PropTypes.bool,\n    unreadAnnouncements: PropTypes.number,\n    showAnnouncements: PropTypes.bool,\n    tooSlow: PropTypes.bool,\n  };\n\n  handlePin = () => {\n    const { columnId, dispatch } = this.props;\n\n    if (columnId) {\n      dispatch(removeColumn(columnId));\n    } else {\n      dispatch(addColumn('HOME', {}));\n    }\n  };\n\n  handleMove = (dir) => {\n    const { columnId, dispatch } = this.props;\n    dispatch(moveColumn(columnId, dir));\n  };\n\n  handleHeaderClick = () => {\n    this.column.scrollTop();\n  };\n\n  setRef = c => {\n    this.column = c;\n  };\n\n  handleLoadMore = maxId => {\n    this.props.dispatch(expandHomeTimeline({ maxId }));\n  };\n\n  componentDidMount () {\n    setTimeout(() => this.props.dispatch(fetchAnnouncements()), 700);\n    this._checkIfReloadNeeded(false, this.props.isPartial);\n  }\n\n  componentDidUpdate (prevProps) {\n    this._checkIfReloadNeeded(prevProps.isPartial, this.props.isPartial);\n  }\n\n  componentWillUnmount () {\n    this._stopPolling();\n  }\n\n  _checkIfReloadNeeded (wasPartial, isPartial) {\n    const { dispatch } = this.props;\n\n    if (wasPartial === isPartial) {\n      return;\n    } else if (!wasPartial && isPartial) {\n      this.polling = setInterval(() => {\n        dispatch(expandHomeTimeline());\n      }, 3000);\n    } else if (wasPartial && !isPartial) {\n      this._stopPolling();\n    }\n  }\n\n  _stopPolling () {\n    if (this.polling) {\n      clearInterval(this.polling);\n      this.polling = null;\n    }\n  }\n\n  handleToggleAnnouncementsClick = (e) => {\n    e.stopPropagation();\n    this.props.dispatch(toggleShowAnnouncements());\n  };\n\n  render () {\n    const { intl, hasUnread, columnId, multiColumn, tooSlow, hasAnnouncements, unreadAnnouncements, showAnnouncements } = this.props;\n    const pinned = !!columnId;\n    const { signedIn } = this.context.identity;\n    const banners = [];\n\n    let announcementsButton;\n\n    if (hasAnnouncements) {\n      announcementsButton = (\n        <button\n          type='button'\n          className={classNames('column-header__button', { 'active': showAnnouncements })}\n          title={intl.formatMessage(showAnnouncements ? messages.hide_announcements : messages.show_announcements)}\n          aria-label={intl.formatMessage(showAnnouncements ? messages.hide_announcements : messages.show_announcements)}\n          onClick={this.handleToggleAnnouncementsClick}\n        >\n          <IconWithBadge id='bullhorn' icon={CampaignIcon} count={unreadAnnouncements} />\n        </button>\n      );\n    }\n\n    if (criticalUpdatesPending) {\n      banners.push(<CriticalUpdateBanner key='critical-update-banner' />);\n    }\n\n    if (tooSlow) {\n      banners.push(<ExplorePrompt key='explore-prompt' />);\n    }\n\n    return (\n      <Column bindToDocument={!multiColumn} ref={this.setRef} label={intl.formatMessage(messages.title)}>\n        <ColumnHeader\n          icon='home'\n          iconComponent={HomeIcon}\n          active={hasUnread}\n          title={intl.formatMessage(messages.title)}\n          onPin={this.handlePin}\n          onMove={this.handleMove}\n          onClick={this.handleHeaderClick}\n          pinned={pinned}\n          multiColumn={multiColumn}\n          extraButton={announcementsButton}\n          appendContent={hasAnnouncements && showAnnouncements && <AnnouncementsContainer />}\n        >\n          <ColumnSettings />\n        </ColumnHeader>\n\n        {signedIn ? (\n          <StatusListContainer\n            prepend={banners}\n            alwaysPrepend\n            trackScroll={!pinned}\n            scrollKey={`home_timeline-${columnId}`}\n            onLoadMore={this.handleLoadMore}\n            timelineId='home'\n            emptyMessage={<FormattedMessage id='empty_column.home' defaultMessage='Your home timeline is empty! Follow more people to fill it up.' />}\n            bindToDocument={!multiColumn}\n          />\n        ) : <NotSignedInIndicator />}\n\n        <Helmet>\n          <title>{intl.formatMessage(messages.title)}</title>\n          <meta name='robots' content='noindex' />\n        </Helmet>\n      </Column>\n    );\n  }\n\n}\n\nexport default connect(mapStateToProps)(injectIntl(HomeTimeline));\n"],"sourceRoot":""}