{"version":3,"sources":["webpack:///./app/javascript/mastodon/features/filters/added_to_filter.jsx","webpack:///./app/javascript/mastodon/features/filters/select_filter.jsx","webpack:///./app/javascript/mastodon/features/ui/components/filter_modal.jsx"],"names":["AddedToFilter","PureComponent","constructor","arguments","handleCloseClick","onClose","this","props","render","filter","contextType","expiredMessage","get","Date","_jsxs","_Fragment","children","_jsx","className","FormattedMessage","id","defaultMessage","contextMismatchMessage","includes","toServerSideType","settings_link","href","values","title","Button","onClick","connect","mapStateToProps","state","_ref","filterId","getIn","messages","defineMessages","search","clear","SelectFilter","searchValue","renderItem","warning","role","tabIndex","handleItemClick","onKeyDown","handleKeyDown","handleSearchChange","_ref2","target","setState","value","setListRef","c","listNode","e","index","Array","from","childNodes","findIndex","node","currentTarget","element","key","click","firstChild","lastChild","shiftKey","focus","preventDefault","stopPropagation","handleSearchKeyDown","handleClear","getAttribute","onSelectFilter","handleNewFilterClick","onNewFilter","filters","fuzzysort","go","keys","limit","threshold","map","result","obj","renderCreateNew","name","Icon","icon","AddIcon","intl","isSearching","results","type","onChange","placeholder","formatMessage","autoFocus","disabled","deleteIcon","loupeIcon","ref","_filter$get","keyword","join","injectIntl","close","FilterModal","ImmutablePureComponent","step","isSubmitting","isSubmitted","handleNewFilterSuccess","handleSelectFilter","handleSuccess","dispatch","statusId","fetchStatus","handleFail","handleNextStep","createFilterStatus","filter_id","status_id","handleNewFilter","createFilter","context","action","componentDidMount","fetchFilters","stepComponent","IconButton","iconComponent","CloseIcon","size","propTypes","PropTypes","string","isRequired","func","object"],"mappings":"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","file":"js/modals/filter_modal-bb17d2710b764af5dd1c.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport { FormattedMessage } from 'react-intl';\n\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport { connect } from 'react-redux';\n\nimport { Button } from 'mastodon/components/button';\nimport { toServerSideType } from 'mastodon/utils/filters';\n\nconst mapStateToProps = (state, { filterId }) => ({\n  filter: state.getIn(['filters', filterId]),\n});\n\nclass AddedToFilter extends PureComponent {\n\n  static propTypes = {\n    onClose: PropTypes.func.isRequired,\n    contextType: PropTypes.string,\n    filter: ImmutablePropTypes.map.isRequired,\n    dispatch: PropTypes.func.isRequired,\n  };\n\n  handleCloseClick = () => {\n    const { onClose } = this.props;\n    onClose();\n  };\n\n  render () {\n    const { filter, contextType } = this.props;\n\n    let expiredMessage = null;\n    if (filter.get('expires_at') && filter.get('expires_at') < new Date()) {\n      expiredMessage = (\n        <>\n          <h4 className='report-dialog-modal__subtitle'><FormattedMessage id='filter_modal.added.expired_title' defaultMessage='Expired filter!' /></h4>\n          <p className='report-dialog-modal__lead'>\n            <FormattedMessage\n              id='filter_modal.added.expired_explanation'\n              defaultMessage='This filter category has expired, you will need to change the expiration date for it to apply.'\n            />\n          </p>\n        </>\n      );\n    }\n\n    let contextMismatchMessage = null;\n    if (contextType && !filter.get('context').includes(toServerSideType(contextType))) {\n      contextMismatchMessage = (\n        <>\n          <h4 className='report-dialog-modal__subtitle'><FormattedMessage id='filter_modal.added.context_mismatch_title' defaultMessage='Context mismatch!' /></h4>\n          <p className='report-dialog-modal__lead'>\n            <FormattedMessage\n              id='filter_modal.added.context_mismatch_explanation'\n              defaultMessage='This filter category does not apply to the context in which you have accessed this post. If you want the post to be filtered in this context too, you will have to edit the filter.'\n            />\n          </p>\n        </>\n      );\n    }\n\n    const settings_link = (\n      <a href={`/filters/${filter.get('id')}/edit`}>\n        <FormattedMessage\n          id='filter_modal.added.settings_link'\n          defaultMessage='settings page'\n        />\n      </a>\n    );\n\n    return (\n      <>\n        <h3 className='report-dialog-modal__title'><FormattedMessage id='filter_modal.added.title' defaultMessage='Filter added!' /></h3>\n        <p className='report-dialog-modal__lead'>\n          <FormattedMessage\n            id='filter_modal.added.short_explanation'\n            defaultMessage='This post has been added to the following filter category: {title}.'\n            values={{ title: filter.get('title') }}\n          />\n        </p>\n\n        {expiredMessage}\n        {contextMismatchMessage}\n\n        <h4 className='report-dialog-modal__subtitle'><FormattedMessage id='filter_modal.added.review_and_configure_title' defaultMessage='Filter settings' /></h4>\n        <p className='report-dialog-modal__lead'>\n          <FormattedMessage\n            id='filter_modal.added.review_and_configure'\n            defaultMessage='To review and further configure this filter category, go to the {settings_link}.'\n            values={{ settings_link }}\n          />\n        </p>\n\n        <div className='flex-spacer' />\n\n        <div className='report-dialog-modal__actions'>\n          <Button onClick={this.handleCloseClick}><FormattedMessage id='report.close' defaultMessage='Done' /></Button>\n        </div>\n      </>\n    );\n  }\n\n}\n\nexport default connect(mapStateToProps)(AddedToFilter);\n","import PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport { defineMessages, injectIntl, FormattedMessage } from 'react-intl';\n\nimport { connect } from 'react-redux';\n\nimport { ReactComponent as AddIcon } from '@material-symbols/svg-600/outlined/add.svg';\nimport fuzzysort from 'fuzzysort';\n\nimport { Icon }  from 'mastodon/components/icon';\nimport { toServerSideType } from 'mastodon/utils/filters';\nimport { loupeIcon, deleteIcon } from 'mastodon/utils/icons';\n\nconst messages = defineMessages({\n  search: { id: 'filter_modal.select_filter.search', defaultMessage: 'Search or create' },\n  clear: { id: 'emoji_button.clear', defaultMessage: 'Clear' },\n});\n\nconst mapStateToProps = (state, { contextType }) => ({\n  filters: Array.from(state.get('filters').values()).map((filter) => [\n    filter.get('id'),\n    filter.get('title'),\n    filter.get('keywords')?.map((keyword) => keyword.get('keyword')).join('\\n'),\n    filter.get('expires_at') && filter.get('expires_at') < new Date(),\n    contextType && !filter.get('context').includes(toServerSideType(contextType)),\n  ]),\n});\n\nclass SelectFilter extends PureComponent {\n\n  static propTypes = {\n    onSelectFilter: PropTypes.func.isRequired,\n    onNewFilter: PropTypes.func.isRequired,\n    filters: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.object)),\n    intl: PropTypes.object.isRequired,\n  };\n\n  state = {\n    searchValue: '',\n  };\n\n  search () {\n    const { filters } = this.props;\n    const { searchValue } = this.state;\n\n    if (searchValue === '') {\n      return filters;\n    }\n\n    return fuzzysort.go(searchValue, filters, {\n      keys: ['1', '2'],\n      limit: 5,\n      threshold: -10000,\n    }).map(result => result.obj);\n  }\n\n  renderItem = filter => {\n    let warning = null;\n    if (filter[3] || filter[4]) {\n      warning = (\n        <span className='language-dropdown__dropdown__results__item__common-name'>\n          (\n          {filter[3] && <FormattedMessage id='filter_modal.select_filter.expired' defaultMessage='expired' />}\n          {filter[3] && filter[4] && ', '}\n          {filter[4] && <FormattedMessage id='filter_modal.select_filter.context_mismatch' defaultMessage='does not apply to this context' />}\n          )\n        </span>\n      );\n    }\n\n    return (\n      <div key={filter[0]} role='button' tabIndex={0} data-index={filter[0]} className='language-dropdown__dropdown__results__item' onClick={this.handleItemClick} onKeyDown={this.handleKeyDown}>\n        <span className='language-dropdown__dropdown__results__item__native-name'>{filter[1]}</span> {warning}\n      </div>\n    );\n  };\n\n  renderCreateNew (name) {\n    return (\n      <div key='add-new-filter' role='button' tabIndex={0} className='language-dropdown__dropdown__results__item' onClick={this.handleNewFilterClick} onKeyDown={this.handleKeyDown}>\n        <Icon id='plus' icon={AddIcon} /> <FormattedMessage id='filter_modal.select_filter.prompt_new' defaultMessage='New category: {name}' values={{ name }} />\n      </div>\n    );\n  }\n\n  handleSearchChange = ({ target }) => {\n    this.setState({ searchValue: target.value });\n  };\n\n  setListRef = c => {\n    this.listNode = c;\n  };\n\n  handleKeyDown = e => {\n    const index = Array.from(this.listNode.childNodes).findIndex(node => node === e.currentTarget);\n\n    let element = null;\n\n    switch(e.key) {\n    case ' ':\n    case 'Enter':\n      e.currentTarget.click();\n      break;\n    case 'ArrowDown':\n      element = this.listNode.childNodes[index + 1] || this.listNode.firstChild;\n      break;\n    case 'ArrowUp':\n      element = this.listNode.childNodes[index - 1] || this.listNode.lastChild;\n      break;\n    case 'Tab':\n      if (e.shiftKey) {\n        element = this.listNode.childNodes[index - 1] || this.listNode.lastChild;\n      } else {\n        element = this.listNode.childNodes[index + 1] || this.listNode.firstChild;\n      }\n      break;\n    case 'Home':\n      element = this.listNode.firstChild;\n      break;\n    case 'End':\n      element = this.listNode.lastChild;\n      break;\n    }\n\n    if (element) {\n      element.focus();\n      e.preventDefault();\n      e.stopPropagation();\n    }\n  };\n\n  handleSearchKeyDown = e => {\n    let element = null;\n\n    switch(e.key) {\n    case 'Tab':\n    case 'ArrowDown':\n      element = this.listNode.firstChild;\n\n      if (element) {\n        element.focus();\n        e.preventDefault();\n        e.stopPropagation();\n      }\n\n      break;\n    }\n  };\n\n  handleClear = () => {\n    this.setState({ searchValue: '' });\n  };\n\n  handleItemClick = e => {\n    const value = e.currentTarget.getAttribute('data-index');\n\n    e.preventDefault();\n\n    this.props.onSelectFilter(value);\n  };\n\n  handleNewFilterClick = e => {\n    e.preventDefault();\n\n    this.props.onNewFilter(this.state.searchValue);\n  };\n\n  render () {\n    const { intl } = this.props;\n\n    const { searchValue } = this.state;\n    const isSearching = searchValue !== '';\n    const results = this.search();\n\n    return (\n      <>\n        <h3 className='report-dialog-modal__title'><FormattedMessage id='filter_modal.select_filter.title' defaultMessage='Filter this post' /></h3>\n        <p className='report-dialog-modal__lead'><FormattedMessage id='filter_modal.select_filter.subtitle' defaultMessage='Use an existing category or create a new one' /></p>\n\n        <div className='emoji-mart-search'>\n          <input type='search' value={searchValue} onChange={this.handleSearchChange} onKeyDown={this.handleSearchKeyDown} placeholder={intl.formatMessage(messages.search)} autoFocus />\n          <button type='button' className='emoji-mart-search-icon' disabled={!isSearching} aria-label={intl.formatMessage(messages.clear)} onClick={this.handleClear}>{!isSearching ? loupeIcon : deleteIcon}</button>\n        </div>\n\n        <div className='language-dropdown__dropdown__results emoji-mart-scroll' role='listbox' ref={this.setListRef}>\n          {results.map(this.renderItem)}\n          {isSearching && this.renderCreateNew(searchValue) }\n        </div>\n\n      </>\n    );\n  }\n\n}\n\nexport default connect(mapStateToProps)(injectIntl(SelectFilter));\n","import PropTypes from 'prop-types';\n\nimport { defineMessages, FormattedMessage, injectIntl } from 'react-intl';\n\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport { connect } from 'react-redux';\n\nimport { ReactComponent as CloseIcon } from '@material-symbols/svg-600/outlined/close.svg';\n\nimport { fetchFilters, createFilter, createFilterStatus } from 'mastodon/actions/filters';\nimport { fetchStatus } from 'mastodon/actions/statuses';\nimport { IconButton } from 'mastodon/components/icon_button';\nimport AddedToFilter from 'mastodon/features/filters/added_to_filter';\nimport SelectFilter from 'mastodon/features/filters/select_filter';\n\nconst messages = defineMessages({\n  close: { id: 'lightbox.close', defaultMessage: 'Close' },\n});\n\nclass FilterModal extends ImmutablePureComponent {\n\n  static propTypes = {\n    statusId: PropTypes.string.isRequired,\n    contextType: PropTypes.string,\n    dispatch: PropTypes.func.isRequired,\n    intl: PropTypes.object.isRequired,\n  };\n\n  state = {\n    step: 'select',\n    filterId: null,\n    isSubmitting: false,\n    isSubmitted: false,\n  };\n\n  handleNewFilterSuccess = (result) => {\n    this.handleSelectFilter(result.id);\n  };\n\n  handleSuccess = () => {\n    const { dispatch, statusId } = this.props;\n    dispatch(fetchStatus(statusId, true));\n    this.setState({ isSubmitting: false, isSubmitted: true, step: 'submitted' });\n  };\n\n  handleFail = () => {\n    this.setState({ isSubmitting: false });\n  };\n\n  handleNextStep = step => {\n    this.setState({ step });\n  };\n\n  handleSelectFilter = (filterId) => {\n    const { dispatch, statusId } = this.props;\n\n    this.setState({ isSubmitting: true, filterId });\n\n    dispatch(createFilterStatus({\n      filter_id: filterId,\n      status_id: statusId,\n    }, this.handleSuccess, this.handleFail));\n  };\n\n  handleNewFilter = (title) => {\n    const { dispatch } = this.props;\n\n    this.setState({ isSubmitting: true });\n\n    dispatch(createFilter({\n      title,\n      context: ['home', 'notifications', 'public', 'thread', 'account'],\n      action: 'warn',\n    }, this.handleNewFilterSuccess, this.handleFail));\n  };\n\n  componentDidMount () {\n    const { dispatch } = this.props;\n\n    dispatch(fetchFilters());\n  }\n\n  render () {\n    const {\n      intl,\n      statusId,\n      contextType,\n      onClose,\n    } = this.props;\n\n    const {\n      step,\n      filterId,\n    } = this.state;\n\n    let stepComponent;\n\n    switch(step) {\n    case 'select':\n      stepComponent = (\n        <SelectFilter\n          contextType={contextType}\n          onSelectFilter={this.handleSelectFilter}\n          onNewFilter={this.handleNewFilter}\n        />\n      );\n      break;\n    case 'create':\n      stepComponent = null;\n      break;\n    case 'submitted':\n      stepComponent = (\n        <AddedToFilter\n          contextType={contextType}\n          filterId={filterId}\n          statusId={statusId}\n          onClose={onClose}\n        />\n      );\n    }\n\n    return (\n      <div className='modal-root__modal report-dialog-modal'>\n        <div className='report-modal__target'>\n          <IconButton className='report-modal__close' title={intl.formatMessage(messages.close)} icon='times' iconComponent={CloseIcon} onClick={onClose} size={20} />\n          <FormattedMessage id='filter_modal.title.status' defaultMessage='Filter a post' />\n        </div>\n\n        <div className='report-dialog-modal__container'>\n          {stepComponent}\n        </div>\n      </div>\n    );\n  }\n\n}\n\nexport default connect()(injectIntl(FilterModal));\n"],"sourceRoot":""}