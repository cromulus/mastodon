{"version":3,"sources":["webpack:///./app/javascript/mastodon/containers/media_container.jsx"],"names":["MEDIA_COMPONENTS","MediaGallery","Video","Card","Poll","Hashtag","Audio","MediaContainer","PureComponent","constructor","arguments","_defineProperty","media","index","lang","time","backgroundColor","options","document","body","classList","add","documentElement","style","marginRight","getScrollbarWidth","this","setState","components","props","JSON","parse","componentIndex","getAttribute","mediaList","fromJS","remove","color","render","_this$state$options","_this$state$options2","_this$state$options3","handleOpenVideo","window","self","top","_jsx","IntlProvider","_jsxs","_Fragment","children","map","call","component","i","componentName","Component","card","poll","hashtag","Object","assign","onOpenVideo","onOpenMedia","handleOpenMedia","createPortal","_createElement","key","ModalRoot","state","onClose","handleCloseMedia","MediaModal","currentTime","startTime","autoPlay","volume","defaultVolume","onChangeBackgroundColor","setBackgroundColor"],"mappings":"mRAiBA,MAAMA,EAAmB,CAAEC,uBAAcC,gBAAOC,SAAMC,SAAMC,YAASC,iBAEtD,MAAMC,UAAuBC,gBAAcC,cAAA,SAAAC,WAAAC,YAAA,aAMhD,CACNC,MAAO,KACPC,MAAO,KACPC,KAAM,KACNC,KAAM,KACNC,gBAAiB,KACjBC,QAAS,OACVN,YAAA,wBAEiB,CAACC,EAAOC,EAAOC,KAC/BI,SAASC,KAAKC,UAAUC,IAAI,uBAC5BH,SAASI,gBAAgBC,MAAMC,YAAe,GAAEC,kBAEhDC,KAAKC,SAAS,CAAEf,QAAOC,QAAOC,QAAO,IACtCH,YAAA,wBAEiB,CAACG,EAAMG,KACvB,MAAM,WAAEW,GAAeF,KAAKG,OACtB,MAAEjB,GAAUkB,KAAKC,MAAMH,EAAWX,EAAQe,gBAAgBC,aAAa,eACvEC,EAAYC,iBAAOvB,GAEzBM,SAASC,KAAKC,UAAUC,IAAI,uBAC5BH,SAASI,gBAAgBC,MAAMC,YAAe,GAAEC,kBAEhDC,KAAKC,SAAS,CAAEf,MAAOsB,EAAWpB,OAAMG,WAAU,IACnDN,YAAA,yBAEkB,KACjBO,SAASC,KAAKC,UAAUgB,OAAO,uBAC/BlB,SAASI,gBAAgBC,MAAMC,YAAc,IAE7CE,KAAKC,SAAS,CACZf,MAAO,KACPC,MAAO,KACPE,KAAM,KACNC,gBAAiB,KACjBC,QAAS,MACT,IACHN,YAAA,2BAEoB0B,IACnBX,KAAKC,SAAS,CAAEX,gBAAiBqB,GAAQ,GAC1C,CAEDC,SAAW,IAADC,EAAAC,EAAAC,EACR,MAAM,WAAEb,GAAeF,KAAKG,MAE5B,IAAIa,EAOJ,OAJIC,OAAOC,OAASD,OAAOE,MACzBH,EAAkBhB,KAAKgB,iBAIvBI,YAACC,IAAY,UACXC,eAAAC,WAAA,CAAAC,SAAA,CACG,GAAGC,IAAIC,KAAKxB,GAAY,CAACyB,EAAWC,KACnC,MAAMC,EAAgBF,EAAUpB,aAAa,kBACvCuB,EAAYxD,EAAiBuD,IAC7B,MAAE3C,EAAK,KAAE6C,EAAI,KAAEC,EAAI,QAAEC,KAAY9B,GAAUC,KAAKC,MAAMsB,EAAUpB,aAAa,eAgBnF,OAdA2B,OAAOC,OAAOhC,EAAO,IACfjB,EAAU,CAAEA,MAASuB,iBAAOvB,IAAa,CAAC,KAC1C6C,EAAU,CAAEA,KAAStB,iBAAOsB,IAAa,CAAC,KAC1CC,EAAU,CAAEA,KAASvB,iBAAOuB,IAAa,CAAC,KAC1CC,EAAU,CAAEA,QAASxB,iBAAOwB,IAAa,CAAC,KAExB,UAAlBJ,EAA4B,CAC9BvB,eAAgBsB,EAChBQ,YAAapB,GACX,CACFqB,YAAarC,KAAKsC,mBAIfC,uBACLC,wBAACV,EAAS,IAAK3B,EAAOsC,IAAM,SAAQb,MACpCD,EACD,IAGHP,YAACsB,IAAS,CAACpD,gBAAiBU,KAAK2C,MAAMrD,gBAAiBsD,QAAS5C,KAAK6C,uBAAiB,EACpF7C,KAAK2C,MAAMzD,OACVkC,YAAC0B,IAAU,CACT5D,MAAOc,KAAK2C,MAAMzD,MAClBC,MAAOa,KAAK2C,MAAMxD,OAAS,EAC3BC,KAAMY,KAAK2C,MAAMvD,KACjB2D,YAA+B,QAApBlC,EAAEb,KAAK2C,MAAMpD,eAAO,IAAAsB,OAAA,EAAlBA,EAAoBmC,UACjCC,SAA4B,QAApBnC,EAAEd,KAAK2C,MAAMpD,eAAO,IAAAuB,OAAA,EAAlBA,EAAoBmC,SAC9BC,OAA0B,QAApBnC,EAAEf,KAAK2C,MAAMpD,eAAO,IAAAwB,OAAA,EAAlBA,EAAoBoC,cAC5BP,QAAS5C,KAAK6C,iBACdO,wBAAyBpD,KAAKqD,yBAO5C,E","file":"js/containers/media_container-6a51807818907305bd6d.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\nimport { createPortal } from 'react-dom';\n\nimport { fromJS } from 'immutable';\n\nimport { ImmutableHashtag as Hashtag } from 'mastodon/components/hashtag';\nimport MediaGallery from 'mastodon/components/media_gallery';\nimport ModalRoot from 'mastodon/components/modal_root';\nimport Poll from 'mastodon/components/poll';\nimport Audio from 'mastodon/features/audio';\nimport Card from 'mastodon/features/status/components/card';\nimport MediaModal from 'mastodon/features/ui/components/media_modal';\nimport Video from 'mastodon/features/video';\nimport { IntlProvider } from 'mastodon/locales';\nimport { getScrollbarWidth } from 'mastodon/utils/scrollbar';\n\nconst MEDIA_COMPONENTS = { MediaGallery, Video, Card, Poll, Hashtag, Audio };\n\nexport default class MediaContainer extends PureComponent {\n\n  static propTypes = {\n    components: PropTypes.object.isRequired,\n  };\n\n  state = {\n    media: null,\n    index: null,\n    lang: null,\n    time: null,\n    backgroundColor: null,\n    options: null,\n  };\n\n  handleOpenMedia = (media, index, lang) => {\n    document.body.classList.add('with-modals--active');\n    document.documentElement.style.marginRight = `${getScrollbarWidth()}px`;\n\n    this.setState({ media, index, lang });\n  };\n\n  handleOpenVideo = (lang, options) => {\n    const { components } = this.props;\n    const { media } = JSON.parse(components[options.componentIndex].getAttribute('data-props'));\n    const mediaList = fromJS(media);\n\n    document.body.classList.add('with-modals--active');\n    document.documentElement.style.marginRight = `${getScrollbarWidth()}px`;\n\n    this.setState({ media: mediaList, lang, options });\n  };\n\n  handleCloseMedia = () => {\n    document.body.classList.remove('with-modals--active');\n    document.documentElement.style.marginRight = '0';\n\n    this.setState({\n      media: null,\n      index: null,\n      time: null,\n      backgroundColor: null,\n      options: null,\n    });\n  };\n\n  setBackgroundColor = color => {\n    this.setState({ backgroundColor: color });\n  };\n\n  render () {\n    const { components } = this.props;\n\n    let handleOpenVideo;\n\n    // Don't offer to expand the video in a lightbox if we're in a frame\n    if (window.self === window.top) {\n      handleOpenVideo = this.handleOpenVideo;\n    }\n\n    return (\n      <IntlProvider>\n        <>\n          {[].map.call(components, (component, i) => {\n            const componentName = component.getAttribute('data-component');\n            const Component = MEDIA_COMPONENTS[componentName];\n            const { media, card, poll, hashtag, ...props } = JSON.parse(component.getAttribute('data-props'));\n\n            Object.assign(props, {\n              ...(media   ? { media:   fromJS(media)   } : {}),\n              ...(card    ? { card:    fromJS(card)    } : {}),\n              ...(poll    ? { poll:    fromJS(poll)    } : {}),\n              ...(hashtag ? { hashtag: fromJS(hashtag) } : {}),\n\n              ...(componentName === 'Video' ? {\n                componentIndex: i,\n                onOpenVideo: handleOpenVideo,\n              } : {\n                onOpenMedia: this.handleOpenMedia,\n              }),\n            });\n\n            return createPortal(\n              <Component {...props} key={`media-${i}`} />,\n              component,\n            );\n          })}\n\n          <ModalRoot backgroundColor={this.state.backgroundColor} onClose={this.handleCloseMedia}>\n            {this.state.media && (\n              <MediaModal\n                media={this.state.media}\n                index={this.state.index || 0}\n                lang={this.state.lang}\n                currentTime={this.state.options?.startTime}\n                autoPlay={this.state.options?.autoPlay}\n                volume={this.state.options?.defaultVolume}\n                onClose={this.handleCloseMedia}\n                onChangeBackgroundColor={this.setBackgroundColor}\n              />\n            )}\n          </ModalRoot>\n        </>\n      </IntlProvider>\n    );\n  }\n\n}\n"],"sourceRoot":""}